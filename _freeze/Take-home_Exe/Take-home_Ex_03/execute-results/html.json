{
  "hash": "ca20a0cb0bf30e32546c8ee47000d605",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Take Home Exercise 03\"\nauthor: \"Dew Stella Chan\"\ndate: \"2025-03-29\"\ndate-modified: \"last-modified\"\nexecute:\n  echo: true\n  eval: true\n  warning: false\n  freeze: true\n---\n\n\n\nThe goal of this exercise is to:\n\n-   perform Exploratory Data Analysis (EDA) and Confirmatory Daa Analysis (CDA) on the data sets namely Weather, Dengue Cases and Electricity Consumption.\n\n-   based on the outcome of EDA and CDA to determine the parameters and outputs that will be exposed on the shiny applications and\n\n-   to select appropriate Shiny UI components for exposing the parameters determine above\n\n## Data sets:\n\nThe following data sets were used for this exercise:\n\n-   The climate data set was being scraped from [Meteorological Service Website, Singapore](https://www.weather.gov.sg/climate-historical-daily/) using beautiful soup python package.\n\n    The scraped historical daily weather records in Singapore were then combined using python into one csv file and loaded in R Studio.\n\n-   The dengue data sets were provided at the courtesy of the National Environment Agency (NEA), Singapore.\n\n    The data set is also publicly available on [NEA website](https://www.nea.gov.sg/dengue-zika/dengue/dengue-cases) and [Ministry of Health website.](https://www.moh.gov.sg/others/resources-and-statistics/infectious-disease-statistics-2024-weekly-infectious-diseases-bulletin)\n\n## Libraries:\n\nThe following libraries were used for this take home exercise.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(ggstatsplot, plotly, DT, scales, tidyverse, readxl, SmartEDA, skimr, corrplot, readxl, ggdist, ggridges, ggthemes, colorspace, scales, nortest, easystats, tidymodels)\n```\n:::\n\n\n\n## Data Preparation Process:\n\nThe preliminary data preparation for the data sets were detailed in \\[project webpage\\] (https://isss608jan25group7.netlify.app/shiny/data_prep).\n\nUsing the pre-prepared data, this section will transform the weather data so that EDA and CDA could be performed in the subsequent steps.\n\nFor this part of the analysis, it will focus on the time period from 2014 to Jun 2024. This is to aligned to the availability of data time period from other data sets, the dengue data set is available from 2014 to 2024 and electricity consumption is available from 2005 to Jun 2024.\n\nHence the common period is from **2014 to June 2024**. we would be using this common period.\n\nAlthough the weather station at changi has the most completed dataset,\n\n## Weather Data:\n\nThe following code chuck is to read the weather data.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nweather <- read_rds('data/Ex03/rds/weather.rds')\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nskim(weather)\n```\n:::\n\n\n\nThe list of the active weather stations are are found in this link: https://www.weather.gov.sg/wp-content/uploads/2024/08/Station_Records.pdf\n\nBased on the above summary table, we noted that there are a lot of missing data. with reference to the weather stations data records, 16 weather stations were selected. The names of the selected weather stations were listed in the code chunk below.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfiltered_weather <- filter(weather, \n                           Date >= as.Date(\"2014-01-01\") & \n                           Date <= as.Date(\"2024-06-30\") & \n                           Station %in% c('Admiralty','Ang Mo Kio', 'Changi', \n                                          'Choa Chu Kang (south)', 'Clementi', \n                                          'East Coast Parkway', 'Jurong (West)', \n                                          'Marina Barrage','Newton',\n                                          'Paya Lebar', 'Sembawang',\n                                          'Pasir Panjang', 'Seletar',\n                                          'Tai Seng','Tengah','Tuas South'))%>%\n                            filter(MinTemperature >= 15)\n```\n:::\n\n\n\nUse summary function to view the filtered weather\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary (filtered_weather)\n```\n:::\n\n\n\nThe following code chunk is used to aggreate the data together at monthly dimension.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nweather_Monthly <- filtered_weather %>%\n  group_by(Year, Month) %>%\n  summarize(\n    AvgMeanTemp = mean(MeanTemperature, na.rm = TRUE),\n    MaxTemp = max(MaxTemperature, na.rm = TRUE),\n    MinTemp = min(MinTemperature, na.rm = TRUE),\n    total_rainfall=sum(DailyRainfall,na.rm=TRUE),\n    Highest30minRainfall=max(Highest30minRainfall,na.rm=TRUE),\n    Highest60minRainfall=max(Highest60minRainfall, na.rm=TRUE),\n    Highest120minRainfall=max(Highest120minRainfall, na.rm=TRUE)\n  )\n```\n:::\n\n\n\nThe following code chuck is to aggreate the yearly data together.\n\n2024 data are being dropped as the electricity consumption data for 2024 is incomplete\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nweather_Yearly <- filtered_weather %>%\n  group_by(Year) %>%  # Group by Year only\n  summarize(\n    AvgMeanTemp = mean(MeanTemperature, na.rm = TRUE),\n    MaxTemp = max(MaxTemperature, na.rm = TRUE),        \n    MinTemp = min(MinTemperature, na.rm = TRUE),      \n    total_rainfall = sum(DailyRainfall, na.rm = TRUE),\n    Highest30minRainfall = max(Highest30minRainfall, na.rm = TRUE),\n    Highest60minRainfall = max(Highest60minRainfall, na.rm = TRUE), \n    Highest120minRainfall = max(Highest120minRainfall, na.rm = TRUE)\n  )%>%\n  filter(Year != 2024)  \n```\n:::\n\n\n\n### Data Preparation for the dengue data\n\nThe dengue data set was provided at the courtesy of the National Environment Agency (NEA), Singapore.\n\nThe data set is also publicly available on [NEA website](https://www.nea.gov.sg/dengue-zika/dengue/dengue-cases) and [Ministry of Health website.](https://www.moh.gov.sg/others/resources-and-statistics/infectious-disease-statistics-2024-weekly-infectious-diseases-bulletin)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nMonthly_dengue <-read_xlsx(\"data/Ex03/Denguecases.xlsx\", \"Monthly\")\n```\n:::\n\n\n\nThe following code is to transform the data to longer format, year and months columns to numeric.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nMonthly_dengue_longer <- Monthly_dengue %>%\n  pivot_longer(\n    cols = 2:12,\n    names_to = \"Year\",\n    values_to = \"denguecases\"\n  ) %>%\n  filter(!str_detect(`Month/Year`, \"Total\")) %>%\n  rename(Month = `Month/Year`) %>%\n  mutate(\n    Year = as.numeric(Year),\n    Month = as.numeric(Month)\n  )\n```\n:::\n\n\n\nThe following code chunk is to derive the yearly dengue cases.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nyearly_dengue <- Monthly_dengue_longer %>%\n  filter(Year != 2024) %>%\n  group_by(Year) %>%\n  summarise(denguecases=sum(denguecases))\n\ncolnames(yearly_dengue)\n```\n:::\n\n\n\nThe population data is available at the following data [link](https://tablebuilder.singstat.gov.sg/statistical-tables/downloadMultiple/LGAA_ptQV0-3AQjZN4FFXw).\n\nBased on the National Centre for Infectious Diseases [article](https://www.ncid.sg/Health-Professionals/Articles/Pages/Epidemic-Dengue-in-Singapore-During-COVID-19-Pandemic.aspx#:~:text=In%20fact%2C%20in%202020%2C%20a,Aedes%20aegypti%20mosquito%20since%202017.), the dengue incidence rate is being normalised by population, and transformed to the number of dengue cases per 100, 000 population.\n\nThis is usually only applicable total number of dengue cases reported yearly.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npopulation <- read_xlsx(\"data/Ex03/population.xlsx\", \"Population\")\npopulation$Year <- as.numeric(population$Year)\npopulation$Population <- as.numeric(population$Population)\n\nyearly_dengue <- yearly_dengue %>% left_join(population, by = \"Year\")\n\nyearly_dengue$dengueincidencerate <-yearly_dengue$denguecases/yearly_dengue$Population*100000\n```\n:::\n\n\n\n### Data Preparation for the Electricity consumption data.\n\nThe electricity consumption data set is available at this [link](https://www.ema.gov.sg/resources/singapore-energy-statistics/chapter3).\n\n#### Normalizing the total electricity consumption per household.\n\nThe data set were extracted and joined with the number of Households in Singapore. The Households data is available at this [link](https://www.singstat.gov.sg/find-data/search-by-theme/households/households/latest-data).\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load Monthly electricity data\nMonthly_electricity <- read_xlsx(\"data/Ex03/electricityconsumption_DS.xlsx\", \"Monthly\")\nMonthly_electricity$Year <- as.numeric(Monthly_electricity$Year)\nMonthly_electricity$Monthly_Elec_consump <- as.numeric(Monthly_electricity$Monthly_Elec_consump)\n\n# Check column names\ncolnames(Monthly_electricity)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Year\"                 \"Month\"                \"Monthly_Elec_consump\"\n```\n\n\n:::\n\n```{.r .cell-code}\n# Load Households data\nHouseholds <- read_xlsx(\"data/Ex03/Households.xlsx\", \"Households\")\nHouseholds$Year <- as.numeric(Households$Year)\nHouseholds$NoofHouseholds <- as.numeric(Households$NoofHouseholds)\n\n# Check column names\ncolnames(Households)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Year\"           \"NoofHouseholds\"\n```\n\n\n:::\n\n```{.r .cell-code}\n# Combine datasets and calculate electricity consumption per household\nMonthly_electricity <- Monthly_electricity %>%\n  left_join(Households, by = \"Year\") %>%\n  mutate(Monthly_Elec_per_Household = Monthly_Elec_consump / NoofHouseholds)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nyearly_electricity <-read_xlsx(\"data/Ex03/electricityconsumption_DS.xlsx\", \"Yearly\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load yearly electricity data\nyearly_electricity <- read_xlsx(\"data/Ex03/electricityconsumption_DS.xlsx\", \"Yearly\")\nyearly_electricity$Year <- as.numeric(yearly_electricity$Year)\nyearly_electricity$Yearly_Elec_consump <- as.numeric(yearly_electricity$Yearly_Elec_consump)\n\n# Load households data\nHouseholds <- read_xlsx(\"data/Ex03/Households.xlsx\", \"Households\")\nHouseholds$Year <- as.numeric(Households$Year)\nHouseholds$NoofHouseholds <- as.numeric(Households$NoofHouseholds)\n\n# Combine datasets and calculate yearly electricity consumption per household\nyearly_electricity <- yearly_electricity %>%\n  left_join(Households, by = \"Year\") %>%\n  mutate(\n    Yearly_Elec_per_Household = Yearly_Elec_consump / NoofHouseholds\n  )\n```\n:::\n\n\n\n### Combining data sets\n\nThe code chunks below is for combining the various data sets, both the monthly and the year version will be written to rds.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncombined_Monthly_data <- Monthly_dengue_longer %>% \n  left_join(weather_Monthly, by = c(\"Year\", \"Month\")) %>%\n  left_join(Monthly_electricity, by = c(\"Year\", \"Month\"))%>%\n  filter(!is.na(Monthly_Elec_consump))  %>%\n  select(-NoofHouseholds)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(combined_Monthly_data, file = \"data/Ex03/rds/combined_Monthly_data.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncombined_Monthly_data <- read_rds(\"data/Ex03/rds/combined_Monthly_data.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncombined_Yearly_data <- yearly_dengue %>% \n  left_join(weather_Yearly, by = c(\"Year\")) %>%\n  left_join(yearly_electricity, by = c(\"Year\"))%>%\n  select(-Population, -NoofHouseholds)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(combined_Yearly_data, file = \"data/Ex03/rds/combined_Yearly_data.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncombined_Yearly_data <- read_rds(\"data/Ex03/rds/combined_Yearly_data.rds\")\n```\n:::\n\n\n\n## Exploratory Data Analysis (EDA) and Confirmatory Data Analysis (CDA)\n\n\n### Distribution of of the data\n\n#### Histograms\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyr)\nlibrary(dplyr)\n\n# Ensure all numeric columns are selected (excluding non-numeric ones like \"Year\" or \"Month\")\nlong_data <- combined_Monthly_data %>%\n  pivot_longer(cols = where(is.numeric), names_to = \"Variable\", values_to = \"Value\")\n\n# Create faceted histogram for all continuous variables\nggplot(long_data, aes(x = Value)) + \n  geom_histogram(binwidth =1, fill = \"lightblue\", color = \"black\", alpha = 0.7) +\n  theme_minimal() +\n  facet_wrap(~ Variable, scales = \"free\") +\n  labs(title = \"Histograms of All Continuous Variables\", x = \"Value\", y = \"Frequency\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex_03_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(combined_Monthly_data, aes(x = total_rainfall)) +\n  geom_histogram(aes(y = ..density..), bins = 30, fill = \"lightblue\", color = \"black\", alpha = 0.7) +\n  stat_function(fun = dnorm, args = list(mean = mean(combined_Monthly_data$total_rainfall, na.rm = TRUE), \n                                         sd = sd(combined_Monthly_data$total_rainfall, na.rm = TRUE)), \n                color = \"red\", size = 1) +\n  labs(title = \"Histogram with Normal Curve\", x = \"Total Rainfall\", y = \"Density\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex_03_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(combined_Monthly_data, aes(x = Highest30minRainfall)) +\n  geom_histogram(aes(y = ..density..), bins = 30, fill = \"lightblue\", color = \"black\", alpha = 0.7) +\n  stat_function(fun = dnorm, args = list(mean = mean(combined_Monthly_data$Highest30minRainfall, na.rm = TRUE), \n                                         sd = sd(combined_Monthly_data$Highest30minRainfall\n                                                , na.rm = TRUE)), \n                color = \"red\", size = 1) +\n  labs(title = \"Histogram with Normal Curve\", x = \"Highest 30min Rainfall\", y = \"Density\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex_03_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(combined_Monthly_data, aes(x = Highest60minRainfall)) +\n  geom_histogram(aes(y = ..density..), bins = 30, fill = \"lightblue\", color = \"black\", alpha = 0.7) +\n  stat_function(fun = dnorm, args = list(mean = mean(combined_Monthly_data$Highest60minRainfall, na.rm = TRUE), \n                                         sd = sd(combined_Monthly_data$Highest60minRainfall, na.rm = TRUE)), \n                color = \"red\", size = 1) +\n  labs(title = \"Histogram with Normal Curve\", x = \"Highest 60min Rainfall\", y = \"Density\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex_03_files/figure-html/unnamed-chunk-24-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(combined_Monthly_data, aes(x = Highest120minRainfall)) +\n  geom_histogram(aes(y = ..density..), bins = 30, fill = \"lightblue\", color = \"black\", alpha = 0.7) +\n  stat_function(fun = dnorm, args = list(mean = mean(combined_Monthly_data$Highest120minRainfall, na.rm = TRUE), \n                                         sd = sd(combined_Monthly_data$Highest120minRainfall, na.rm = TRUE)), \n                color = \"red\", size = 1) +\n  labs(title = \"Histogram with Normal Curve\", x = \"Highest 120min Rainfall\", y = \"Density\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex_03_files/figure-html/unnamed-chunk-25-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(combined_Monthly_data, aes(x = Monthly_Elec_consump)) +\n  geom_histogram(aes(y = ..density..), bins = 30, fill = \"lightblue\", color = \"black\", alpha = 0.7) +\n  stat_function(fun = dnorm, args = list(mean = mean(combined_Monthly_data$Monthly_Elec_consump, na.rm = TRUE), \n                                         sd = sd(combined_Monthly_data$Monthly_Elec_consump, na.rm = TRUE)), \n                color = \"red\", size = 1) +\n  labs(title = \"Histogram with Normal Curve\", x = \"Monthly Electricity Consumption\", y = \"Density\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex_03_files/figure-html/unnamed-chunk-26-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(combined_Monthly_data, aes(x = denguecases)) +\n  geom_histogram(aes(y = ..density..), bins = 30, fill = \"lightblue\", color = \"black\", alpha = 0.7) +\n  stat_function(fun = dnorm, args = list(mean = mean(combined_Monthly_data$denguecases, na.rm = TRUE), \n                                         sd = sd(combined_Monthly_data$denguecases, na.rm = TRUE)), \n                color = \"red\", size = 1) +\n  labs(title = \"Histogram with Normal Curve\", x = \"Dengue cases\", y = \"Density\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex_03_files/figure-html/unnamed-chunk-27-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary (combined_Monthly_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     Month            Year       denguecases      AvgMeanTemp   \n Min.   : 1.00   Min.   :2014   Min.   : 136.0   Min.   :25.94  \n 1st Qu.: 3.75   1st Qu.:2016   1st Qu.: 399.8   1st Qu.:27.55  \n Median : 6.50   Median :2018   Median : 890.0   Median :28.13  \n Mean   : 6.50   Mean   :2018   Mean   :1228.4   Mean   :28.02  \n 3rd Qu.: 9.25   3rd Qu.:2021   3rd Qu.:1447.2   3rd Qu.:28.56  \n Max.   :12.00   Max.   :2023   Max.   :8001.0   Max.   :29.25  \n    MaxTemp         MinTemp     total_rainfall  Highest30minRainfall\n Min.   :33.30   Min.   :20.0   Min.   :  330   Min.   :17.80       \n 1st Qu.:34.80   1st Qu.:21.6   1st Qu.: 2035   1st Qu.:37.70       \n Median :35.40   Median :22.0   Median : 3202   Median :44.80       \n Mean   :35.33   Mean   :21.9   Mean   : 3960   Mean   :44.28       \n 3rd Qu.:35.70   3rd Qu.:22.3   3rd Qu.: 5830   3rd Qu.:49.65       \n Max.   :37.90   Max.   :23.4   Max.   :13505   Max.   :67.00       \n Highest60minRainfall Highest120minRainfall Monthly_Elec_consump\n Min.   : 20.00       Min.   : 25.40        Min.   :488.7       \n 1st Qu.: 49.60       1st Qu.: 59.35        1st Qu.:594.1       \n Median : 62.70       Median : 69.60        Median :635.6       \n Mean   : 61.22       Mean   : 71.89        Mean   :636.4       \n 3rd Qu.: 71.85       3rd Qu.: 84.45        3rd Qu.:671.1       \n Max.   :102.60       Max.   :122.80        Max.   :885.0       \n Monthly_Elec_per_Household\n Min.   :0.0003859         \n 1st Qu.:0.0004514         \n Median :0.0004821         \n Mean   :0.0004800         \n 3rd Qu.:0.0005080         \n Max.   :0.0006448         \n```\n\n\n:::\n:::\n\n\n\n\n### Correlation between the various variables.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggstatsplot::ggcorrmat(\n  data = combined_Monthly_data, \n  cor.vars = 3:12)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex_03_files/figure-html/unnamed-chunk-29-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggstatsplot::ggcorrmat(\n  data = combined_Yearly_data, \n  cor.vars = 2:12)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex_03_files/figure-html/unnamed-chunk-30-1.png){width=672}\n:::\n:::\n\n\n\n\n\n### Distribution of the data\n\n### Ridgelines of variables \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncombined_Monthly_data$Year <- as.factor(combined_Monthly_data$Year)\n\nggplot(combined_Monthly_data, \n       aes(x = AvgMeanTemp, \n           y = Year)) +  # Ensure 'Year' is correctly mapped to y-axis\n  geom_density_ridges(\n    scale = 3,\n    rel_min_height = 0.01,\n    bandwidth = 3.4,\n    fill = lighten(\"#7097BB\", 0.3),  # Adjust fill color\n    color = \"white\"\n  ) +\n  scale_x_continuous(\n    name = \"Monthly Mean Temperature\",\n    expand = c(0, 0)\n  ) +\n  scale_y_discrete(\n    name = NULL, \n    expand = expansion(add = c(0.2, 2.6))\n  ) +\n  theme_ridges()\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex_03_files/figure-html/unnamed-chunk-31-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Perform both Shapiro-Wilk and Anderson-Darling tests for each year\nnormality_results <- combined_Monthly_data %>%\n  group_by(Year) %>%\n  summarise(\n    Shapiro_p = shapiro.test(AvgMeanTemp)$p.value,  # Shapiro-Wilk test p-value\n    Anderson_p = ad.test(AvgMeanTemp)$p.value      # Anderson-Darling test p-value\n  ) %>%\n  mutate(\n    Shapiro_Result = ifelse(Shapiro_p > 0.05, \"Normal\", \"Not Normal\"),  # Interpretation\n    Anderson_Result = ifelse(Anderson_p > 0.05, \"Normal\", \"Not Normal\")  # Interpretation\n  )\n\n# View combined results\nprint(normality_results)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10 × 5\n   Year  Shapiro_p Anderson_p Shapiro_Result Anderson_Result\n   <fct>     <dbl>      <dbl> <chr>          <chr>          \n 1 2014     0.753       0.690 Normal         Normal         \n 2 2015     0.274       0.358 Normal         Normal         \n 3 2016     0.408       0.529 Normal         Normal         \n 4 2017     0.200       0.179 Normal         Normal         \n 5 2018     0.156       0.266 Normal         Normal         \n 6 2019     0.0745      0.137 Normal         Normal         \n 7 2020     0.953       0.920 Normal         Normal         \n 8 2021     0.0612      0.127 Normal         Normal         \n 9 2022     0.889       0.637 Normal         Normal         \n10 2023     0.130       0.102 Normal         Normal         \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(combined_Monthly_data, \n       aes(x = MaxTemp, \n           y = Year)) + \n  geom_density_ridges(\n    scale = 3,\n    rel_min_height = 0.01,\n    bandwidth = 3.4,\n    fill = lighten(\"#7097BB\", 0.3),  \n    color = \"white\"\n  ) +\n  scale_x_continuous(\n    name = \"Monthly Max Temperature\",\n    expand = c(0, 0)\n  ) +\n  scale_y_discrete(\n    name = NULL, \n    expand = expansion(add = c(0.2, 2.6))\n  ) +\n  theme_ridges()\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex_03_files/figure-html/unnamed-chunk-33-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Perform both Shapiro-Wilk and Anderson-Darling tests for each year\nnormality_results <- combined_Monthly_data %>%\n  group_by(Year) %>%\n  summarise(\n    Shapiro_p = shapiro.test(MaxTemp)$p.value,  # Shapiro-Wilk test p-value\n    Anderson_p = ad.test(MaxTemp)$p.value      # Anderson-Darling test p-value\n  ) %>%\n  mutate(\n    Shapiro_Result = ifelse(Shapiro_p > 0.05, \"Normal\", \"Not Normal\"),  # Interpretation\n    Anderson_Result = ifelse(Anderson_p > 0.05, \"Normal\", \"Not Normal\")  # Interpretation\n  )\n\n# View combined results\nprint(normality_results)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10 × 5\n   Year  Shapiro_p Anderson_p Shapiro_Result Anderson_Result\n   <fct>     <dbl>      <dbl> <chr>          <chr>          \n 1 2014      0.770      0.763 Normal         Normal         \n 2 2015      0.499      0.388 Normal         Normal         \n 3 2016      0.696      0.579 Normal         Normal         \n 4 2017      0.915      0.936 Normal         Normal         \n 5 2018      0.988      0.927 Normal         Normal         \n 6 2019      0.530      0.353 Normal         Normal         \n 7 2020      0.878      0.837 Normal         Normal         \n 8 2021      0.300      0.127 Normal         Normal         \n 9 2022      0.801      0.808 Normal         Normal         \n10 2023      0.469      0.403 Normal         Normal         \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(combined_Monthly_data, \n       aes(x = MinTemp, \n           y = Year)) + \n  geom_density_ridges(\n    scale = 3,\n    rel_min_height = 0.01,\n    bandwidth = 3.4,\n    fill = lighten(\"#7097BB\", 0.3),  \n    color = \"white\"\n  ) +\n  scale_x_continuous(\n    name = \"Monthly Min Temperature\",\n    expand = c(0, 0)\n  ) +\n  scale_y_discrete(\n    name = NULL, \n    expand = expansion(add = c(0.2, 2.6))\n  ) +\n  theme_ridges()\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex_03_files/figure-html/unnamed-chunk-35-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Perform both Shapiro-Wilk and Anderson-Darling tests for each year\nnormality_results <- combined_Monthly_data %>%\n  group_by(Year) %>%\n  summarise(\n    Shapiro_p = shapiro.test(MinTemp)$p.value,  # Shapiro-Wilk test p-value\n    Anderson_p = ad.test(MinTemp)$p.value      # Anderson-Darling test p-value\n  ) %>%\n  mutate(\n    Shapiro_Result = ifelse(Shapiro_p > 0.05, \"Normal\", \"Not Normal\"),  # Interpretation\n    Anderson_Result = ifelse(Anderson_p > 0.05, \"Normal\", \"Not Normal\")  # Interpretation\n  )\n\n# View combined results\nprint(normality_results)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10 × 5\n   Year  Shapiro_p Anderson_p Shapiro_Result Anderson_Result\n   <fct>     <dbl>      <dbl> <chr>          <chr>          \n 1 2014     0.0432     0.0659 Not Normal     Normal         \n 2 2015     0.0151     0.0400 Not Normal     Not Normal     \n 3 2016     0.379      0.384  Normal         Normal         \n 4 2017     0.0836     0.125  Normal         Normal         \n 5 2018     0.634      0.673  Normal         Normal         \n 6 2019     0.644      0.586  Normal         Normal         \n 7 2020     0.330      0.361  Normal         Normal         \n 8 2021     0.976      0.848  Normal         Normal         \n 9 2022     0.217      0.135  Normal         Normal         \n10 2023     0.835      0.887  Normal         Normal         \n```\n\n\n:::\n:::\n\n\n\n### One-Way Anova\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncombined_Monthly_data$total_rainfall <- as.numeric(combined_Monthly_data$total_rainfall)\ncombined_Monthly_data <- combined_Monthly_data %>%\n  filter(!is.na(total_rainfall))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggbetweenstats(\n  data = combined_Monthly_data,\n  x = Year, \n  y = total_rainfall, \n  type = \"np\",  # Non-Parametric ANOVA, Parameteric - p\n  mean.ci = TRUE,  # Display mean and confidence interval\n  pairwise.comparisons = TRUE,  # Perform pairwise tests\n  pairwise.display = \"significant\",  # Show only significant pairs\n  p.adjust.method = \"fdr\",  # Adjust for multiple comparisons\n  messages = FALSE  # Suppress additional messages\n)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex_03_files/figure-html/unnamed-chunk-38-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggbetweenstats(\n  data = combined_Monthly_data,\n  x = Year, \n  y = MaxTemp, \n  type = \"p\",  # Non-Parametric ANOVA, Parameteric - p\n  mean.ci = TRUE,  # Display mean and confidence interval\n  pairwise.comparisons = TRUE,  # Perform pairwise tests\n  pairwise.display = \"significant\",  # Show only significant pairs\n  p.adjust.method = \"fdr\",  # Adjust for multiple comparisons\n  messages = FALSE  # Suppress additional messages\n)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex_03_files/figure-html/unnamed-chunk-39-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggbetweenstats(\n  data = combined_Monthly_data,\n  x = Year, \n  y = denguecases , \n  type = \"Np\",  # Non-Parametric ANOVA, Parameteric - p\n  mean.ci = TRUE,  # Display mean and confidence interval\n  pairwise.comparisons = TRUE,  # Perform pairwise tests\n  pairwise.display = \"significant\",  # Show only significant pairs\n  p.adjust.method = \"fdr\",  # Adjust for multiple comparisons\n  messages = FALSE  # Suppress additional messages\n)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex_03_files/figure-html/unnamed-chunk-40-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggbetweenstats(\n  data = combined_Monthly_data,\n  x = Year, \n  y = Monthly_Elec_consump, \n  type = \"np\",  # Non-Parametric ANOVA, Parameteric - p\n  mean.ci = TRUE,  # Display mean and confidence interval\n  pairwise.comparisons = TRUE,  # Perform pairwise tests\n  pairwise.display = \"significant\",  # Show only significant pairs\n  p.adjust.method = \"fdr\",  # Adjust for multiple comparisons\n  messages = FALSE  # Suppress additional messages\n)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex_03_files/figure-html/unnamed-chunk-41-1.png){width=672}\n:::\n:::\n\n\n\n### Multi-Linear Regression (MLR) \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncolnames(combined_Monthly_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"Month\"                      \"Year\"                      \n [3] \"denguecases\"                \"AvgMeanTemp\"               \n [5] \"MaxTemp\"                    \"MinTemp\"                   \n [7] \"total_rainfall\"             \"Highest30minRainfall\"      \n [9] \"Highest60minRainfall\"       \"Highest120minRainfall\"     \n[11] \"Monthly_Elec_consump\"       \"Monthly_Elec_per_Household\"\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel_health <- lm(denguecases ~ MaxTemp + MinTemp + AvgMeanTemp+ Highest30minRainfall+ Highest60minRainfall + Highest120minRainfall , data = combined_Monthly_data)\nsummary(model_health)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = denguecases ~ MaxTemp + MinTemp + AvgMeanTemp + \n    Highest30minRainfall + Highest60minRainfall + Highest120minRainfall, \n    data = combined_Monthly_data)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-1686.2  -777.6  -349.0   309.1  6266.0 \n\nCoefficients:\n                       Estimate Std. Error t value Pr(>|t|)   \n(Intercept)           -4042.043   6810.808  -0.593  0.55405   \nMaxTemp                 -84.736    171.349  -0.495  0.62190   \nMinTemp                 -97.471    192.511  -0.506  0.61362   \nAvgMeanTemp             385.532    180.815   2.132  0.03516 * \nHighest30minRainfall    -70.668     23.995  -2.945  0.00392 **\nHighest60minRainfall     38.498     22.709   1.695  0.09278 . \nHighest120minRainfall     5.116     12.927   0.396  0.69302   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1270 on 113 degrees of freedom\nMultiple R-squared:  0.1037,\tAdjusted R-squared:  0.05613 \nF-statistic: 2.179 on 6 and 113 DF,  p-value: 0.05003\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncheck_collinearity(model_health)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# Check for Multicollinearity\n\nLow Correlation\n\n                  Term  VIF    VIF 95% CI Increased SE Tolerance\n               MaxTemp 1.21 [1.07,  1.64]         1.10      0.83\n               MinTemp 1.06 [1.00,  2.20]         1.03      0.94\n           AvgMeanTemp 1.26 [1.10,  1.68]         1.12      0.80\n  Highest30minRainfall 4.13 [3.14,  5.59]         2.03      0.24\n Highest120minRainfall 4.83 [3.64,  6.57]         2.20      0.21\n Tolerance 95% CI\n     [0.61, 0.94]\n     [0.45, 1.00]\n     [0.60, 0.91]\n     [0.18, 0.32]\n     [0.15, 0.27]\n\nModerate Correlation\n\n                 Term  VIF    VIF 95% CI Increased SE Tolerance\n Highest60minRainfall 9.19 [6.77, 12.62]         3.03      0.11\n Tolerance 95% CI\n     [0.08, 0.15]\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncheck_c_health <- check_collinearity(model_health)\nplot(check_c_health)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex_03_files/figure-html/unnamed-chunk-45-1.png){width=672}\n:::\n:::\n\n\n\n\n#### Removed Highest Rainfall in 60 min data due to multicollinearity\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel_health <- lm(denguecases ~ MaxTemp + MinTemp + AvgMeanTemp+ Highest30minRainfall + Highest120minRainfall , data = combined_Monthly_data)\nsummary(model_health)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = denguecases ~ MaxTemp + MinTemp + AvgMeanTemp + \n    Highest30minRainfall + Highest120minRainfall, data = combined_Monthly_data)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-1426.3  -740.9  -317.0   214.7  6515.1 \n\nCoefficients:\n                       Estimate Std. Error t value Pr(>|t|)  \n(Intercept)           -5341.726   6822.916  -0.783   0.4353  \nMaxTemp                 -63.337    172.282  -0.368   0.7138  \nMinTemp                 -74.587    193.609  -0.385   0.7008  \nAvgMeanTemp             383.419    182.291   2.103   0.0376 *\nHighest30minRainfall    -41.923     17.117  -2.449   0.0158 *\nHighest120minRainfall    21.606      8.584   2.517   0.0132 *\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1280 on 114 degrees of freedom\nMultiple R-squared:  0.08093,\tAdjusted R-squared:  0.04062 \nF-statistic: 2.008 on 5 and 114 DF,  p-value: 0.08278\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncheck_model(model_health)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex_03_files/figure-html/unnamed-chunk-47-1.png){width=1536}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel_elec <- lm(Monthly_Elec_consump ~ MaxTemp + MinTemp + AvgMeanTemp+ Highest30minRainfall+ Highest60minRainfall + Highest120minRainfall , data = combined_Monthly_data)\n\nsummary(model_elec)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = Monthly_Elec_consump ~ MaxTemp + MinTemp + AvgMeanTemp + \n    Highest30minRainfall + Highest60minRainfall + Highest120minRainfall, \n    data = combined_Monthly_data)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-116.93  -38.01   -5.09   24.84  232.05 \n\nCoefficients:\n                       Estimate Std. Error t value Pr(>|t|)    \n(Intercept)           -687.0746   297.7437  -2.308   0.0228 *  \nMaxTemp                -10.1754     7.4907  -1.358   0.1770    \nMinTemp                 14.4465     8.4159   1.717   0.0888 .  \nAvgMeanTemp             46.3414     7.9046   5.863  4.6e-08 ***\nHighest30minRainfall    -0.6473     1.0490  -0.617   0.5384    \nHighest60minRainfall     0.1667     0.9928   0.168   0.8669    \nHighest120minRainfall    1.2033     0.5651   2.129   0.0354 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 55.51 on 113 degrees of freedom\nMultiple R-squared:  0.3323,\tAdjusted R-squared:  0.2969 \nF-statistic: 9.374 on 6 and 113 DF,  p-value: 2.437e-08\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncheck_c_elec <- check_collinearity(model_elec)\nplot(check_c_elec)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex_03_files/figure-html/unnamed-chunk-49-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel_elec <- lm(Monthly_Elec_consump ~ MaxTemp + MinTemp + AvgMeanTemp+ Highest30minRainfall + Highest120minRainfall , data = combined_Monthly_data)\n\nsummary(model_elec)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = Monthly_Elec_consump ~ MaxTemp + MinTemp + AvgMeanTemp + \n    Highest30minRainfall + Highest120minRainfall, data = combined_Monthly_data)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-117.63  -38.03   -5.61   24.57  233.13 \n\nCoefficients:\n                       Estimate Std. Error t value Pr(>|t|)    \n(Intercept)           -692.7030   294.5877  -2.351 0.020418 *  \nMaxTemp                -10.0827     7.4385  -1.355 0.177943    \nMinTemp                 14.5456     8.3593   1.740 0.084550 .  \nAvgMeanTemp             46.3323     7.8706   5.887 4.04e-08 ***\nHighest30minRainfall    -0.5228     0.7390  -0.707 0.480776    \nHighest120minRainfall    1.2747     0.3706   3.439 0.000815 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 55.28 on 114 degrees of freedom\nMultiple R-squared:  0.3322,\tAdjusted R-squared:  0.3029 \nF-statistic: 11.34 on 5 and 114 DF,  p-value: 6.835e-09\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncheck_model(model_elec)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex_03_files/figure-html/unnamed-chunk-51-1.png){width=1536}\n:::\n:::\n\n\n\n\n### Disclaimer\n\nThis take home exercise was done with reference to methods in Prof Kam's e text book https://r4va.netlify.app/ , materials on R available online and the use of Microsoft co-pilot to troubleshoot syntax errors and streamline codes.",
    "supporting": [
      "Take-home_Ex_03_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}