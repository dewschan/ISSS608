[
  {
    "objectID": "Take-home_Exe/Take-home_Ex_01.html",
    "href": "Take-home_Exe/Take-home_Ex_01.html",
    "title": "Take-Home Exercise 01",
    "section": "",
    "text": "This quota document shows the visual analytics conducted for the Take Home Exercise 01, The data set chosen is the Heart Attack in Japan Youth Vs Adult from Kaggle.\n\n\nThe main task is to develop graphical visuals for a media company on an article for the possible factor leading to heart attack trend in Japanese Youth.\nThe plan is to carry out exploratory and confirmatory data analysis to confirm the observed trend before doing up the visuals required for the graphic.\nSince the goal is to find out if there are any observable trends and health or lifestyle factors leading to the occurance of heart attack in japanese youth, we will be completing filtering the data into 3 main groups for exploretary analysis.\nFor this analysis we will be definiing Japanese youth as less 35 of age and the rest of the population considered as adults.\n\ngroup of interest: Youth (15 to 34 https://www.jil.go.jp/english/jli/documents/2023/041-05.pdf (TBC))\nyouth with no heart attack 3)Adult with heart attack\nadult with heart attack.\n\nGiven elderly are considered to be above 65, they will be omitted from this study\n\n\n\nThe following code chunk indicate the list of packages used for this Take Home Exercise 01\n\npacman::p_load(haven, SmartEDA, tidyverse, tidymodels, ggdist, ggridges, ggthemes,\n               colorspace, gridExtra, ggstatsplot, GGally, \n               readxl, performance, parameters, see)\n\n\n\n\nAs the data is in csv format, the data is loaded using read_csv function.\n\nheart &lt;- read_csv(\"data/Ex01/japan_heart_attack_dataset.csv\")\n\n\n\nsummary and head functions are used to view and examin the data type before further processing is carried out.\n\nsummary(heart)\n\n      Age           Gender             Region          Smoking_History   \n Min.   :18.00   Length:30000       Length:30000       Length:30000      \n 1st Qu.:33.00   Class :character   Class :character   Class :character  \n Median :48.00   Mode  :character   Mode  :character   Mode  :character  \n Mean   :48.49                                                           \n 3rd Qu.:64.00                                                           \n Max.   :79.00                                                           \n Diabetes_History   Hypertension_History Cholesterol_Level Physical_Activity \n Length:30000       Length:30000         Min.   : 80.02    Length:30000      \n Class :character   Class :character     1st Qu.:179.55    Class :character  \n Mode  :character   Mode  :character     Median :199.77    Mode  :character  \n                                         Mean   :199.90                      \n                                         3rd Qu.:220.16                      \n                                         Max.   :336.86                      \n Diet_Quality       Alcohol_Consumption Stress_Levels         BMI       \n Length:30000       Length:30000        Min.   : 0.000   Min.   : 5.58  \n Class :character   Class :character    1st Qu.: 3.644   1st Qu.:21.63  \n Mode  :character   Mode  :character    Median : 4.993   Median :24.96  \n                                        Mean   : 5.002   Mean   :25.00  \n                                        3rd Qu.: 6.353   3rd Qu.:28.36  \n                                        Max.   :10.000   Max.   :46.10  \n   Heart_Rate      Systolic_BP      Diastolic_BP    Family_History    \n Min.   : 30.03   Min.   : 56.23   Min.   : 39.95   Length:30000      \n 1st Qu.: 63.25   1st Qu.:109.79   1st Qu.: 73.26   Class :character  \n Median : 69.95   Median :119.90   Median : 80.12   Mode  :character  \n Mean   : 69.98   Mean   :119.91   Mean   : 80.03                     \n 3rd Qu.: 76.66   3rd Qu.:130.02   3rd Qu.: 86.76                     \n Max.   :108.78   Max.   :178.77   Max.   :117.67                     \n Heart_Attack_Occurrence Extra_Column_1     Extra_Column_2     \n Length:30000            Min.   :0.000007   Min.   :0.0000052  \n Class :character        1st Qu.:0.253308   1st Qu.:0.2473606  \n Mode  :character        Median :0.500820   Median :0.4961980  \n                         Mean   :0.501939   Mean   :0.4978940  \n                         3rd Qu.:0.750529   3rd Qu.:0.7473954  \n                         Max.   :0.999965   Max.   :0.9999894  \n Extra_Column_3      Extra_Column_4      Extra_Column_5     Extra_Column_6     \n Min.   :0.0000227   Min.   :0.0000934   Min.   :0.000105   Min.   :0.0000531  \n 1st Qu.:0.2483093   1st Qu.:0.2522110   1st Qu.:0.251803   1st Qu.:0.2559989  \n Median :0.4976104   Median :0.4976175   Median :0.501987   Median :0.5017726  \n Mean   :0.4981949   Mean   :0.5005952   Mean   :0.501410   Mean   :0.5027631  \n 3rd Qu.:0.7476807   3rd Qu.:0.7505662   3rd Qu.:0.753657   3rd Qu.:0.7511886  \n Max.   :0.9999694   Max.   :0.9999869   Max.   :0.999995   Max.   :0.9998892  \n Extra_Column_7      Extra_Column_8      Extra_Column_9     \n Min.   :0.0000678   Min.   :0.0000449   Min.   :0.0000305  \n 1st Qu.:0.2482839   1st Qu.:0.2509790   1st Qu.:0.2502452  \n Median :0.4988157   Median :0.4985698   Median :0.4984491  \n Mean   :0.4980753   Mean   :0.5003557   Mean   :0.5002292  \n 3rd Qu.:0.7456378   3rd Qu.:0.7507293   3rd Qu.:0.7512186  \n Max.   :0.9999900   Max.   :0.9999300   Max.   :0.9999852  \n Extra_Column_10     Extra_Column_11     Extra_Column_12    \n Min.   :0.0000133   Min.   :0.0000008   Min.   :0.0000713  \n 1st Qu.:0.2484256   1st Qu.:0.2538092   1st Qu.:0.2505341  \n Median :0.5031040   Median :0.5067589   Median :0.5038609  \n Mean   :0.5010694   Mean   :0.5044949   Mean   :0.5008624  \n 3rd Qu.:0.7522686   3rd Qu.:0.7556257   3rd Qu.:0.7511780  \n Max.   :0.9999928   Max.   :0.9999578   Max.   :0.9999484  \n Extra_Column_13     Extra_Column_14     Extra_Column_15    \n Min.   :0.0000204   Min.   :0.0000025   Min.   :0.0000241  \n 1st Qu.:0.2473108   1st Qu.:0.2482152   1st Qu.:0.2482573  \n Median :0.5041162   Median :0.4943841   Median :0.5009406  \n Mean   :0.5004557   Mean   :0.4976507   Mean   :0.4999634  \n 3rd Qu.:0.7497094   3rd Qu.:0.7456212   3rd Qu.:0.7487379  \n Max.   :0.9999451   Max.   :0.9999779   Max.   :0.9999913  \n\n\n\nhead (heart)\n\n# A tibble: 6 × 32\n    Age Gender Region Smoking_History Diabetes_History Hypertension_History\n  &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt;           &lt;chr&gt;            &lt;chr&gt;               \n1    56 Male   Urban  Yes             No               No                  \n2    69 Male   Urban  No              No               No                  \n3    46 Male   Rural  Yes             No               No                  \n4    32 Female Urban  No              No               No                  \n5    60 Female Rural  No              No               No                  \n6    25 Female Rural  No              No               No                  \n# ℹ 26 more variables: Cholesterol_Level &lt;dbl&gt;, Physical_Activity &lt;chr&gt;,\n#   Diet_Quality &lt;chr&gt;, Alcohol_Consumption &lt;chr&gt;, Stress_Levels &lt;dbl&gt;,\n#   BMI &lt;dbl&gt;, Heart_Rate &lt;dbl&gt;, Systolic_BP &lt;dbl&gt;, Diastolic_BP &lt;dbl&gt;,\n#   Family_History &lt;chr&gt;, Heart_Attack_Occurrence &lt;chr&gt;, Extra_Column_1 &lt;dbl&gt;,\n#   Extra_Column_2 &lt;dbl&gt;, Extra_Column_3 &lt;dbl&gt;, Extra_Column_4 &lt;dbl&gt;,\n#   Extra_Column_5 &lt;dbl&gt;, Extra_Column_6 &lt;dbl&gt;, Extra_Column_7 &lt;dbl&gt;,\n#   Extra_Column_8 &lt;dbl&gt;, Extra_Column_9 &lt;dbl&gt;, Extra_Column_10 &lt;dbl&gt;, …\n\n\n\n\n\n\ncolSums(is.na(heart))\n\n                    Age                  Gender                  Region \n                      0                       0                       0 \n        Smoking_History        Diabetes_History    Hypertension_History \n                      0                       0                       0 \n      Cholesterol_Level       Physical_Activity            Diet_Quality \n                      0                       0                       0 \n    Alcohol_Consumption           Stress_Levels                     BMI \n                      0                       0                       0 \n             Heart_Rate             Systolic_BP            Diastolic_BP \n                      0                       0                       0 \n         Family_History Heart_Attack_Occurrence          Extra_Column_1 \n                      0                       0                       0 \n         Extra_Column_2          Extra_Column_3          Extra_Column_4 \n                      0                       0                       0 \n         Extra_Column_5          Extra_Column_6          Extra_Column_7 \n                      0                       0                       0 \n         Extra_Column_8          Extra_Column_9         Extra_Column_10 \n                      0                       0                       0 \n        Extra_Column_11         Extra_Column_12         Extra_Column_13 \n                      0                       0                       0 \n        Extra_Column_14         Extra_Column_15 \n                      0                       0 \n\n\nAs the metadata did not specify the data is of the extra columns hence we will not be able the data in the “Extra_column 1 to 15”\nThe first step of data preparation is to remove them first.\n\nHA &lt;- heart %&gt;% select (1:17) %&gt;% filter (Age &lt; 64)\n\nAfter removing the Extra columns, we continue by examining the data using the summary and head (HA) function.\n\nsummary(HA)\n\n      Age           Gender             Region          Smoking_History   \n Min.   :18.00   Length:22158       Length:22158       Length:22158      \n 1st Qu.:29.00   Class :character   Class :character   Class :character  \n Median :40.00   Mode  :character   Mode  :character   Mode  :character  \n Mean   :40.37                                                           \n 3rd Qu.:52.00                                                           \n Max.   :63.00                                                           \n Diabetes_History   Hypertension_History Cholesterol_Level Physical_Activity \n Length:22158       Length:22158         Min.   : 80.02    Length:22158      \n Class :character   Class :character     1st Qu.:179.50    Class :character  \n Mode  :character   Mode  :character     Median :199.78    Mode  :character  \n                                         Mean   :199.90                      \n                                         3rd Qu.:220.15                      \n                                         Max.   :311.24                      \n Diet_Quality       Alcohol_Consumption Stress_Levels         BMI       \n Length:22158       Length:22158        Min.   : 0.000   Min.   : 5.58  \n Class :character   Class :character    1st Qu.: 3.636   1st Qu.:21.63  \n Mode  :character   Mode  :character    Median : 4.973   Median :24.96  \n                                        Mean   : 4.987   Mean   :25.00  \n                                        3rd Qu.: 6.336   3rd Qu.:28.39  \n                                        Max.   :10.000   Max.   :44.12  \n   Heart_Rate      Systolic_BP     Diastolic_BP    Family_History    \n Min.   : 30.59   Min.   : 63.1   Min.   : 39.95   Length:22158      \n 1st Qu.: 63.22   1st Qu.:109.8   1st Qu.: 73.24   Class :character  \n Median : 69.92   Median :119.9   Median : 80.10   Mode  :character  \n Mean   : 69.94   Mean   :120.0   Mean   : 80.03                     \n 3rd Qu.: 76.64   3rd Qu.:130.2   3rd Qu.: 86.76                     \n Max.   :108.78   Max.   :176.6   Max.   :117.66                     \n Heart_Attack_Occurrence\n Length:22158           \n Class :character       \n Mode  :character       \n                        \n                        \n                        \n\n\n\nhead(HA)\n\n# A tibble: 6 × 17\n    Age Gender Region Smoking_History Diabetes_History Hypertension_History\n  &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt;           &lt;chr&gt;            &lt;chr&gt;               \n1    56 Male   Urban  Yes             No               No                  \n2    46 Male   Rural  Yes             No               No                  \n3    32 Female Urban  No              No               No                  \n4    60 Female Rural  No              No               No                  \n5    25 Female Rural  No              No               No                  \n6    38 Female Urban  Yes             No               No                  \n# ℹ 11 more variables: Cholesterol_Level &lt;dbl&gt;, Physical_Activity &lt;chr&gt;,\n#   Diet_Quality &lt;chr&gt;, Alcohol_Consumption &lt;chr&gt;, Stress_Levels &lt;dbl&gt;,\n#   BMI &lt;dbl&gt;, Heart_Rate &lt;dbl&gt;, Systolic_BP &lt;dbl&gt;, Diastolic_BP &lt;dbl&gt;,\n#   Family_History &lt;chr&gt;, Heart_Attack_Occurrence &lt;chr&gt;\n\n\n\n\nIt was observed that the data consist two main types: namely continous and categorical. The following steps we will examine the distibution of the each type of data in details.\n\nHA &lt;- HA %&gt;%\n  mutate(Age_Grp = ifelse(Age &gt; 35, \"Adult\", \"Youth\")) %&gt;%\n  mutate(Event_Grp = ifelse(Age_Grp == \"Adult\" & Heart_Attack_Occurrence == \"Yes\", \"Adult_HA\",\n                    ifelse(Age_Grp == \"Adult\" & Heart_Attack_Occurrence == \"No\", \"Adult_No_HA\",\n                    ifelse(Age_Grp == \"Youth\" & Heart_Attack_Occurrence == \"Yes\", \"Youth_HA\",\n                    ifelse(Age_Grp == \"Youth\" & Heart_Attack_Occurrence == \"No\", \"Youth_No_HA\",NA)))))\n\nHA &lt;- HA %&gt;%\n  mutate(BMI_cat = case_when( \n    BMI &lt; 18.5 ~ \"Underweight\",\n    BMI &gt;= 18.5 & BMI &lt; 24.9 ~ \"Normal\",\n    BMI &gt;= 25 & BMI &lt; 29.9 ~ \"Overweight\",\n    BMI &gt;= 30 ~ \"Obese\",\n    TRUE ~ NA_character_\n  ))\n\nHA &lt;- HA %&gt;%\n  mutate(BP_cat = case_when(\n    Systolic_BP &lt; 120 & Diastolic_BP &lt; 80 ~ \"Normal\",\n    (Systolic_BP &gt;= 120 & Systolic_BP &lt; 130) & Diastolic_BP &lt; 80 ~ \"Elevated\",\n    (Systolic_BP &gt;= 130 & Systolic_BP &lt; 140) | (Diastolic_BP &gt;= 80 & Diastolic_BP &lt; 90) ~ \"High Stage 1\",\n    Systolic_BP &gt;= 140 | Diastolic_BP &gt;= 90 ~ \"High Stage 2\",\n    TRUE ~ NA_character_\n  ))\nHA &lt;- HA %&gt;%\n  mutate(Cholesterol_Level_cat = case_when(\n    Cholesterol_Level &lt; 200 ~ \"Desirable\",\n    Cholesterol_Level &gt;= 200 & Cholesterol_Level &lt; 239 ~ \"Borderline High\",\n    Cholesterol_Level &gt;= 240 ~ \"High\",\n    TRUE ~ NA_character_\n  ))\n\nHA &lt;- HA %&gt;%\n  mutate(Stress_Level_cat = case_when(\n    Stress_Levels &lt; 3 ~ \"Low\",\n    Stress_Levels &gt;= 3 & Stress_Levels &lt; 6 ~ \"Moderate\",\n    Stress_Levels &gt;= 6 ~ \"High\",\n    TRUE ~ NA_character_\n  ))\n\n\nHA &lt;- HA %&gt;%\n  mutate(Heart_Attack_Occurrence_num = ifelse(Heart_Attack_Occurrence == \"Yes\", 1,\n                                              ifelse(Heart_Attack_Occurrence == \"No\", 0, NA)))\n\nHA &lt;- HA %&gt;% \n  mutate(Heart_Rate_cat = case_when(\n    Heart_Rate &lt; 70 ~ \"Below Normal\",\n    Heart_Rate &gt;=  70 & Heart_Rate &lt;= 100 ~ \"Normal\",\n    Heart_Rate  &gt; 100 ~ \"Elevated\",\n    TRUE ~ NA_character_\n  ))\n\n\n# Removal of NA data \n\nHA &lt;- HA %&gt;%\n  filter(!is.na(BMI_cat) & !is.na(Cholesterol_Level_cat))\n\n\nHA_Yes &lt;- filter(HA, Heart_Attack_Occurrence == \"Yes\")\nHA_No &lt;- filter(HA, Heart_Attack_Occurrence == \"No\")\nHA_youth &lt;- filter(HA, Age_Grp == \"Youth\")\n\n\n\n\n\nThe aim of this task is to examine if there are any trends in categorical data in the occurance of heart attack in Japnaese population.\nThe code below is extract our the categorical data and summarise into the occurance of heart attack\n\ncategorical_columns &lt;- HA %&gt;% select(where(~is.character(.x) || is.factor(.x)))\n\ncount_occurrences &lt;- categorical_columns %&gt;%\n  pivot_longer(cols= - c(Heart_Attack_Occurrence, Age_Grp, Event_Grp), names_to = \"Category\", values_to = \"Value\") %&gt;%\n  group_by(Category, Value, Age_Grp, Heart_Attack_Occurrence, Event_Grp) %&gt;%\n  summarise(Occurrences = n(), .groups = 'drop')\n\nprint(count_occurrences)\n\n# A tibble: 156 × 6\n   Category           Value Age_Grp Heart_Attack_Occurre…¹ Event_Grp Occurrences\n   &lt;chr&gt;              &lt;chr&gt; &lt;chr&gt;   &lt;chr&gt;                  &lt;chr&gt;           &lt;int&gt;\n 1 Alcohol_Consumpti… High  Adult   No                     Adult_No…        2308\n 2 Alcohol_Consumpti… High  Adult   Yes                    Adult_HA          277\n 3 Alcohol_Consumpti… High  Youth   No                     Youth_No…        1525\n 4 Alcohol_Consumpti… High  Youth   Yes                    Youth_HA          157\n 5 Alcohol_Consumpti… Low   Adult   No                     Adult_No…        3572\n 6 Alcohol_Consumpti… Low   Adult   Yes                    Adult_HA          402\n 7 Alcohol_Consumpti… Low   Youth   No                     Youth_No…        2372\n 8 Alcohol_Consumpti… Low   Youth   Yes                    Youth_HA          262\n 9 Alcohol_Consumpti… Mode… Adult   No                     Adult_No…        4804\n10 Alcohol_Consumpti… Mode… Adult   Yes                    Adult_HA          526\n# ℹ 146 more rows\n# ℹ abbreviated name: ¹​Heart_Attack_Occurrence\n\n\n\n# Create bar plots for each categorical field\nbar_plots &lt;- count_occurrences %&gt;%\n  ggplot(aes(x = Value, y = Occurrences, fill = Event_Grp)) + \n  geom_bar(stat = \"identity\", position = position_dodge()) +  # Use position_dodge for side-by-side bars\n  facet_wrap(~ Category, scales = \"free\") +\n  theme_minimal() +\n  labs(title = \"Counts of Unique Values in Categorical Fields\",\n       x = \"Unique Values\",\n       y = \"Count\") \n\n# Print the bar plots\nprint(bar_plots)\n\n\n\n\n\n\n\n\n\n\n\ncount_occurrences_youth &lt;- filter(count_occurrences, Age_Grp == \"Youth\")\n\n# Create bar plots for each categorical field\nbar_plots &lt;- count_occurrences_youth %&gt;%\n  ggplot(aes(x = Value, y = Occurrences, fill = Heart_Attack_Occurrence)) + \n  geom_bar(stat = \"identity\", position = position_dodge()) +  # Use position_dodge for side-by-side bars\n  facet_wrap(~ Category, scales = \"free\") +\n  theme_minimal() +\n  labs(title = \"Counts of Unique Values in Categorical Fields\",\n       x = \"Unique Values\",\n       y = \"Count\") \n\n# Print the bar plots\nprint(bar_plots)\n\n\n\n\n\n\n\n\n\n#pm &lt;- ggpairs(HA, columns = 1:17, ggplot2::aes(colour = Heart_Attack_Occurrence ))\n#print (pm)\n\n\n\n\n\n\n\n# Select only the continuous columns (numeric)\ncontin_col_HA &lt;- HA %&gt;% select(where(is.numeric), Heart_Attack_Occurrence, Age_Grp)\n\n\ncontin_col_HA_Long&lt;-contin_col_HA %&gt;%\n  pivot_longer(cols = -c(Heart_Attack_Occurrence, Age_Grp), names_to = \"Field\", values_to = \"Value\")\n               \ncontin_col_HA_Long_Yes &lt;- filter(contin_col_HA_Long, Heart_Attack_Occurrence == \"Yes\")              \n\n\n# Create histograms with density plots for continuous variables\nhistograms &lt;- ggplot(contin_col_HA_Long, aes(x = Value, fill = Heart_Attack_Occurrence )) + \n  geom_histogram(binwidth = 1, alpha = 0.8) + \n  theme_minimal() + \n  labs(title = \"Histograms of Continuous Fields\", x = \"Value\", y = \"Frequency\")+\n  facet_wrap(~ Field, scales = \"free\") \n\n# Print the histograms\nprint(histograms)\n\n\n\n\n\n\n\n\n\n# Create histograms with density plots for continuous variables\nhistograms &lt;- ggplot(contin_col_HA_Long_Yes, aes(x = Value, fill = Age_Grp )) + \n  geom_histogram(binwidth = 1, alpha = 0.8) + \n  theme_minimal() + \n  labs(title = \"Histograms of Continuous Fields\", x = \"Value\", y = \"Frequency\")+\n  facet_wrap(~ Field, scales = \"free\") \n\n# Print the histograms\nprint(histograms)\n\n\n\n\n\n\n\n\n\n\n\n# Adding density plot\nggplot(HA, aes(x = Stress_Levels)) +\n  geom_histogram(aes(y = ..density..), binwidth = 1, fill = \"blue\", alpha = 0.5) +\n  geom_density(color = \"red\", size = 1) +\n  labs(title = \"Histogram and Density Plot of Stress Levels\", x = \"Stress Levels\", y = \"Density\")\n\n\n\n\n\n\n\n\n\n\n\n\nggbarstats(HA, \n           x=Age_Grp,\n           y=Heart_Attack_Occurrence)\n\n\n\n\n\n\n\n\n\nggbarstats(HA, \n           x=Event_Grp,\n           y=Region)\n\n\n\n\n\n\n\n\n\nggbarstats(HA_youth, \n           x= Heart_Attack_Occurrence,\n           y=BMI_cat)\n\n\n\n\n\n\n\n\n\n# Select categorical columns\ncategorical_columns &lt;- HA_youth %&gt;% select(where(~is.character(.) || is.factor(.)))\n\n# Function to perform Chi-Square test and visualize the results\nanalyze_association &lt;- function(data, x, y) {\n  # Perform Chi-Square test\n  table &lt;- table(data[[x]], data[[y]])\n  chi_test &lt;- chisq.test(table)\n  \n  # Print Chi-Square test results\n  print(paste(\"Chi-Square Test between\", x, \"and\", y))\n  print(chi_test)\n  \n  # Visualize the results using bar plot\n  plot &lt;- ggplot(HA_youth, aes_string(x = x, fill = y)) +\n    geom_bar(position = \"dodge\") +\n    labs(title = paste(\"Bar Plot of\", x, \"vs\", y, \"\\nChi-Square p-value:\", format(chi_test$p.value, digits=4)),\n         x = x,\n         y = \"Count\") +\n    theme_bw()\n  \n  print(plot)\n}\n\n# Analyze association for each categorical column with Event_Grp\nfor (column in colnames(categorical_columns)) {\n  if (column != \"Heart_Attack_Occurrence\") { # Skip Event_Grp column itself\n    analyze_association(HA_youth, \"Heart_Attack_Occurrence\", column)\n  }\n}\n\n[1] \"Chi-Square Test between Heart_Attack_Occurrence and Gender\"\n\n    Pearson's Chi-squared test with Yates' continuity correction\n\ndata:  table\nX-squared = 0.0027295, df = 1, p-value = 0.9583\n\n\n\n\n\n\n\n\n\n[1] \"Chi-Square Test between Heart_Attack_Occurrence and Region\"\n\n    Pearson's Chi-squared test with Yates' continuity correction\n\ndata:  table\nX-squared = 0.12335, df = 1, p-value = 0.7254\n\n\n\n\n\n\n\n\n\n[1] \"Chi-Square Test between Heart_Attack_Occurrence and Smoking_History\"\n\n    Pearson's Chi-squared test with Yates' continuity correction\n\ndata:  table\nX-squared = 0.084801, df = 1, p-value = 0.7709\n\n\n\n\n\n\n\n\n\n[1] \"Chi-Square Test between Heart_Attack_Occurrence and Diabetes_History\"\n\n    Pearson's Chi-squared test with Yates' continuity correction\n\ndata:  table\nX-squared = 7.2967, df = 1, p-value = 0.006908\n\n\n\n\n\n\n\n\n\n[1] \"Chi-Square Test between Heart_Attack_Occurrence and Hypertension_History\"\n\n    Pearson's Chi-squared test with Yates' continuity correction\n\ndata:  table\nX-squared = 1.3112, df = 1, p-value = 0.2522\n\n\n\n\n\n\n\n\n\n[1] \"Chi-Square Test between Heart_Attack_Occurrence and Physical_Activity\"\n\n    Pearson's Chi-squared test\n\ndata:  table\nX-squared = 0.27734, df = 2, p-value = 0.8705\n\n\n\n\n\n\n\n\n\n[1] \"Chi-Square Test between Heart_Attack_Occurrence and Diet_Quality\"\n\n    Pearson's Chi-squared test\n\ndata:  table\nX-squared = 2.9799, df = 2, p-value = 0.2254\n\n\n\n\n\n\n\n\n\n[1] \"Chi-Square Test between Heart_Attack_Occurrence and Alcohol_Consumption\"\n\n    Pearson's Chi-squared test\n\ndata:  table\nX-squared = 3.9517, df = 3, p-value = 0.2667\n\n\n\n\n\n\n\n\n\n[1] \"Chi-Square Test between Heart_Attack_Occurrence and Family_History\"\n\n    Pearson's Chi-squared test with Yates' continuity correction\n\ndata:  table\nX-squared = 0.52143, df = 1, p-value = 0.4702\n\n\n\n\n\n\n\n\n\n[1] \"Chi-Square Test between Heart_Attack_Occurrence and Age_Grp\"\n\n    Chi-squared test for given probabilities\n\ndata:  table\nX-squared = 5658.3, df = 1, p-value &lt; 2.2e-16\n\n\n\n\n\n\n\n\n\n[1] \"Chi-Square Test between Heart_Attack_Occurrence and Event_Grp\"\n\n    Pearson's Chi-squared test with Yates' continuity correction\n\ndata:  table\nX-squared = 8591.3, df = 1, p-value &lt; 2.2e-16\n\n\n\n\n\n\n\n\n\n[1] \"Chi-Square Test between Heart_Attack_Occurrence and BMI_cat\"\n\n    Pearson's Chi-squared test\n\ndata:  table\nX-squared = 8.312, df = 3, p-value = 0.03998\n\n\n\n\n\n\n\n\n\n[1] \"Chi-Square Test between Heart_Attack_Occurrence and BP_cat\"\n\n    Pearson's Chi-squared test\n\ndata:  table\nX-squared = 2.718, df = 3, p-value = 0.4372\n\n\n\n\n\n\n\n\n\n[1] \"Chi-Square Test between Heart_Attack_Occurrence and Cholesterol_Level_cat\"\n\n    Pearson's Chi-squared test\n\ndata:  table\nX-squared = 3.6477, df = 2, p-value = 0.1614\n\n\n\n\n\n\n\n\n\n[1] \"Chi-Square Test between Heart_Attack_Occurrence and Stress_Level_cat\"\n\n    Pearson's Chi-squared test\n\ndata:  table\nX-squared = 5.3458, df = 2, p-value = 0.06905\n\n\n\n\n\n\n\n\n\n[1] \"Chi-Square Test between Heart_Attack_Occurrence and Heart_Rate_cat\"\n\n    Pearson's Chi-squared test\n\ndata:  table\nX-squared = 0.59882, df = 2, p-value = 0.7413\n\n\n\n\n\n\n\n\n\n\nggplot(HA, aes(x = Stress_Levels, fill = Heart_Attack_Occurrence)) +  # Map fill to Heart_Attack_Occurrence\n  geom_histogram(aes(y = ..density..), binwidth = 1, alpha = 0.5, position = \"identity\") +  # Adjust position for overlap\n  geom_density(color = \"red\", size = 1, alpha = 0.3) +  # Density plot with transparency\n  labs(title = \"Histogram and Density Plot of Stress Levels\",\n       x = \"Stress Levels\",\n       y = \"Density\") +\n  theme_minimal(base_size = 14) +  # Improve overall theme and font size\n  scale_fill_brewer(palette = \"Set2\", name = \"Heart Attack Occurrence\") +  # Use a color palette for filling\n  theme(legend.position = \"top\")  # Position the legend at the top\n\n\n\n\n\n\n\n\n\n# Create individual boxplots for each continuous field\n#individual_boxplots &lt;- \n  #ggplot(HA, aes(x = Field, y = Value, fill = Heart_Attack_Occurrence)) +\n  #geom_boxplot() +\n  #facet_wrap(~ Field, scales = \"free\") +\n  #theme_minimal() +\n  #labs(title = \"Boxplots of Continuous Fields\",\n       #x = \"Field\",\n       #y = \"Value\")\n\n# Print the individual boxplots\n#print(individual_boxplots)\n\n\nsummary(HA_Yes)\n\n      Age          Gender             Region          Smoking_History   \n Min.   :18.0   Length:2156        Length:2156        Length:2156       \n 1st Qu.:30.0   Class :character   Class :character   Class :character  \n Median :40.0   Mode  :character   Mode  :character   Mode  :character  \n Mean   :40.9                                                           \n 3rd Qu.:52.0                                                           \n Max.   :63.0                                                           \n Diabetes_History   Hypertension_History Cholesterol_Level Physical_Activity \n Length:2156        Length:2156          Min.   :105.2     Length:2156       \n Class :character   Class :character     1st Qu.:179.1     Class :character  \n Mode  :character   Mode  :character     Median :199.5     Mode  :character  \n                                         Mean   :198.9                       \n                                         3rd Qu.:219.5                       \n                                         Max.   :311.2                       \n Diet_Quality       Alcohol_Consumption Stress_Levels         BMI        \n Length:2156        Length:2156         Min.   : 0.000   Min.   : 9.435  \n Class :character   Class :character    1st Qu.: 3.503   1st Qu.:21.712  \n Mode  :character   Mode  :character    Median : 4.873   Median :24.784  \n                                        Mean   : 4.863   Mean   :24.904  \n                                        3rd Qu.: 6.185   3rd Qu.:28.042  \n                                        Max.   :10.000   Max.   :42.630  \n   Heart_Rate      Systolic_BP      Diastolic_BP    Family_History    \n Min.   : 34.36   Min.   : 65.71   Min.   : 44.30   Length:2156       \n 1st Qu.: 62.88   1st Qu.:109.74   1st Qu.: 73.23   Class :character  \n Median : 70.00   Median :119.27   Median : 80.19   Mode  :character  \n Mean   : 69.86   Mean   :119.68   Mean   : 80.11                     \n 3rd Qu.: 76.51   3rd Qu.:130.22   3rd Qu.: 86.94                     \n Max.   :102.94   Max.   :167.81   Max.   :113.85                     \n Heart_Attack_Occurrence   Age_Grp           Event_Grp        \n Length:2156             Length:2156        Length:2156       \n Class :character        Class :character   Class :character  \n Mode  :character        Mode  :character   Mode  :character  \n                                                              \n                                                              \n                                                              \n   BMI_cat             BP_cat          Cholesterol_Level_cat Stress_Level_cat  \n Length:2156        Length:2156        Length:2156           Length:2156       \n Class :character   Class :character   Class :character      Class :character  \n Mode  :character   Mode  :character   Mode  :character      Mode  :character  \n                                                                               \n                                                                               \n                                                                               \n Heart_Attack_Occurrence_num Heart_Rate_cat    \n Min.   :1                   Length:2156       \n 1st Qu.:1                   Class :character  \n Median :1                   Mode  :character  \n Mean   :1                                     \n 3rd Qu.:1                                     \n Max.   :1                                     \n\n\n\nggplot(data=HA,\n       aes(x =  Alcohol_Consumption, y = Cholesterol_Level, color =Heart_Attack_Occurrence )) +\n    geom_boxplot()+\n  facet_wrap(~ Age_Grp)\n\n\n\n\n\n\n\n\n\nggplot(data=HA_Yes,\n       aes(x = Diet_Quality, y = BMI, color = Age_Grp)) +\n    geom_boxplot()+\n  facet_wrap(~ Region)\n\n\n\n\n\n\n\n\n\n#| fig-width: 24 #to widen the space\n#| fig-height: 24 #to lengthen the graph\nggplot(HA_youth, \n       aes(x = Heart_Attack_Occurrence, y = BMI)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.01,\n               .width = 0.01,\n               point_colour = NA, \n               size=0.01) +\n  geom_boxplot(width = .05,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\", \n            justification = 1.2, \n            binwidth = .5,\n            dotsize = .1)\n\n\n\n\n\n\n\n\n\nscatter_plot &lt;- ggplot(HA, aes(x = Cholesterol_Level, y = BMI, color = Heart_Attack_Occurrence)) +\n  geom_point(size = 2, alpha = 0.5) +  # Adjust point size and transparency\n  labs(title = \"Scatter Plot of Stress Levels vs. BMI\",\n       x = \"Stress Levels\",\n       y = \"BMI\",\n       color = \"Heart Attack Occurrence\") +  # Add title and labels\n  theme_minimal(base_size = 14) +  # Use a clean theme with larger base font size\n  scale_color_manual(values = c(\"blue\", \"red\"))  # Customize colors if needed\n\n# Print the scatter plot\nprint(scatter_plot)\n\n\n\n\n\n\n\n\n\n# Step 1: Select only continuous (numeric) columns along with Heart_Attack_Occurrence\ncontinuous_columns &lt;- HA %&gt;% \n  select(where(is.numeric), Heart_Attack_Occurrence)\n\n# Step 2: Reshape the data to long format\nlong_data &lt;- continuous_columns %&gt;%\n  pivot_longer(-Heart_Attack_Occurrence, names_to = \"Variable\", values_to = \"Value\")\n\n# Step 3: Create scatter plots for each continuous variable against Heart_Attack_Occurrence\nscatter_plot &lt;- ggplot(long_data, aes(x = Value, y = as.numeric(Heart_Attack_Occurrence), color = Heart_Attack_Occurrence)) +\n  geom_point(alpha = 0.7, size = 2) +  # Adjust point size and transparency\n  facet_wrap(~ Variable, scales = \"free\") +  # Create facets for each variable\n  labs(title = \"Scatter Plots of Continuous Variables by Heart Attack Occurrence\",\n       x = \"Value\",\n       y = \"Heart Attack Occurrence (0 = No, 1 = Yes)\") +  # y-axis represents occurrence\n  theme_minimal(base_size = 14) +  # Clean theme\n  scale_color_manual(values = c(\"blue\", \"red\"))  # Customize colors for heart attack occurrence\n\n# Print the scatter plots\nprint(scatter_plot)\n\n\n\n\n\n\n\n# Print the scatter plots\nprint(scatter_plot)\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(HA, aes(x = Smoking_History, fill = Heart_Attack_Occurrence)) +\n  geom_bar(position = \"fill\") +\n  labs(title = \"Smoking History vs Heart Attack Occurrence\", \n       y = \"Proportion\", \n       x = \"Smoking History\") +\n  scale_fill_manual(values = c(\"lightblue\", \"salmon\"), name = \"Heart Attack Occurrence\")\n\n\n\n\n\n\n\n\n\n\n\n\nggbetweenstats(\n  data = HA_youth,\n  x = Heart_Attack_Occurrence, \n  y = Stress_Levels,\n  type = \"p\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"s\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE\n)\n\n\n\n\n\n\n\n\n\nggbetweenstats(\n  data = HA_youth,\n  x = Heart_Attack_Occurrence, \n  y = BMI,\n  type = \"p\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"s\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE\n)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThe very small effect size (Hedges’ g = 0.04) suggests that although the difference is statistically significant, it may not be practically relevant. In other words, the difference in means may not be large enough to have meaningful implications in a real-world context.\n\n\n\n\n\n\nmodel &lt;- lm(Heart_Attack_Occurrence_num ~ Cholesterol_Level_cat + BMI_cat + Diabetes_History, data = HA_youth)\nmodel\n\n\nCall:\nlm(formula = Heart_Attack_Occurrence_num ~ Cholesterol_Level_cat + \n    BMI_cat + Diabetes_History, data = HA_youth)\n\nCoefficients:\n                   (Intercept)  Cholesterol_Level_catDesirable  \n                      0.100475                       -0.001157  \n     Cholesterol_Level_catHigh                    BMI_catObese  \n                     -0.021622                       -0.025376  \n             BMI_catOverweight              BMI_catUnderweight  \n                     -0.005984                       -0.015551  \n           Diabetes_HistoryYes  \n                      0.021381  \n\n\n\ncheck_n &lt;- check_normality(model)\nplot(check_n)\n\n\n\n\n\n\n\n\n\ncheck_h &lt;- check_heteroscedasticity(model)\n\nplot(check_h)\n\n\n\n\n\n\n\n\n\ncheck_model(model)\n\n\n\n\n\n\n\n\n\n\n\nThe health crsis of heart attack is largely depended on the possibility"
  },
  {
    "objectID": "Take-home_Exe/Take-home_Ex_01.html#tasks-required",
    "href": "Take-home_Exe/Take-home_Ex_01.html#tasks-required",
    "title": "Take-Home Exercise 01",
    "section": "",
    "text": "The main task is to develop graphical visuals for a media company on an article for the possible factor leading to heart attack trend in Japanese Youth.\nThe plan is to carry out exploratory and confirmatory data analysis to confirm the observed trend before doing up the visuals required for the graphic.\nSince the goal is to find out if there are any observable trends and health or lifestyle factors leading to the occurance of heart attack in japanese youth, we will be completing filtering the data into 3 main groups for exploretary analysis.\nFor this analysis we will be definiing Japanese youth as less 35 of age and the rest of the population considered as adults.\n\ngroup of interest: Youth (15 to 34 https://www.jil.go.jp/english/jli/documents/2023/041-05.pdf (TBC))\nyouth with no heart attack 3)Adult with heart attack\nadult with heart attack.\n\nGiven elderly are considered to be above 65, they will be omitted from this study"
  },
  {
    "objectID": "Take-home_Exe/Take-home_Ex_01.html#loading-of-packages",
    "href": "Take-home_Exe/Take-home_Ex_01.html#loading-of-packages",
    "title": "Take-Home Exercise 01",
    "section": "",
    "text": "The following code chunk indicate the list of packages used for this Take Home Exercise 01\n\npacman::p_load(haven, SmartEDA, tidyverse, tidymodels, ggdist, ggridges, ggthemes,\n               colorspace, gridExtra, ggstatsplot, GGally, \n               readxl, performance, parameters, see)"
  },
  {
    "objectID": "Take-home_Exe/Take-home_Ex_01.html#loading-of-data",
    "href": "Take-home_Exe/Take-home_Ex_01.html#loading-of-data",
    "title": "Take-Home Exercise 01",
    "section": "",
    "text": "As the data is in csv format, the data is loaded using read_csv function.\n\nheart &lt;- read_csv(\"data/Ex01/japan_heart_attack_dataset.csv\")\n\n\n\nsummary and head functions are used to view and examin the data type before further processing is carried out.\n\nsummary(heart)\n\n      Age           Gender             Region          Smoking_History   \n Min.   :18.00   Length:30000       Length:30000       Length:30000      \n 1st Qu.:33.00   Class :character   Class :character   Class :character  \n Median :48.00   Mode  :character   Mode  :character   Mode  :character  \n Mean   :48.49                                                           \n 3rd Qu.:64.00                                                           \n Max.   :79.00                                                           \n Diabetes_History   Hypertension_History Cholesterol_Level Physical_Activity \n Length:30000       Length:30000         Min.   : 80.02    Length:30000      \n Class :character   Class :character     1st Qu.:179.55    Class :character  \n Mode  :character   Mode  :character     Median :199.77    Mode  :character  \n                                         Mean   :199.90                      \n                                         3rd Qu.:220.16                      \n                                         Max.   :336.86                      \n Diet_Quality       Alcohol_Consumption Stress_Levels         BMI       \n Length:30000       Length:30000        Min.   : 0.000   Min.   : 5.58  \n Class :character   Class :character    1st Qu.: 3.644   1st Qu.:21.63  \n Mode  :character   Mode  :character    Median : 4.993   Median :24.96  \n                                        Mean   : 5.002   Mean   :25.00  \n                                        3rd Qu.: 6.353   3rd Qu.:28.36  \n                                        Max.   :10.000   Max.   :46.10  \n   Heart_Rate      Systolic_BP      Diastolic_BP    Family_History    \n Min.   : 30.03   Min.   : 56.23   Min.   : 39.95   Length:30000      \n 1st Qu.: 63.25   1st Qu.:109.79   1st Qu.: 73.26   Class :character  \n Median : 69.95   Median :119.90   Median : 80.12   Mode  :character  \n Mean   : 69.98   Mean   :119.91   Mean   : 80.03                     \n 3rd Qu.: 76.66   3rd Qu.:130.02   3rd Qu.: 86.76                     \n Max.   :108.78   Max.   :178.77   Max.   :117.67                     \n Heart_Attack_Occurrence Extra_Column_1     Extra_Column_2     \n Length:30000            Min.   :0.000007   Min.   :0.0000052  \n Class :character        1st Qu.:0.253308   1st Qu.:0.2473606  \n Mode  :character        Median :0.500820   Median :0.4961980  \n                         Mean   :0.501939   Mean   :0.4978940  \n                         3rd Qu.:0.750529   3rd Qu.:0.7473954  \n                         Max.   :0.999965   Max.   :0.9999894  \n Extra_Column_3      Extra_Column_4      Extra_Column_5     Extra_Column_6     \n Min.   :0.0000227   Min.   :0.0000934   Min.   :0.000105   Min.   :0.0000531  \n 1st Qu.:0.2483093   1st Qu.:0.2522110   1st Qu.:0.251803   1st Qu.:0.2559989  \n Median :0.4976104   Median :0.4976175   Median :0.501987   Median :0.5017726  \n Mean   :0.4981949   Mean   :0.5005952   Mean   :0.501410   Mean   :0.5027631  \n 3rd Qu.:0.7476807   3rd Qu.:0.7505662   3rd Qu.:0.753657   3rd Qu.:0.7511886  \n Max.   :0.9999694   Max.   :0.9999869   Max.   :0.999995   Max.   :0.9998892  \n Extra_Column_7      Extra_Column_8      Extra_Column_9     \n Min.   :0.0000678   Min.   :0.0000449   Min.   :0.0000305  \n 1st Qu.:0.2482839   1st Qu.:0.2509790   1st Qu.:0.2502452  \n Median :0.4988157   Median :0.4985698   Median :0.4984491  \n Mean   :0.4980753   Mean   :0.5003557   Mean   :0.5002292  \n 3rd Qu.:0.7456378   3rd Qu.:0.7507293   3rd Qu.:0.7512186  \n Max.   :0.9999900   Max.   :0.9999300   Max.   :0.9999852  \n Extra_Column_10     Extra_Column_11     Extra_Column_12    \n Min.   :0.0000133   Min.   :0.0000008   Min.   :0.0000713  \n 1st Qu.:0.2484256   1st Qu.:0.2538092   1st Qu.:0.2505341  \n Median :0.5031040   Median :0.5067589   Median :0.5038609  \n Mean   :0.5010694   Mean   :0.5044949   Mean   :0.5008624  \n 3rd Qu.:0.7522686   3rd Qu.:0.7556257   3rd Qu.:0.7511780  \n Max.   :0.9999928   Max.   :0.9999578   Max.   :0.9999484  \n Extra_Column_13     Extra_Column_14     Extra_Column_15    \n Min.   :0.0000204   Min.   :0.0000025   Min.   :0.0000241  \n 1st Qu.:0.2473108   1st Qu.:0.2482152   1st Qu.:0.2482573  \n Median :0.5041162   Median :0.4943841   Median :0.5009406  \n Mean   :0.5004557   Mean   :0.4976507   Mean   :0.4999634  \n 3rd Qu.:0.7497094   3rd Qu.:0.7456212   3rd Qu.:0.7487379  \n Max.   :0.9999451   Max.   :0.9999779   Max.   :0.9999913  \n\n\n\nhead (heart)\n\n# A tibble: 6 × 32\n    Age Gender Region Smoking_History Diabetes_History Hypertension_History\n  &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt;           &lt;chr&gt;            &lt;chr&gt;               \n1    56 Male   Urban  Yes             No               No                  \n2    69 Male   Urban  No              No               No                  \n3    46 Male   Rural  Yes             No               No                  \n4    32 Female Urban  No              No               No                  \n5    60 Female Rural  No              No               No                  \n6    25 Female Rural  No              No               No                  \n# ℹ 26 more variables: Cholesterol_Level &lt;dbl&gt;, Physical_Activity &lt;chr&gt;,\n#   Diet_Quality &lt;chr&gt;, Alcohol_Consumption &lt;chr&gt;, Stress_Levels &lt;dbl&gt;,\n#   BMI &lt;dbl&gt;, Heart_Rate &lt;dbl&gt;, Systolic_BP &lt;dbl&gt;, Diastolic_BP &lt;dbl&gt;,\n#   Family_History &lt;chr&gt;, Heart_Attack_Occurrence &lt;chr&gt;, Extra_Column_1 &lt;dbl&gt;,\n#   Extra_Column_2 &lt;dbl&gt;, Extra_Column_3 &lt;dbl&gt;, Extra_Column_4 &lt;dbl&gt;,\n#   Extra_Column_5 &lt;dbl&gt;, Extra_Column_6 &lt;dbl&gt;, Extra_Column_7 &lt;dbl&gt;,\n#   Extra_Column_8 &lt;dbl&gt;, Extra_Column_9 &lt;dbl&gt;, Extra_Column_10 &lt;dbl&gt;, …\n\n\n\n\n\n\ncolSums(is.na(heart))\n\n                    Age                  Gender                  Region \n                      0                       0                       0 \n        Smoking_History        Diabetes_History    Hypertension_History \n                      0                       0                       0 \n      Cholesterol_Level       Physical_Activity            Diet_Quality \n                      0                       0                       0 \n    Alcohol_Consumption           Stress_Levels                     BMI \n                      0                       0                       0 \n             Heart_Rate             Systolic_BP            Diastolic_BP \n                      0                       0                       0 \n         Family_History Heart_Attack_Occurrence          Extra_Column_1 \n                      0                       0                       0 \n         Extra_Column_2          Extra_Column_3          Extra_Column_4 \n                      0                       0                       0 \n         Extra_Column_5          Extra_Column_6          Extra_Column_7 \n                      0                       0                       0 \n         Extra_Column_8          Extra_Column_9         Extra_Column_10 \n                      0                       0                       0 \n        Extra_Column_11         Extra_Column_12         Extra_Column_13 \n                      0                       0                       0 \n        Extra_Column_14         Extra_Column_15 \n                      0                       0 \n\n\nAs the metadata did not specify the data is of the extra columns hence we will not be able the data in the “Extra_column 1 to 15”\nThe first step of data preparation is to remove them first.\n\nHA &lt;- heart %&gt;% select (1:17) %&gt;% filter (Age &lt; 64)\n\nAfter removing the Extra columns, we continue by examining the data using the summary and head (HA) function.\n\nsummary(HA)\n\n      Age           Gender             Region          Smoking_History   \n Min.   :18.00   Length:22158       Length:22158       Length:22158      \n 1st Qu.:29.00   Class :character   Class :character   Class :character  \n Median :40.00   Mode  :character   Mode  :character   Mode  :character  \n Mean   :40.37                                                           \n 3rd Qu.:52.00                                                           \n Max.   :63.00                                                           \n Diabetes_History   Hypertension_History Cholesterol_Level Physical_Activity \n Length:22158       Length:22158         Min.   : 80.02    Length:22158      \n Class :character   Class :character     1st Qu.:179.50    Class :character  \n Mode  :character   Mode  :character     Median :199.78    Mode  :character  \n                                         Mean   :199.90                      \n                                         3rd Qu.:220.15                      \n                                         Max.   :311.24                      \n Diet_Quality       Alcohol_Consumption Stress_Levels         BMI       \n Length:22158       Length:22158        Min.   : 0.000   Min.   : 5.58  \n Class :character   Class :character    1st Qu.: 3.636   1st Qu.:21.63  \n Mode  :character   Mode  :character    Median : 4.973   Median :24.96  \n                                        Mean   : 4.987   Mean   :25.00  \n                                        3rd Qu.: 6.336   3rd Qu.:28.39  \n                                        Max.   :10.000   Max.   :44.12  \n   Heart_Rate      Systolic_BP     Diastolic_BP    Family_History    \n Min.   : 30.59   Min.   : 63.1   Min.   : 39.95   Length:22158      \n 1st Qu.: 63.22   1st Qu.:109.8   1st Qu.: 73.24   Class :character  \n Median : 69.92   Median :119.9   Median : 80.10   Mode  :character  \n Mean   : 69.94   Mean   :120.0   Mean   : 80.03                     \n 3rd Qu.: 76.64   3rd Qu.:130.2   3rd Qu.: 86.76                     \n Max.   :108.78   Max.   :176.6   Max.   :117.66                     \n Heart_Attack_Occurrence\n Length:22158           \n Class :character       \n Mode  :character       \n                        \n                        \n                        \n\n\n\nhead(HA)\n\n# A tibble: 6 × 17\n    Age Gender Region Smoking_History Diabetes_History Hypertension_History\n  &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt;           &lt;chr&gt;            &lt;chr&gt;               \n1    56 Male   Urban  Yes             No               No                  \n2    46 Male   Rural  Yes             No               No                  \n3    32 Female Urban  No              No               No                  \n4    60 Female Rural  No              No               No                  \n5    25 Female Rural  No              No               No                  \n6    38 Female Urban  Yes             No               No                  \n# ℹ 11 more variables: Cholesterol_Level &lt;dbl&gt;, Physical_Activity &lt;chr&gt;,\n#   Diet_Quality &lt;chr&gt;, Alcohol_Consumption &lt;chr&gt;, Stress_Levels &lt;dbl&gt;,\n#   BMI &lt;dbl&gt;, Heart_Rate &lt;dbl&gt;, Systolic_BP &lt;dbl&gt;, Diastolic_BP &lt;dbl&gt;,\n#   Family_History &lt;chr&gt;, Heart_Attack_Occurrence &lt;chr&gt;\n\n\n\n\nIt was observed that the data consist two main types: namely continous and categorical. The following steps we will examine the distibution of the each type of data in details.\n\nHA &lt;- HA %&gt;%\n  mutate(Age_Grp = ifelse(Age &gt; 35, \"Adult\", \"Youth\")) %&gt;%\n  mutate(Event_Grp = ifelse(Age_Grp == \"Adult\" & Heart_Attack_Occurrence == \"Yes\", \"Adult_HA\",\n                    ifelse(Age_Grp == \"Adult\" & Heart_Attack_Occurrence == \"No\", \"Adult_No_HA\",\n                    ifelse(Age_Grp == \"Youth\" & Heart_Attack_Occurrence == \"Yes\", \"Youth_HA\",\n                    ifelse(Age_Grp == \"Youth\" & Heart_Attack_Occurrence == \"No\", \"Youth_No_HA\",NA)))))\n\nHA &lt;- HA %&gt;%\n  mutate(BMI_cat = case_when( \n    BMI &lt; 18.5 ~ \"Underweight\",\n    BMI &gt;= 18.5 & BMI &lt; 24.9 ~ \"Normal\",\n    BMI &gt;= 25 & BMI &lt; 29.9 ~ \"Overweight\",\n    BMI &gt;= 30 ~ \"Obese\",\n    TRUE ~ NA_character_\n  ))\n\nHA &lt;- HA %&gt;%\n  mutate(BP_cat = case_when(\n    Systolic_BP &lt; 120 & Diastolic_BP &lt; 80 ~ \"Normal\",\n    (Systolic_BP &gt;= 120 & Systolic_BP &lt; 130) & Diastolic_BP &lt; 80 ~ \"Elevated\",\n    (Systolic_BP &gt;= 130 & Systolic_BP &lt; 140) | (Diastolic_BP &gt;= 80 & Diastolic_BP &lt; 90) ~ \"High Stage 1\",\n    Systolic_BP &gt;= 140 | Diastolic_BP &gt;= 90 ~ \"High Stage 2\",\n    TRUE ~ NA_character_\n  ))\nHA &lt;- HA %&gt;%\n  mutate(Cholesterol_Level_cat = case_when(\n    Cholesterol_Level &lt; 200 ~ \"Desirable\",\n    Cholesterol_Level &gt;= 200 & Cholesterol_Level &lt; 239 ~ \"Borderline High\",\n    Cholesterol_Level &gt;= 240 ~ \"High\",\n    TRUE ~ NA_character_\n  ))\n\nHA &lt;- HA %&gt;%\n  mutate(Stress_Level_cat = case_when(\n    Stress_Levels &lt; 3 ~ \"Low\",\n    Stress_Levels &gt;= 3 & Stress_Levels &lt; 6 ~ \"Moderate\",\n    Stress_Levels &gt;= 6 ~ \"High\",\n    TRUE ~ NA_character_\n  ))\n\n\nHA &lt;- HA %&gt;%\n  mutate(Heart_Attack_Occurrence_num = ifelse(Heart_Attack_Occurrence == \"Yes\", 1,\n                                              ifelse(Heart_Attack_Occurrence == \"No\", 0, NA)))\n\nHA &lt;- HA %&gt;% \n  mutate(Heart_Rate_cat = case_when(\n    Heart_Rate &lt; 70 ~ \"Below Normal\",\n    Heart_Rate &gt;=  70 & Heart_Rate &lt;= 100 ~ \"Normal\",\n    Heart_Rate  &gt; 100 ~ \"Elevated\",\n    TRUE ~ NA_character_\n  ))\n\n\n# Removal of NA data \n\nHA &lt;- HA %&gt;%\n  filter(!is.na(BMI_cat) & !is.na(Cholesterol_Level_cat))\n\n\nHA_Yes &lt;- filter(HA, Heart_Attack_Occurrence == \"Yes\")\nHA_No &lt;- filter(HA, Heart_Attack_Occurrence == \"No\")\nHA_youth &lt;- filter(HA, Age_Grp == \"Youth\")\n\n\n\n\n\nThe aim of this task is to examine if there are any trends in categorical data in the occurance of heart attack in Japnaese population.\nThe code below is extract our the categorical data and summarise into the occurance of heart attack\n\ncategorical_columns &lt;- HA %&gt;% select(where(~is.character(.x) || is.factor(.x)))\n\ncount_occurrences &lt;- categorical_columns %&gt;%\n  pivot_longer(cols= - c(Heart_Attack_Occurrence, Age_Grp, Event_Grp), names_to = \"Category\", values_to = \"Value\") %&gt;%\n  group_by(Category, Value, Age_Grp, Heart_Attack_Occurrence, Event_Grp) %&gt;%\n  summarise(Occurrences = n(), .groups = 'drop')\n\nprint(count_occurrences)\n\n# A tibble: 156 × 6\n   Category           Value Age_Grp Heart_Attack_Occurre…¹ Event_Grp Occurrences\n   &lt;chr&gt;              &lt;chr&gt; &lt;chr&gt;   &lt;chr&gt;                  &lt;chr&gt;           &lt;int&gt;\n 1 Alcohol_Consumpti… High  Adult   No                     Adult_No…        2308\n 2 Alcohol_Consumpti… High  Adult   Yes                    Adult_HA          277\n 3 Alcohol_Consumpti… High  Youth   No                     Youth_No…        1525\n 4 Alcohol_Consumpti… High  Youth   Yes                    Youth_HA          157\n 5 Alcohol_Consumpti… Low   Adult   No                     Adult_No…        3572\n 6 Alcohol_Consumpti… Low   Adult   Yes                    Adult_HA          402\n 7 Alcohol_Consumpti… Low   Youth   No                     Youth_No…        2372\n 8 Alcohol_Consumpti… Low   Youth   Yes                    Youth_HA          262\n 9 Alcohol_Consumpti… Mode… Adult   No                     Adult_No…        4804\n10 Alcohol_Consumpti… Mode… Adult   Yes                    Adult_HA          526\n# ℹ 146 more rows\n# ℹ abbreviated name: ¹​Heart_Attack_Occurrence\n\n\n\n# Create bar plots for each categorical field\nbar_plots &lt;- count_occurrences %&gt;%\n  ggplot(aes(x = Value, y = Occurrences, fill = Event_Grp)) + \n  geom_bar(stat = \"identity\", position = position_dodge()) +  # Use position_dodge for side-by-side bars\n  facet_wrap(~ Category, scales = \"free\") +\n  theme_minimal() +\n  labs(title = \"Counts of Unique Values in Categorical Fields\",\n       x = \"Unique Values\",\n       y = \"Count\") \n\n# Print the bar plots\nprint(bar_plots)\n\n\n\n\n\n\n\n\n\n\n\ncount_occurrences_youth &lt;- filter(count_occurrences, Age_Grp == \"Youth\")\n\n# Create bar plots for each categorical field\nbar_plots &lt;- count_occurrences_youth %&gt;%\n  ggplot(aes(x = Value, y = Occurrences, fill = Heart_Attack_Occurrence)) + \n  geom_bar(stat = \"identity\", position = position_dodge()) +  # Use position_dodge for side-by-side bars\n  facet_wrap(~ Category, scales = \"free\") +\n  theme_minimal() +\n  labs(title = \"Counts of Unique Values in Categorical Fields\",\n       x = \"Unique Values\",\n       y = \"Count\") \n\n# Print the bar plots\nprint(bar_plots)\n\n\n\n\n\n\n\n\n\n#pm &lt;- ggpairs(HA, columns = 1:17, ggplot2::aes(colour = Heart_Attack_Occurrence ))\n#print (pm)"
  },
  {
    "objectID": "Take-home_Exe/Take-home_Ex_01.html#visualising-continuous-data",
    "href": "Take-home_Exe/Take-home_Ex_01.html#visualising-continuous-data",
    "title": "Take-Home Exercise 01",
    "section": "",
    "text": "# Select only the continuous columns (numeric)\ncontin_col_HA &lt;- HA %&gt;% select(where(is.numeric), Heart_Attack_Occurrence, Age_Grp)\n\n\ncontin_col_HA_Long&lt;-contin_col_HA %&gt;%\n  pivot_longer(cols = -c(Heart_Attack_Occurrence, Age_Grp), names_to = \"Field\", values_to = \"Value\")\n               \ncontin_col_HA_Long_Yes &lt;- filter(contin_col_HA_Long, Heart_Attack_Occurrence == \"Yes\")              \n\n\n# Create histograms with density plots for continuous variables\nhistograms &lt;- ggplot(contin_col_HA_Long, aes(x = Value, fill = Heart_Attack_Occurrence )) + \n  geom_histogram(binwidth = 1, alpha = 0.8) + \n  theme_minimal() + \n  labs(title = \"Histograms of Continuous Fields\", x = \"Value\", y = \"Frequency\")+\n  facet_wrap(~ Field, scales = \"free\") \n\n# Print the histograms\nprint(histograms)\n\n\n\n\n\n\n\n\n\n# Create histograms with density plots for continuous variables\nhistograms &lt;- ggplot(contin_col_HA_Long_Yes, aes(x = Value, fill = Age_Grp )) + \n  geom_histogram(binwidth = 1, alpha = 0.8) + \n  theme_minimal() + \n  labs(title = \"Histograms of Continuous Fields\", x = \"Value\", y = \"Frequency\")+\n  facet_wrap(~ Field, scales = \"free\") \n\n# Print the histograms\nprint(histograms)\n\n\n\n\n\n\n\n\n\n\n\n# Adding density plot\nggplot(HA, aes(x = Stress_Levels)) +\n  geom_histogram(aes(y = ..density..), binwidth = 1, fill = \"blue\", alpha = 0.5) +\n  geom_density(color = \"red\", size = 1) +\n  labs(title = \"Histogram and Density Plot of Stress Levels\", x = \"Stress Levels\", y = \"Density\")\n\n\n\n\n\n\n\n\n\n\n\n\nggbarstats(HA, \n           x=Age_Grp,\n           y=Heart_Attack_Occurrence)\n\n\n\n\n\n\n\n\n\nggbarstats(HA, \n           x=Event_Grp,\n           y=Region)\n\n\n\n\n\n\n\n\n\nggbarstats(HA_youth, \n           x= Heart_Attack_Occurrence,\n           y=BMI_cat)\n\n\n\n\n\n\n\n\n\n# Select categorical columns\ncategorical_columns &lt;- HA_youth %&gt;% select(where(~is.character(.) || is.factor(.)))\n\n# Function to perform Chi-Square test and visualize the results\nanalyze_association &lt;- function(data, x, y) {\n  # Perform Chi-Square test\n  table &lt;- table(data[[x]], data[[y]])\n  chi_test &lt;- chisq.test(table)\n  \n  # Print Chi-Square test results\n  print(paste(\"Chi-Square Test between\", x, \"and\", y))\n  print(chi_test)\n  \n  # Visualize the results using bar plot\n  plot &lt;- ggplot(HA_youth, aes_string(x = x, fill = y)) +\n    geom_bar(position = \"dodge\") +\n    labs(title = paste(\"Bar Plot of\", x, \"vs\", y, \"\\nChi-Square p-value:\", format(chi_test$p.value, digits=4)),\n         x = x,\n         y = \"Count\") +\n    theme_bw()\n  \n  print(plot)\n}\n\n# Analyze association for each categorical column with Event_Grp\nfor (column in colnames(categorical_columns)) {\n  if (column != \"Heart_Attack_Occurrence\") { # Skip Event_Grp column itself\n    analyze_association(HA_youth, \"Heart_Attack_Occurrence\", column)\n  }\n}\n\n[1] \"Chi-Square Test between Heart_Attack_Occurrence and Gender\"\n\n    Pearson's Chi-squared test with Yates' continuity correction\n\ndata:  table\nX-squared = 0.0027295, df = 1, p-value = 0.9583\n\n\n\n\n\n\n\n\n\n[1] \"Chi-Square Test between Heart_Attack_Occurrence and Region\"\n\n    Pearson's Chi-squared test with Yates' continuity correction\n\ndata:  table\nX-squared = 0.12335, df = 1, p-value = 0.7254\n\n\n\n\n\n\n\n\n\n[1] \"Chi-Square Test between Heart_Attack_Occurrence and Smoking_History\"\n\n    Pearson's Chi-squared test with Yates' continuity correction\n\ndata:  table\nX-squared = 0.084801, df = 1, p-value = 0.7709\n\n\n\n\n\n\n\n\n\n[1] \"Chi-Square Test between Heart_Attack_Occurrence and Diabetes_History\"\n\n    Pearson's Chi-squared test with Yates' continuity correction\n\ndata:  table\nX-squared = 7.2967, df = 1, p-value = 0.006908\n\n\n\n\n\n\n\n\n\n[1] \"Chi-Square Test between Heart_Attack_Occurrence and Hypertension_History\"\n\n    Pearson's Chi-squared test with Yates' continuity correction\n\ndata:  table\nX-squared = 1.3112, df = 1, p-value = 0.2522\n\n\n\n\n\n\n\n\n\n[1] \"Chi-Square Test between Heart_Attack_Occurrence and Physical_Activity\"\n\n    Pearson's Chi-squared test\n\ndata:  table\nX-squared = 0.27734, df = 2, p-value = 0.8705\n\n\n\n\n\n\n\n\n\n[1] \"Chi-Square Test between Heart_Attack_Occurrence and Diet_Quality\"\n\n    Pearson's Chi-squared test\n\ndata:  table\nX-squared = 2.9799, df = 2, p-value = 0.2254\n\n\n\n\n\n\n\n\n\n[1] \"Chi-Square Test between Heart_Attack_Occurrence and Alcohol_Consumption\"\n\n    Pearson's Chi-squared test\n\ndata:  table\nX-squared = 3.9517, df = 3, p-value = 0.2667\n\n\n\n\n\n\n\n\n\n[1] \"Chi-Square Test between Heart_Attack_Occurrence and Family_History\"\n\n    Pearson's Chi-squared test with Yates' continuity correction\n\ndata:  table\nX-squared = 0.52143, df = 1, p-value = 0.4702\n\n\n\n\n\n\n\n\n\n[1] \"Chi-Square Test between Heart_Attack_Occurrence and Age_Grp\"\n\n    Chi-squared test for given probabilities\n\ndata:  table\nX-squared = 5658.3, df = 1, p-value &lt; 2.2e-16\n\n\n\n\n\n\n\n\n\n[1] \"Chi-Square Test between Heart_Attack_Occurrence and Event_Grp\"\n\n    Pearson's Chi-squared test with Yates' continuity correction\n\ndata:  table\nX-squared = 8591.3, df = 1, p-value &lt; 2.2e-16\n\n\n\n\n\n\n\n\n\n[1] \"Chi-Square Test between Heart_Attack_Occurrence and BMI_cat\"\n\n    Pearson's Chi-squared test\n\ndata:  table\nX-squared = 8.312, df = 3, p-value = 0.03998\n\n\n\n\n\n\n\n\n\n[1] \"Chi-Square Test between Heart_Attack_Occurrence and BP_cat\"\n\n    Pearson's Chi-squared test\n\ndata:  table\nX-squared = 2.718, df = 3, p-value = 0.4372\n\n\n\n\n\n\n\n\n\n[1] \"Chi-Square Test between Heart_Attack_Occurrence and Cholesterol_Level_cat\"\n\n    Pearson's Chi-squared test\n\ndata:  table\nX-squared = 3.6477, df = 2, p-value = 0.1614\n\n\n\n\n\n\n\n\n\n[1] \"Chi-Square Test between Heart_Attack_Occurrence and Stress_Level_cat\"\n\n    Pearson's Chi-squared test\n\ndata:  table\nX-squared = 5.3458, df = 2, p-value = 0.06905\n\n\n\n\n\n\n\n\n\n[1] \"Chi-Square Test between Heart_Attack_Occurrence and Heart_Rate_cat\"\n\n    Pearson's Chi-squared test\n\ndata:  table\nX-squared = 0.59882, df = 2, p-value = 0.7413\n\n\n\n\n\n\n\n\n\n\nggplot(HA, aes(x = Stress_Levels, fill = Heart_Attack_Occurrence)) +  # Map fill to Heart_Attack_Occurrence\n  geom_histogram(aes(y = ..density..), binwidth = 1, alpha = 0.5, position = \"identity\") +  # Adjust position for overlap\n  geom_density(color = \"red\", size = 1, alpha = 0.3) +  # Density plot with transparency\n  labs(title = \"Histogram and Density Plot of Stress Levels\",\n       x = \"Stress Levels\",\n       y = \"Density\") +\n  theme_minimal(base_size = 14) +  # Improve overall theme and font size\n  scale_fill_brewer(palette = \"Set2\", name = \"Heart Attack Occurrence\") +  # Use a color palette for filling\n  theme(legend.position = \"top\")  # Position the legend at the top\n\n\n\n\n\n\n\n\n\n# Create individual boxplots for each continuous field\n#individual_boxplots &lt;- \n  #ggplot(HA, aes(x = Field, y = Value, fill = Heart_Attack_Occurrence)) +\n  #geom_boxplot() +\n  #facet_wrap(~ Field, scales = \"free\") +\n  #theme_minimal() +\n  #labs(title = \"Boxplots of Continuous Fields\",\n       #x = \"Field\",\n       #y = \"Value\")\n\n# Print the individual boxplots\n#print(individual_boxplots)\n\n\nsummary(HA_Yes)\n\n      Age          Gender             Region          Smoking_History   \n Min.   :18.0   Length:2156        Length:2156        Length:2156       \n 1st Qu.:30.0   Class :character   Class :character   Class :character  \n Median :40.0   Mode  :character   Mode  :character   Mode  :character  \n Mean   :40.9                                                           \n 3rd Qu.:52.0                                                           \n Max.   :63.0                                                           \n Diabetes_History   Hypertension_History Cholesterol_Level Physical_Activity \n Length:2156        Length:2156          Min.   :105.2     Length:2156       \n Class :character   Class :character     1st Qu.:179.1     Class :character  \n Mode  :character   Mode  :character     Median :199.5     Mode  :character  \n                                         Mean   :198.9                       \n                                         3rd Qu.:219.5                       \n                                         Max.   :311.2                       \n Diet_Quality       Alcohol_Consumption Stress_Levels         BMI        \n Length:2156        Length:2156         Min.   : 0.000   Min.   : 9.435  \n Class :character   Class :character    1st Qu.: 3.503   1st Qu.:21.712  \n Mode  :character   Mode  :character    Median : 4.873   Median :24.784  \n                                        Mean   : 4.863   Mean   :24.904  \n                                        3rd Qu.: 6.185   3rd Qu.:28.042  \n                                        Max.   :10.000   Max.   :42.630  \n   Heart_Rate      Systolic_BP      Diastolic_BP    Family_History    \n Min.   : 34.36   Min.   : 65.71   Min.   : 44.30   Length:2156       \n 1st Qu.: 62.88   1st Qu.:109.74   1st Qu.: 73.23   Class :character  \n Median : 70.00   Median :119.27   Median : 80.19   Mode  :character  \n Mean   : 69.86   Mean   :119.68   Mean   : 80.11                     \n 3rd Qu.: 76.51   3rd Qu.:130.22   3rd Qu.: 86.94                     \n Max.   :102.94   Max.   :167.81   Max.   :113.85                     \n Heart_Attack_Occurrence   Age_Grp           Event_Grp        \n Length:2156             Length:2156        Length:2156       \n Class :character        Class :character   Class :character  \n Mode  :character        Mode  :character   Mode  :character  \n                                                              \n                                                              \n                                                              \n   BMI_cat             BP_cat          Cholesterol_Level_cat Stress_Level_cat  \n Length:2156        Length:2156        Length:2156           Length:2156       \n Class :character   Class :character   Class :character      Class :character  \n Mode  :character   Mode  :character   Mode  :character      Mode  :character  \n                                                                               \n                                                                               \n                                                                               \n Heart_Attack_Occurrence_num Heart_Rate_cat    \n Min.   :1                   Length:2156       \n 1st Qu.:1                   Class :character  \n Median :1                   Mode  :character  \n Mean   :1                                     \n 3rd Qu.:1                                     \n Max.   :1                                     \n\n\n\nggplot(data=HA,\n       aes(x =  Alcohol_Consumption, y = Cholesterol_Level, color =Heart_Attack_Occurrence )) +\n    geom_boxplot()+\n  facet_wrap(~ Age_Grp)\n\n\n\n\n\n\n\n\n\nggplot(data=HA_Yes,\n       aes(x = Diet_Quality, y = BMI, color = Age_Grp)) +\n    geom_boxplot()+\n  facet_wrap(~ Region)\n\n\n\n\n\n\n\n\n\n#| fig-width: 24 #to widen the space\n#| fig-height: 24 #to lengthen the graph\nggplot(HA_youth, \n       aes(x = Heart_Attack_Occurrence, y = BMI)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.01,\n               .width = 0.01,\n               point_colour = NA, \n               size=0.01) +\n  geom_boxplot(width = .05,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\", \n            justification = 1.2, \n            binwidth = .5,\n            dotsize = .1)\n\n\n\n\n\n\n\n\n\nscatter_plot &lt;- ggplot(HA, aes(x = Cholesterol_Level, y = BMI, color = Heart_Attack_Occurrence)) +\n  geom_point(size = 2, alpha = 0.5) +  # Adjust point size and transparency\n  labs(title = \"Scatter Plot of Stress Levels vs. BMI\",\n       x = \"Stress Levels\",\n       y = \"BMI\",\n       color = \"Heart Attack Occurrence\") +  # Add title and labels\n  theme_minimal(base_size = 14) +  # Use a clean theme with larger base font size\n  scale_color_manual(values = c(\"blue\", \"red\"))  # Customize colors if needed\n\n# Print the scatter plot\nprint(scatter_plot)\n\n\n\n\n\n\n\n\n\n# Step 1: Select only continuous (numeric) columns along with Heart_Attack_Occurrence\ncontinuous_columns &lt;- HA %&gt;% \n  select(where(is.numeric), Heart_Attack_Occurrence)\n\n# Step 2: Reshape the data to long format\nlong_data &lt;- continuous_columns %&gt;%\n  pivot_longer(-Heart_Attack_Occurrence, names_to = \"Variable\", values_to = \"Value\")\n\n# Step 3: Create scatter plots for each continuous variable against Heart_Attack_Occurrence\nscatter_plot &lt;- ggplot(long_data, aes(x = Value, y = as.numeric(Heart_Attack_Occurrence), color = Heart_Attack_Occurrence)) +\n  geom_point(alpha = 0.7, size = 2) +  # Adjust point size and transparency\n  facet_wrap(~ Variable, scales = \"free\") +  # Create facets for each variable\n  labs(title = \"Scatter Plots of Continuous Variables by Heart Attack Occurrence\",\n       x = \"Value\",\n       y = \"Heart Attack Occurrence (0 = No, 1 = Yes)\") +  # y-axis represents occurrence\n  theme_minimal(base_size = 14) +  # Clean theme\n  scale_color_manual(values = c(\"blue\", \"red\"))  # Customize colors for heart attack occurrence\n\n# Print the scatter plots\nprint(scatter_plot)\n\n\n\n\n\n\n\n# Print the scatter plots\nprint(scatter_plot)\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(HA, aes(x = Smoking_History, fill = Heart_Attack_Occurrence)) +\n  geom_bar(position = \"fill\") +\n  labs(title = \"Smoking History vs Heart Attack Occurrence\", \n       y = \"Proportion\", \n       x = \"Smoking History\") +\n  scale_fill_manual(values = c(\"lightblue\", \"salmon\"), name = \"Heart Attack Occurrence\")\n\n\n\n\n\n\n\n\n\n\n\n\nggbetweenstats(\n  data = HA_youth,\n  x = Heart_Attack_Occurrence, \n  y = Stress_Levels,\n  type = \"p\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"s\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE\n)\n\n\n\n\n\n\n\n\n\nggbetweenstats(\n  data = HA_youth,\n  x = Heart_Attack_Occurrence, \n  y = BMI,\n  type = \"p\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"s\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE\n)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThe very small effect size (Hedges’ g = 0.04) suggests that although the difference is statistically significant, it may not be practically relevant. In other words, the difference in means may not be large enough to have meaningful implications in a real-world context.\n\n\n\n\n\n\nmodel &lt;- lm(Heart_Attack_Occurrence_num ~ Cholesterol_Level_cat + BMI_cat + Diabetes_History, data = HA_youth)\nmodel\n\n\nCall:\nlm(formula = Heart_Attack_Occurrence_num ~ Cholesterol_Level_cat + \n    BMI_cat + Diabetes_History, data = HA_youth)\n\nCoefficients:\n                   (Intercept)  Cholesterol_Level_catDesirable  \n                      0.100475                       -0.001157  \n     Cholesterol_Level_catHigh                    BMI_catObese  \n                     -0.021622                       -0.025376  \n             BMI_catOverweight              BMI_catUnderweight  \n                     -0.005984                       -0.015551  \n           Diabetes_HistoryYes  \n                      0.021381  \n\n\n\ncheck_n &lt;- check_normality(model)\nplot(check_n)\n\n\n\n\n\n\n\n\n\ncheck_h &lt;- check_heteroscedasticity(model)\n\nplot(check_h)\n\n\n\n\n\n\n\n\n\ncheck_model(model)\n\n\n\n\n\n\n\n\n\n\n\nThe health crsis of heart attack is largely depended on the possibility"
  },
  {
    "objectID": "In-class_Exe/In-class_Ex04.html",
    "href": "In-class_Exe/In-class_Ex04.html",
    "title": "In-Class Ex 04",
    "section": "",
    "text": "pacman::p_load(haven, SmartEDA, tidyverse, tidymodels, ggdist, ggridges, ggthemes,\n               colorspace, gridExtra, ggstatsplot)\n\n\nexam &lt;- read_csv(\"data/Exam_data.csv\")\n\n\nggplot(data=exam, \n       aes(y=CLASS,\n           x=ENGLISH)) +\n  geom_boxplot()\n\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = ENGLISH, \n           y = CLASS)) +\n  #this part to create in ridgelines\n  geom_density_ridges(\n    scale = 3,\n    rel_min_height = 0.01,\n    bandwidth = 3.4,\n    fill = lighten(\"#7097BB\", .3),\n    color = \"white\"\n  ) +\n  scale_x_continuous(\n    name = \"English grades\",\n    expand = c(0, 0)\n    ) +\n  ### x axis continous data\n  scale_y_discrete(name = NULL, expand = expansion(add = c(0.2, 2.6))) +\n  theme_ridges()\n\n\n\n\n\n\n\n\n\nrain drop plot.\nThe probabilty density plot will smooth out the the curve and the dot plot will be able to show the actual data points.\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\", \n            justification = 1.2, \n            binwidth = .5,\n            dotsize = 2)\n\n\n\n\n\n\n\n\n\nggbetweenstats(\n  data = exam,\n  x = GENDER, \n  y = MATHS,\n  type = \"np\", #np is non parametric \n  messages = FALSE\n)\n\n\n\n\n\n\n\n\n\nggbetweenstats(\n  data = exam,\n  x = RACE, \n  y = ENGLISH,\n  type = \"p\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"s\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE\n)"
  },
  {
    "objectID": "Hands-on_Exe/Hands-on_Ex_04.html",
    "href": "Hands-on_Exe/Hands-on_Ex_04.html",
    "title": "Hands-On Exercise 04",
    "section": "",
    "text": "Visualising distribution is the first steps to understand and analyse the assigned data set,\n\n\nIn this Hands-on, we will be using the following packages:\n\nggdist: to plot ridglines, which will be useful to see the distribution across another dimension, such as changes in scores across Class.\nggthemes: for visualising distribution and uncertainty.\n\n\npacman::p_load(ggdist, ggridges, ggthemes,\n               colorspace, tidyverse, gridExtra)\n\n\n\n\nThe same dataset exam data is being used for this exercise, as previously.\n\nexam &lt;- read_csv(\"data/Exam_data.csv\")\n\n\n\n\n\nggplot(exam, \n       aes(x = ENGLISH, \n           y = CLASS)) +\n  geom_density_ridges(\n    scale = 3,\n    rel_min_height = 0.01,\n    bandwidth = 3.4,\n    fill = lighten(\"#7097BB\", .3),\n    color = \"white\"\n  ) +\n  scale_x_continuous(\n    name = \"English grades\",\n    expand = c(0, 0)\n    ) +\n  scale_y_discrete(name = NULL, expand = expansion(add = c(0.2, 2.6))) +\n  theme_ridges()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nWe can see that in general 3A has the highest English score for when compared to other classes.\n\n\n\n\n\nCode for visualising English scores using geom_ridgeline_gradient(),\nThis function may not be useful and it may create confusion among the viewers.\n\nggplot(exam, \n       aes(x = ENGLISH, \n           y = CLASS,\n           fill = stat(x))) +\n  geom_density_ridges_gradient(\n    scale = 3,\n    rel_min_height = 0.01) +\n  scale_fill_viridis_c(name = \"Temp. [F]\",\n                       option = \"C\") +\n  scale_x_continuous(\n    name = \"English grades\",\n    expand = c(0, 0)\n  ) +\n  scale_y_discrete(name = NULL, expand = expansion(add = c(0.2, 2.6))) +\n  theme_ridges()\n\n\n\n\n\n\n\n\nVisualising the Maths scores.\n\nggplot(exam, \n       aes(x = MATHS, \n           y = CLASS,\n           fill = stat(x))) +\n  geom_density_ridges_gradient(\n    scale = 3,\n    rel_min_height = 0.01) +\n  scale_fill_viridis_c(name = \"Temp. [F]\",\n                       option = \"C\") +\n  scale_x_continuous(\n    name = \"Maths grades\",\n    expand = c(0, 0)\n  ) +\n  scale_y_discrete(name = NULL, expand = expansion(add = c(0.2, 2.6))) +\n  theme_ridges()\n\n\n\n\n\n\n\n\n\n\n\necdf refers to the empirical; cumulative distribution. This is alternatives to visualise distribution and it could handle with continuous and categorical variables. the downside of this is that it will requires more training to accurately interpret.\nFor the could chunk below put the two charts side by side for easy visualization.\n\nECDF &lt;- ggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = 0.5 - abs(0.5-stat(ecdf)))) +\n  stat_density_ridges(geom = \"density_ridges_gradient\", \n                      calc_ecdf = TRUE) +\n  scale_fill_viridis_c(name = \"Tail probability\",\n                       direction = -1) +\n  theme_ridges()\n\n \nEnglish &lt;- ggplot(exam, \n       aes(x = ENGLISH, \n           y = CLASS,\n           fill = stat(x))) +\n  geom_density_ridges_gradient(\n    scale = 3,\n    rel_min_height = 0.01) +\n  scale_fill_viridis_c(name = \"Temp. [F]\",\n                       option = \"C\") +\n  scale_x_continuous(\n    name = \"English grades\",\n    expand = c(0, 0)\n  ) +\n  scale_y_discrete(name = NULL, expand = expansion(add = c(0.2, 2.6))) +\n  theme_ridges()\n\n\ngrid.arrange(English, ECDF, ncol=2)\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = 0.5 - abs(0.5-stat(ecdf)))) +\n  stat_density_ridges(geom = \"density_ridges_gradient\", \n                      calc_ecdf = TRUE) +\n  scale_fill_viridis_c(name = \"Tail probability\",\n                       direction = -1) +\n  theme_ridges()\n\n\n\n\n\n\n\n\nThe probability is the highest at peak or the center of the the charts,\n\nggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = 4,\n    quantile_lines = TRUE) +\n  scale_fill_viridis_d(name = \"Quartiles\") +\n  theme_ridges()\n\n\n\n\n\n\n\n\nInstead of using number to define the quantiles, we can also specify quantiles by cut points such as 2.5% and 97.5% tails to colour the ridgeline plot as shown in the figure below.\n\nggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = c(0.025, 0.975)\n    ) +\n  scale_fill_manual(\n    name = \"Probability\",\n    values = c(\"#FF0000A0\", \"#A0A0A0A0\", \"#0000FFA0\"),\n    labels = c(\"(0, 0.025]\", \"(0.025, 0.975]\", \"(0.975, 1]\")\n  ) +\n  theme_ridges()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA)\n\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20, ## syntax for boxplot.\n               outlier.shape = NA)\n\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\", \n            justification = 1.2, \n            binwidth = .5,\n            dotsize = 2)\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\", \n            justification = 1.2, \n            binwidth = .5,\n            dotsize = 1.5) +\n  coord_flip() +\n  theme_economist()\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = GENDER, \n           y = MATHS)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\", \n            justification = 1.2, \n            binwidth = .5,\n            dotsize = 1.5) +\n  coord_flip() +\n  theme_bw()\n\n\n\n\n\n\n\n\n\n2 &lt;- a + facet_grid(class())"
  },
  {
    "objectID": "Hands-on_Exe/Hands-on_Ex_04.html#visualising-distribution",
    "href": "Hands-on_Exe/Hands-on_Ex_04.html#visualising-distribution",
    "title": "Hands-On Exercise 04",
    "section": "",
    "text": "Visualising distribution is the first steps to understand and analyse the assigned data set,\n\n\nIn this Hands-on, we will be using the following packages:\n\nggdist: to plot ridglines, which will be useful to see the distribution across another dimension, such as changes in scores across Class.\nggthemes: for visualising distribution and uncertainty.\n\n\npacman::p_load(ggdist, ggridges, ggthemes,\n               colorspace, tidyverse, gridExtra)\n\n\n\n\nThe same dataset exam data is being used for this exercise, as previously.\n\nexam &lt;- read_csv(\"data/Exam_data.csv\")\n\n\n\n\n\nggplot(exam, \n       aes(x = ENGLISH, \n           y = CLASS)) +\n  geom_density_ridges(\n    scale = 3,\n    rel_min_height = 0.01,\n    bandwidth = 3.4,\n    fill = lighten(\"#7097BB\", .3),\n    color = \"white\"\n  ) +\n  scale_x_continuous(\n    name = \"English grades\",\n    expand = c(0, 0)\n    ) +\n  scale_y_discrete(name = NULL, expand = expansion(add = c(0.2, 2.6))) +\n  theme_ridges()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nWe can see that in general 3A has the highest English score for when compared to other classes.\n\n\n\n\n\nCode for visualising English scores using geom_ridgeline_gradient(),\nThis function may not be useful and it may create confusion among the viewers.\n\nggplot(exam, \n       aes(x = ENGLISH, \n           y = CLASS,\n           fill = stat(x))) +\n  geom_density_ridges_gradient(\n    scale = 3,\n    rel_min_height = 0.01) +\n  scale_fill_viridis_c(name = \"Temp. [F]\",\n                       option = \"C\") +\n  scale_x_continuous(\n    name = \"English grades\",\n    expand = c(0, 0)\n  ) +\n  scale_y_discrete(name = NULL, expand = expansion(add = c(0.2, 2.6))) +\n  theme_ridges()\n\n\n\n\n\n\n\n\nVisualising the Maths scores.\n\nggplot(exam, \n       aes(x = MATHS, \n           y = CLASS,\n           fill = stat(x))) +\n  geom_density_ridges_gradient(\n    scale = 3,\n    rel_min_height = 0.01) +\n  scale_fill_viridis_c(name = \"Temp. [F]\",\n                       option = \"C\") +\n  scale_x_continuous(\n    name = \"Maths grades\",\n    expand = c(0, 0)\n  ) +\n  scale_y_discrete(name = NULL, expand = expansion(add = c(0.2, 2.6))) +\n  theme_ridges()\n\n\n\n\n\n\n\n\n\n\n\necdf refers to the empirical; cumulative distribution. This is alternatives to visualise distribution and it could handle with continuous and categorical variables. the downside of this is that it will requires more training to accurately interpret.\nFor the could chunk below put the two charts side by side for easy visualization.\n\nECDF &lt;- ggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = 0.5 - abs(0.5-stat(ecdf)))) +\n  stat_density_ridges(geom = \"density_ridges_gradient\", \n                      calc_ecdf = TRUE) +\n  scale_fill_viridis_c(name = \"Tail probability\",\n                       direction = -1) +\n  theme_ridges()\n\n \nEnglish &lt;- ggplot(exam, \n       aes(x = ENGLISH, \n           y = CLASS,\n           fill = stat(x))) +\n  geom_density_ridges_gradient(\n    scale = 3,\n    rel_min_height = 0.01) +\n  scale_fill_viridis_c(name = \"Temp. [F]\",\n                       option = \"C\") +\n  scale_x_continuous(\n    name = \"English grades\",\n    expand = c(0, 0)\n  ) +\n  scale_y_discrete(name = NULL, expand = expansion(add = c(0.2, 2.6))) +\n  theme_ridges()\n\n\ngrid.arrange(English, ECDF, ncol=2)\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = 0.5 - abs(0.5-stat(ecdf)))) +\n  stat_density_ridges(geom = \"density_ridges_gradient\", \n                      calc_ecdf = TRUE) +\n  scale_fill_viridis_c(name = \"Tail probability\",\n                       direction = -1) +\n  theme_ridges()\n\n\n\n\n\n\n\n\nThe probability is the highest at peak or the center of the the charts,\n\nggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = 4,\n    quantile_lines = TRUE) +\n  scale_fill_viridis_d(name = \"Quartiles\") +\n  theme_ridges()\n\n\n\n\n\n\n\n\nInstead of using number to define the quantiles, we can also specify quantiles by cut points such as 2.5% and 97.5% tails to colour the ridgeline plot as shown in the figure below.\n\nggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = c(0.025, 0.975)\n    ) +\n  scale_fill_manual(\n    name = \"Probability\",\n    values = c(\"#FF0000A0\", \"#A0A0A0A0\", \"#0000FFA0\"),\n    labels = c(\"(0, 0.025]\", \"(0.025, 0.975]\", \"(0.975, 1]\")\n  ) +\n  theme_ridges()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA)\n\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20, ## syntax for boxplot.\n               outlier.shape = NA)\n\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\", \n            justification = 1.2, \n            binwidth = .5,\n            dotsize = 2)\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\", \n            justification = 1.2, \n            binwidth = .5,\n            dotsize = 1.5) +\n  coord_flip() +\n  theme_economist()\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = GENDER, \n           y = MATHS)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\", \n            justification = 1.2, \n            binwidth = .5,\n            dotsize = 1.5) +\n  coord_flip() +\n  theme_bw()\n\n\n\n\n\n\n\n\n\n2 &lt;- a + facet_grid(class())"
  },
  {
    "objectID": "Hands-on_Exe/Hands-on_Ex_04.html#visual-statistical-analysis",
    "href": "Hands-on_Exe/Hands-on_Ex_04.html#visual-statistical-analysis",
    "title": "Hands-On Exercise 04",
    "section": "4.2 Visual Statistical Analysis",
    "text": "4.2 Visual Statistical Analysis\n\nLoading of libraries and packages\ntidyverse is loaded for this exercise.\n\npacman::p_load(ggstatsplot)\n\nOne-sample test: gghistostats() method\n\nset.seed(1234)\n\ngghistostats(\n  data = exam,\n  x = ENGLISH,\n  type = \"bayes\",\n  test.value = 60,\n  xlab = \"English scores\"\n)\n\n\n\n\n\n\n\n\n\n\nTwo-sample mean test: ggbetweenstats()\n\nggbetweenstats(\n  data = exam,\n  x = GENDER, \n  y = MATHS,\n  type = \"np\",\n  messages = FALSE\n)\n\n\n\n\n\n\n\n\n\n\nOneway ANOVA Test: ggbetweenstats() method\n\nggbetweenstats(\n  data = exam,\n  x = RACE, \n  y = ENGLISH,\n  type = \"p\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"s\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE\n)\n\n\n\n\n\n\n\n\n\n\nSignificant Test of Correlation: ggscatterstats\n\nggscatterstats(\n  data = exam,\n  x = MATHS,\n  y = ENGLISH,\n  marginal = FALSE,\n  )\n\n\n\n\n\n\n\n\n\n\nSignificant Test of Association (Depedence) : ggbarstats() methods\n\nexam1 &lt;- exam %&gt;% \n  mutate(MATHS_bins = \n           cut(MATHS, \n               breaks = c(0,60,75,85,100))\n)\n\n\nggbarstats(exam1, \n           x = MATHS_bins, \n           y = GENDER)\n\n\n\n\n\n\n\n\n\n\nVisualising Models\n\npacman::p_load(readxl, performance, parameters, see)\n\n\ncar_resale &lt;- read_xls(\"data/ToyotaCorolla.xls\", \n                       \"data\")\ncar_resale\n\n# A tibble: 1,436 × 38\n      Id Model    Price Age_08_04 Mfg_Month Mfg_Year     KM Quarterly_Tax Weight\n   &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt;         &lt;dbl&gt;  &lt;dbl&gt;\n 1    81 TOYOTA … 18950        25         8     2002  20019           100   1180\n 2     1 TOYOTA … 13500        23        10     2002  46986           210   1165\n 3     2 TOYOTA … 13750        23        10     2002  72937           210   1165\n 4     3  TOYOTA… 13950        24         9     2002  41711           210   1165\n 5     4 TOYOTA … 14950        26         7     2002  48000           210   1165\n 6     5 TOYOTA … 13750        30         3     2002  38500           210   1170\n 7     6 TOYOTA … 12950        32         1     2002  61000           210   1170\n 8     7  TOYOTA… 16900        27         6     2002  94612           210   1245\n 9     8 TOYOTA … 18600        30         3     2002  75889           210   1245\n10    44 TOYOTA … 16950        27         6     2002 110404           234   1255\n# ℹ 1,426 more rows\n# ℹ 29 more variables: Guarantee_Period &lt;dbl&gt;, HP_Bin &lt;chr&gt;, CC_bin &lt;chr&gt;,\n#   Doors &lt;dbl&gt;, Gears &lt;dbl&gt;, Cylinders &lt;dbl&gt;, Fuel_Type &lt;chr&gt;, Color &lt;chr&gt;,\n#   Met_Color &lt;dbl&gt;, Automatic &lt;dbl&gt;, Mfr_Guarantee &lt;dbl&gt;,\n#   BOVAG_Guarantee &lt;dbl&gt;, ABS &lt;dbl&gt;, Airbag_1 &lt;dbl&gt;, Airbag_2 &lt;dbl&gt;,\n#   Airco &lt;dbl&gt;, Automatic_airco &lt;dbl&gt;, Boardcomputer &lt;dbl&gt;, CD_Player &lt;dbl&gt;,\n#   Central_Lock &lt;dbl&gt;, Powered_Windows &lt;dbl&gt;, Power_Steering &lt;dbl&gt;, …\n\n\n\nmodel &lt;- lm(Price ~ Age_08_04 + Mfg_Year + KM + \n              Weight + Guarantee_Period, data = car_resale)\nmodel\n\n\nCall:\nlm(formula = Price ~ Age_08_04 + Mfg_Year + KM + Weight + Guarantee_Period, \n    data = car_resale)\n\nCoefficients:\n     (Intercept)         Age_08_04          Mfg_Year                KM  \n      -2.637e+06        -1.409e+01         1.315e+03        -2.323e-02  \n          Weight  Guarantee_Period  \n       1.903e+01         2.770e+01"
  },
  {
    "objectID": "Hands-on_Exe/Hands-on_Ex_04.html#model-diagnostic-checking-for-multicolinearity",
    "href": "Hands-on_Exe/Hands-on_Ex_04.html#model-diagnostic-checking-for-multicolinearity",
    "title": "Hands-On Exercise 04",
    "section": "Model Diagnostic: checking for multicolinearity:",
    "text": "Model Diagnostic: checking for multicolinearity:\n\ncheck_collinearity(model)\n\n# Check for Multicollinearity\n\nLow Correlation\n\n             Term  VIF     VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n               KM 1.46 [ 1.37,  1.57]         1.21      0.68     [0.64, 0.73]\n           Weight 1.41 [ 1.32,  1.51]         1.19      0.71     [0.66, 0.76]\n Guarantee_Period 1.04 [ 1.01,  1.17]         1.02      0.97     [0.86, 0.99]\n\nHigh Correlation\n\n      Term   VIF     VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n Age_08_04 31.07 [28.08, 34.38]         5.57      0.03     [0.03, 0.04]\n  Mfg_Year 31.16 [28.16, 34.48]         5.58      0.03     [0.03, 0.04]\n\n\n\ncheck_c &lt;- check_collinearity(model)\nplot(check_c)\n\n\n\n\n\n\n\n\n::: callout note There are two variables with high collinearity Age_08_04 and Mfg_Year. :::\n\nModel Diagnostic: checking normality assumption\n\nmodel1 &lt;- lm(Price ~ Age_08_04 + KM + \n              Weight + Guarantee_Period, data = car_resale)\n\n\ncheck_n &lt;- check_normality(model1)\n\n\nplot(check_n)\n\n\n\n\n\n\n\n\n\n\nModel Diagnostic: Check model for homogeneity of variances\n\n check_h &lt;- check_heteroscedasticity(model1)\n\n\nplot(check_h)\n\n\n\n\n\n\n\n\n\ncheck_model(model1)\n\n\n\n\n\n\n\n\n\n\nVisualising Regression Parameters: see methods\n\nplot(parameters(model1))\n\n\n\n\n\n\n\n\n\n\nVisualising Regression Parameters: ggcoefstats() methods\n\nggcoefstats(model1, \n            output = \"plot\")"
  },
  {
    "objectID": "Hands-on_Exe/Hands-on_Ex_04.html#visualising-uncertainty",
    "href": "Hands-on_Exe/Hands-on_Ex_04.html#visualising-uncertainty",
    "title": "Hands-On Exercise 04",
    "section": "4.3 Visualising Uncertainty",
    "text": "4.3 Visualising Uncertainty\n\nLoading of Libraries\n\ndevtools::install_github(\"wilkelab/ungeviz\")\n\n\npacman::p_load(ungeviz, plotly, crosstalk,\n               DT, ggdist, ggridges,\n               colorspace, gganimate, tidyverse)\n\n\n\nLoading of Exam data\nAs the exam data has been loaded previously, there is no need to reload it the current exercise.\n\n\nVisualizing the uncertainty of point estimates: ggplot2 methods\n\nmy_sum &lt;- exam %&gt;%\n  group_by(RACE) %&gt;%\n  summarise(\n    n=n(),\n    mean=mean(MATHS),\n    sd=sd(MATHS)\n    ) %&gt;%\n  mutate(se=sd/sqrt(n-1))\n\n\nknitr::kable(head(my_sum), format = 'html')\n\n\n\n\nRACE\nn\nmean\nsd\nse\n\n\n\n\nChinese\n193\n76.50777\n15.69040\n1.132357\n\n\nIndian\n12\n60.66667\n23.35237\n7.041005\n\n\nMalay\n108\n57.44444\n21.13478\n2.043177\n\n\nOthers\n9\n69.66667\n10.72381\n3.791438\n\n\n\n\n\n\n\n\n\nPlotting standard error bars of point estimates\n\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x=RACE, \n        ymin=mean-se, \n        ymax=mean+se), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    size=0.5) +\n  geom_point(aes\n           (x=RACE, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  ggtitle(\"Standard error of mean maths score by rac\")\n\n\n\n\n\n\n\n\n\n\nPlotting confidence interval of point estimates\n\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x=reorder(RACE, -mean), \n        ymin=mean-1.96*se, \n        ymax=mean+1.96*se), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    size=0.5) +\n  geom_point(aes\n           (x=RACE, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  labs(x = \"Maths score\",\n       title = \"95% confidence interval of mean maths score by race\")\n\n\n\n\n\n\n\n\n\nshared_df = SharedData$new(my_sum)\n\nbscols(widths = c(4,8),\n       ggplotly((ggplot(shared_df) +\n                   geom_errorbar(aes(\n                     x=reorder(RACE, -mean),\n                     ymin=mean-2.58*se, \n                     ymax=mean+2.58*se), \n                     width=0.2, \n                     colour=\"black\", \n                     alpha=0.9, \n                     size=0.5) +\n                   geom_point(aes(\n                     x=RACE, \n                     y=mean, \n                     text = paste(\"Race:\", `RACE`, \n                                  \"&lt;br&gt;N:\", `n`,\n                                  \"&lt;br&gt;Avg. Scores:\", round(mean, digits = 2),\n                                  \"&lt;br&gt;95% CI:[\", \n                                  round((mean-2.58*se), digits = 2), \",\",\n                                  round((mean+2.58*se), digits = 2),\"]\")),\n                     stat=\"identity\", \n                     color=\"red\", \n                     size = 1.5, \n                     alpha=1) + \n                   xlab(\"Race\") + \n                   ylab(\"Average Scores\") + \n                   theme_minimal() + \n                   theme(axis.text.x = element_text(\n                     angle = 45, vjust = 0.5, hjust=1)) +\n                   ggtitle(\"99% Confidence interval of average /&lt;br&gt;maths scores by race\")), \n                tooltip = \"text\"), \n       DT::datatable(shared_df, \n                     rownames = FALSE, \n                     class=\"compact\", \n                     width=\"100%\", \n                     options = list(pageLength = 10,\n                                    scrollX=T), \n                     colnames = c(\"No. of pupils\", \n                                  \"Avg Scores\",\n                                  \"Std Dev\",\n                                  \"Std Error\")) %&gt;%\n         formatRound(columns=c('mean', 'sd', 'se'),\n                     digits=2))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVisualising Uncertainty: ggdist package\n\nexam %&gt;%\n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_pointinterval() +\n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Mean Point + Multiple-interval plot\")\n\n\n\n\n\n\n\n\n\n\nVisualizing the uncertainty of point estimates: ggdist methods\n\nexam %&gt;%\n  ggplot(aes(x = RACE, y = MATHS)) +\n  stat_pointinterval(.width = 0.95,\n  .point = median,\n  .interval = qi) +\n  labs(\n    title = \"Visualising confidence intervals of median math score\",\n    subtitle = \"Median Point + Multiple-interval plot\")\n\n\n\n\n\n\n\n\n\nMean Point with 95% and 99% interval respectively.\n\nexam_mean_95 &lt;- exam %&gt;%\n  ggplot(aes(x = RACE, y = MATHS)) +\n  stat_pointinterval(.width = 0.95) +\n  labs(\n    title = \"Visualising confidence intervals of median math score\",\n    subtitle = \"Mean Point + 95% Multiple-interval plot\")\n\n\nexam_mean_99 &lt;- exam %&gt;%\n  ggplot(aes(x = RACE, y = MATHS)) +\n  stat_pointinterval(.width = 0.99) +\n  labs(\n    title = \"Visualising confidence intervals of median math score\",\n    subtitle = \"Mean Point + 99 % Multiple-interval plot\")\n\n\n\ngrid.arrange(exam_mean_95, exam_mean_99, ncol=2)\n\n\n\n\n\n\n\n\n\n\n\nVisualizing the uncertainty of point estimates: ggdist methods\n\nexam %&gt;%\n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_gradientinterval(\n    fill = \"skyblue\",      \n    show.legend = TRUE     \n  ) +                        \n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Gradient + interval plot\")\n\n\n\n\n\n\n\n\n\nonly showing 95% confidencen Interval\n\nexam %&gt;%\n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_gradientinterval(   \n    fill = \"skyblue\",\n    .width = 0.95,\n    show.legend = TRUE     \n  ) +                        \n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Gradient + interval plot\")\n\n\n\n\n\n\n\n\n\n\n\nVisualising Uncertainty with Hypothetical Outcome Plots (HOPs)\n\ndevtools::install_github(\"wilkelab/ungeviz\")\n\n\nlibrary(ungeviz)\n\n\nggplot(data = exam, \n       (aes(x = factor(RACE), y = MATHS))) +\n  geom_point(position = position_jitter(\n    height = 0.3, width = 0.05), \n    size = 0.4, color = \"#0072B2\", alpha = 1/2) +\n  geom_hpline(data = sampler(25, group = RACE), height = 0.6, color = \"#D55E00\") +\n  theme_bw() + \n  # `.draw` is a generated column indicating the sample draw\n  transition_states(.draw, 1, 3)\n\n\n\n\n\n\n\n\n\n\nVisualising Uncertainty with Hypothetical Outcome Plots (HOPs)\n\nggplot(data = exam, \n       (aes(x = factor(RACE), \n            y = MATHS))) +\n  geom_point(position = position_jitter(\n    height = 0.3, \n    width = 0.05), \n    size = 0.4, \n    color = \"#0072B2\", \n    alpha = 1/2) +\n  geom_hpline(data = sampler(25, \n                             group = RACE), \n              height = 0.6, \n              color = \"#D55E00\") +\n  theme_bw() + \n  transition_states(.draw, 1, 3)"
  },
  {
    "objectID": "Hands-on_Exe/Hands-on_Ex_04.html#funnel-plots-for-fair-comparisons",
    "href": "Hands-on_Exe/Hands-on_Ex_04.html#funnel-plots-for-fair-comparisons",
    "title": "Hands-On Exercise 04",
    "section": "4.4 Funnel Plots for Fair Comparisons",
    "text": "4.4 Funnel Plots for Fair Comparisons\n\nLoading of R packages\n\npacman::p_load(tidyverse, FunnelPlotR, plotly, knitr)\n\n\ncovid19 &lt;- read_csv(\"data/COVID-19_DKI_Jakarta.csv\") %&gt;%\n  mutate_if(is.character, as.factor)\n\n\nfunnel_plot(\n  .data = covid19,\n  numerator = Positive,\n  denominator = Death,\n  group = `Sub-district`\n)\n\n\n\n\n\n\n\n\nA funnel plot object with 267 points of which 0 are outliers. \nPlot is adjusted for overdispersion. \n\n\n\nfunnel_plot(\n  .data = covid19,\n  numerator = Death,\n  denominator = Positive,\n  group = `Sub-district`,\n  data_type = \"PR\",     #&lt;&lt;\n  xrange = c(0, 6500),  #change in x axis range\n  yrange = c(0, 0.05),   #change in y axis range\n  title = 'Funnel plot using data_type = PR'\n)\n\n\n\n\n\n\n\n\nA funnel plot object with 267 points of which 7 are outliers. \nPlot is adjusted for overdispersion. \n\n\n\nfunnel_plot(\n  .data = covid19,\n  numerator = Death,\n  denominator = Positive,\n  group = `Sub-district`,\n  xrange = c(0, 6500),  #&lt;&lt; limiting the X axis range\n  yrange = c(0, 0.05),  #&lt;&lt; limiting the Y axis range\n  title = 'Funnel plot using data_type = SR'\n)\n\n\n\n\n\n\n\n\nA funnel plot object with 267 points of which 1 are outliers. \nPlot is adjusted for overdispersion. \n\n\n\n\nFunnelPlotR methods: Makeover 2\n\nfunnel_plot(\n  .data = covid19,\n  numerator = Death,\n  denominator = Positive,\n  group = `Sub-district`,\n  data_type = \"PR\",   \n  xrange = c(0, 6500),  \n  yrange = c(0, 0.05),\n  label = NA,\n  title = \"Cumulative COVID-19 Fatality Rate by Cumulative Total Number of COVID-19 Positive Cases\", #&lt;&lt;           \n  x_label = \"Cumulative COVID-19 Positive Cases\", #&lt;&lt;\n  y_label = \"Cumulative Fatality Rate\"  #&lt;&lt;\n)\n\n\n\n\n\n\n\n\nA funnel plot object with 267 points of which 7 are outliers. \nPlot is adjusted for overdispersion. \n\n\n\n\nFunnel Plot for Fair Visual Comparison: ggplot2 methods\n\ndf &lt;- covid19 %&gt;%\n  mutate(rate = Death / Positive) %&gt;%\n  mutate(rate.se = sqrt((rate*(1-rate)) / (Positive))) %&gt;%\n  filter(rate &gt; 0)\n\n\nfit.mean &lt;- weighted.mean(df$rate, 1/df$rate.se^2)\n\n\n\nCalculate lower and upper limits for 95% and 99.9% CI\n\nnumber.seq &lt;- seq(1, max(df$Positive), 1)\nnumber.ll95 &lt;- fit.mean - 1.96 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ul95 &lt;- fit.mean + 1.96 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ll999 &lt;- fit.mean - 3.29 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ul999 &lt;- fit.mean + 3.29 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \ndfCI &lt;- data.frame(number.ll95, number.ul95, number.ll999, \n                   number.ul999, number.seq, fit.mean)\n\n\n\nPlotting a static funnel plot\n\np &lt;- ggplot(df, aes(x = Positive, y = rate)) +\n  geom_point(aes(label=`Sub-district`), \n             alpha=0.4) +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ll95), \n            size = 0.4, \n            colour = \"grey40\", \n            linetype = \"dashed\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ul95), \n            size = 0.4, \n            colour = \"grey40\", \n            linetype = \"dashed\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ll999), \n            size = 0.4, \n            colour = \"grey40\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ul999), \n            size = 0.4, \n            colour = \"grey40\") +\n  geom_hline(data = dfCI, \n             aes(yintercept = fit.mean), \n             size = 0.4, \n             colour = \"grey40\") +\n  coord_cartesian(ylim=c(0,0.05)) +\n  annotate(\"text\", x = 1, y = -0.13, label = \"95%\", size = 3, colour = \"grey40\") + \n  annotate(\"text\", x = 4.5, y = -0.18, label = \"99%\", size = 3, colour = \"grey40\") + \n  ggtitle(\"Cumulative Fatality Rate by Cumulative Number of COVID-19 Cases\") +\n  xlab(\"Cumulative Number of COVID-19 Cases\") + \n  ylab(\"Cumulative Fatality Rate\") +\n  theme_light() +\n  theme(plot.title = element_text(size=12),\n        legend.position = c(0.91,0.85), \n        legend.title = element_text(size=7),\n        legend.text = element_text(size=7),\n        legend.background = element_rect(colour = \"grey60\", linetype = \"dotted\"),\n        legend.key.height = unit(0.3, \"cm\"))\np\n\n\n\n\n\n\n\n\n\n\nInteractive Funnel Plot: plotly + ggplot2\n\nfp_ggplotly &lt;- ggplotly(p,\n  tooltip = c(\"label\", \n              \"x\", \n              \"y\"))\nfp_ggplotly"
  },
  {
    "objectID": "Hands-on_Exe/Hands-on_Ex_02.html",
    "href": "Hands-on_Exe/Hands-on_Ex_02.html",
    "title": "Hands-on Exercise 02",
    "section": "",
    "text": "In this hands-one exercise, 6 R packages are used. Beside tidyverse which were used in Hands-on Exercise 1 and dplyr which is used to transform the dataframe to create meaningful label. The following packages are introduced.\n\nggrepel: an R package provides geoms for ggplot2 to repel overlapping text labels.\nggthemes: an R package provides some extra themes, geoms, and scales for ‘ggplot2’.\nhrbrthemes: an R package provides typography-centric themes and theme components for ggplot2.\npatchwork: an R package for preparing composite figure created using ggplot2.\n\n\npacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes,\n               tidyverse, gridExtra, dplyr \n               ) \n\n\n\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "Hands-on_Exe/Hands-on_Ex_02.html#loading-of-the-required-libraries",
    "href": "Hands-on_Exe/Hands-on_Ex_02.html#loading-of-the-required-libraries",
    "title": "Hands-on Exercise 02",
    "section": "",
    "text": "In this hands-one exercise, 6 R packages are used. Beside tidyverse which were used in Hands-on Exercise 1 and dplyr which is used to transform the dataframe to create meaningful label. The following packages are introduced.\n\nggrepel: an R package provides geoms for ggplot2 to repel overlapping text labels.\nggthemes: an R package provides some extra themes, geoms, and scales for ‘ggplot2’.\nhrbrthemes: an R package provides typography-centric themes and theme components for ggplot2.\npatchwork: an R package for preparing composite figure created using ggplot2.\n\n\npacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes,\n               tidyverse, gridExtra, dplyr \n               ) \n\n\n\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "Hands-on_Exe/Hands-on_Ex_02.html#beyond-ggplot2-annotation-ggrepel",
    "href": "Hands-on_Exe/Hands-on_Ex_02.html#beyond-ggplot2-annotation-ggrepel",
    "title": "Hands-on Exercise 02",
    "section": "Beyond ggplot2 Annotation: ggrepel",
    "text": "Beyond ggplot2 Annotation: ggrepel\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label(aes(label = ID), \n             hjust = .5, \n             vjust = -.5) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n\n\n\n\n\n\n\n\nData preparation for label and data to be plotted.\nTo make the above chart more meaningful, the following codes is to prepare the label so that the target audience of the chart could easily view the student IDs and the gender who scored higher for English and Chinese.\nIn this scenario, we are interested in students who scored above 80 for both subjects.\n\nexam_data &lt;- exam_data %&gt;%\n  mutate(ID_label=gsub(\"Student\", \"s_\",ID),\n         Gender_label= recode(GENDER, \"Female\"=\"F\", \"Male\" =\"M\"),\n         Label=str_c(ID_label,Gender_label,sep=\"\"))\n\nfiltered_data &lt;- exam_data %&gt;%\n  filter(MATHS &gt; 80, ENGLISH &gt; 80)\n\n\nggplot(data = filtered_data, \n       aes(x = MATHS, \n           y = ENGLISH)) +\n  geom_point() +\n  geom_smooth(method = lm, \n              size = 1) +  \n  geom_label(aes(label = Label, fill = GENDER,), \n             hjust = 0.1, \n             vjust = -0.1) +\n  scale_fill_manual(values = c(\"Female\" = \"pink\", \"Male\" = \"lightblue\")) +\n  coord_cartesian(xlim = c(80, 100),\n                  ylim = c(80, 100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3 for students above 80 \")+\n  theme(legend.position = \"bottom\")\n\n\n\n\n\n\n\n\n\n\nWorking with ggrepel\nPlotting of the best fit line with outliners being labelled.\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label_repel(aes(label = ID), \n                   fontface = \"bold\") +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")"
  },
  {
    "objectID": "Hands-on_Exe/Hands-on_Ex_02.html#beyond-ggplot2-themes",
    "href": "Hands-on_Exe/Hands-on_Ex_02.html#beyond-ggplot2-themes",
    "title": "Hands-on Exercise 02",
    "section": "Beyond ggplot2 Themes",
    "text": "Beyond ggplot2 Themes\nggplot2 comes with eight built-in themes, they are: theme_gray(), theme_bw(), theme_classic(), theme_dark(), theme_light(), theme_linedraw(), theme_minimal(), and theme_void().\n\ntheme_gray()\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  theme_gray() +\n  ggtitle(\"Distribution of Maths scores\") \n\n\n\n\n\n\n\n\n\n\nWorking with ggtheme package: theme_economist()\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_economist()\n\n\n\n\n\n\n\n\n\n\nWorking with hrbthems package\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum()\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum(axis_title_size = 18,\n              base_size = 15,\n              grid = \"Y\")"
  },
  {
    "objectID": "Hands-on_Exe/Hands-on_Ex_02.html#beyond-single-graph",
    "href": "Hands-on_Exe/Hands-on_Ex_02.html#beyond-single-graph",
    "title": "Hands-on Exercise 02",
    "section": "Beyond Single Graph",
    "text": "Beyond Single Graph\nWhen crafting the data story, it is common to represent the different dimensions of the data using multiple graphs and displaying them on the same page/slide to better illustrate and support the trends and observations.\nThis can be done using using function such as grid.arrange of the gridEXtra package (as used in Hands-on Exercise 1) and plot_grid() of cowplot package.\nIn this section, we will be using ggplot2 extension called pactchwork which is designed for combining seperate ggplot charts into one single image.\n\np1 &lt;- ggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") + \n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of Maths scores\")\n\n\np2 &lt;- ggplot(data=exam_data, \n             aes(x = ENGLISH)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of English scores\")\n\n\np3 &lt;- ggplot(data=exam_data, \n             aes(x= MATHS, \n                 y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n\nUse of grid.arrange in gridExtra package\n\ngrid.arrange(p1,p2, p3, ncol=3)\n\n\n\n\n\n\n\n\n\n\nCreating Composite Graphics: pathwork methods\n\np1 + p2\n\n\n\n\n\n\n\n\n\n\nCombining three ggplot2 graphs\n\n(p1 / p2) | p3\n\n\n\n\n\n\n\n\n\n\nCreating figure with insert\n\np3 + inset_element(p2, \n                   left = 0.02, \n                   bottom = 0.7, \n                   right = 0.5, \n                   top = 1)\n\n\n\n\n\n\n\n\nThe inset element can be modified to be at the bottom too by adjusting the numbers in the function. But it is important to take note that the insert chart should not cover any points of the graph.\n\np3 + inset_element(p2, \n                   left = 0.02, \n                   bottom = 0.01, \n                   right = 0.5, \n                   top = 0.3)\n\n\n\n\n\n\n\n\n\n\nCreating a composite figure by using patchwork and ggtheme\nFigure below is created by combining patchwork and theme_economist() of ggthemes package discussed earlier.\n\npatchwork &lt;- (p1 / p2) | p3\npatchwork & theme_economist()"
  },
  {
    "objectID": "Hands-on_Exe/Hands-on_Ex_00.html",
    "href": "Hands-on_Exe/Hands-on_Ex_00.html",
    "title": "Hands-on Exercise 00: Working with tidyverse",
    "section": "",
    "text": "Load tidyverse into r environment by using the code chuck below.\n\npacman::p_load(tidyverse, psych)\n\nReading “read_csv” to create tibble dataframe"
  },
  {
    "objectID": "Hands-on_Exe/Hands-on_Ex_00.html#getting-started",
    "href": "Hands-on_Exe/Hands-on_Ex_00.html#getting-started",
    "title": "Hands-on Exercise 00: Working with tidyverse",
    "section": "",
    "text": "Load tidyverse into r environment by using the code chuck below.\n\npacman::p_load(tidyverse, psych)\n\nReading “read_csv” to create tibble dataframe"
  },
  {
    "objectID": "Hands-on_Exe/Hands-on_Ex_00.html#importing-data",
    "href": "Hands-on_Exe/Hands-on_Ex_00.html#importing-data",
    "title": "Hands-on Exercise 00: Working with tidyverse",
    "section": "Importing data",
    "text": "Importing data\n\nrealis_2019 &lt;- read_csv(\"data/REALIS2019.csv\")\n\n\nPivoting data\n\npopdata_fat&lt;-read_csv(\"data/PopData2019_fat.csv\")\n\n\npopdata_long &lt;- popdata_fat %&gt;%\n  pivot_longer(c(3:21),\n               names_to = \"Age Group\",\n               values_to = \"Population\")\n\n\nwrite_rds(popdata_long, \"data/rds/popdata_long.rds\")\n\n\nrealis2019_selected &lt;- realis_2019 %&gt;%\n  select(`Project Name`,\n  `Transacted Price ($)`,\n  `Property Type`)\nrealis2019_selected\n\n# A tibble: 19,515 × 3\n   `Project Name`           `Transacted Price ($)` `Property Type`    \n   &lt;chr&gt;                                     &lt;dbl&gt; &lt;chr&gt;              \n 1 PEIRCE VIEW                              840000 Condominium        \n 2 FLORIDA PARK                            3040000 Semi-Detached House\n 3 BULLION PARK                             860000 Condominium        \n 4 CASTLE GREEN                            1000000 Condominium        \n 5 HAPPY ESTATE                            7000000 Semi-Detached House\n 6 TEACHER'S HOUSING ESTATE                2880000 Terrace House      \n 7 THE PANORAMA                            1510000 Condominium        \n 8 THE PANORAMA                             710000 Condominium        \n 9 CHIP THYE GARDEN                        2800000 Terrace House      \n10 TEACHER'S HOUSING ESTATE                2300000 Terrace House      \n# ℹ 19,505 more rows\n\n\n\nrealis_2019_filtered &lt;- realis2019_selected %&gt;%\n  filter('Property Type'== \"Condominium\"|\n  'Property Type' == \"Apartment\") %&gt;% \n  filter('Type of Sales'== \"New Sales\") %&gt;%\n  filter('Unit Prfice ($ psm)'&lt;= 13000)\n\n\n\nPutting them together\n\nrealis_2019_filtered &lt;- realis_2019 %&gt;%\n  select(`Project Name`,\n  `Transacted Price ($)`,\n  `Property Type`) %&gt;%\n  filter('Property Type'== \"Condominium\"|\n  'Property Type' == \"Apartment\") %&gt;% \n  filter('Type of Sales'== \"New Sales\") %&gt;%\n  filter('Unit Prfice ($ psm)'&lt;= 13000)"
  },
  {
    "objectID": "Hands-on_Exe/Hands-on_Ex_01.html",
    "href": "Hands-on_Exe/Hands-on_Ex_01.html",
    "title": "Hands-on Exercise 01",
    "section": "",
    "text": "Loaded gridExtra library to display the charts side by side\n\npacman:: p_load(tidyverse, gridExtra )"
  },
  {
    "objectID": "Hands-on_Exe/Hands-on_Ex_01.html#loading-of-the-required-libraries",
    "href": "Hands-on_Exe/Hands-on_Ex_01.html#loading-of-the-required-libraries",
    "title": "Hands-on Exercise 01",
    "section": "",
    "text": "Loaded gridExtra library to display the charts side by side\n\npacman:: p_load(tidyverse, gridExtra )"
  },
  {
    "objectID": "Hands-on_Exe/Hands-on_Ex_01.html#introducing-ggplot",
    "href": "Hands-on_Exe/Hands-on_Ex_01.html#introducing-ggplot",
    "title": "Hands-on Exercise 01",
    "section": "Introducing ggplot",
    "text": "Introducing ggplot\n\nexam_data &lt;-read_csv(\"data/Exam_data.csv\")\n\n\nR Graphics VS ggplot\n\npar(mfrow = c(1, 3))\n\nHis_maths &lt;- hist(exam_data$MATHS)\n\nHis_eng &lt;- hist(exam_data$ENGLISH)\n\nHis_Sci &lt;- hist(exam_data$SCIENCE)\n\n\n\n\n\n\n\n\n\n\nGrammar of Graphics\n\nggplot(data = exam_data)\n\n\n\n\n\n\n\n\nEssential Grammatical Elements in ggplot2: Aesthetic mappings\n\nggplot(data=exam_data, \n      aes(x=MATHS))"
  },
  {
    "objectID": "Hands-on_Exe/Hands-on_Ex_01.html#essential-grammatical-elements-in-ggplot2-geom",
    "href": "Hands-on_Exe/Hands-on_Ex_01.html#essential-grammatical-elements-in-ggplot2-geom",
    "title": "Hands-on Exercise 01",
    "section": "Essential Grammatical Elements in ggplot2: geom",
    "text": "Essential Grammatical Elements in ggplot2: geom\nGeometric objects are the actual data marks being ploteed on the chat. Examples include:\n\n\n\nCopied from Prof Kam webpage: https://r4va.netlify.app/chap01#working-with-theme\n\n\nA plot must have at least one geom; there is no upper limit.\nYou can add a geom to a plot using the + operator. For complete list, please refer to here.\n\nGeometric Objects: geom_bar\n\nggplot(data=exam_data,\n       aes(x=RACE)) + \n  geom_bar()\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data,\n       aes(x=MATHS)) +\n  geom_dotplot(dotsize=0.5,fill=\"red\")\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data,\n       aes(x=MATHS)) + \n  geom_dotplot(binwidth = 2.5,\n               dotsize = 0.5) +\n  scale_y_continuous(NULL, breaks = NULL) \n\n\n\n\n\n\n\n## scale_y_continuous function is used to turn off the y-axis and the breaks = NULL is required to remove the inteval.\n\n\n\nGeoetirc Objects: geom_histogram ()\nPlotting histogram with bin set to 10, instad of using the default as 30.\n\nMaths_30 &lt;- ggplot(data=exam_data, \n       aes(x=MATHS))+\n  geom_histogram()\n\nMaths_10 &lt;- ggplot(data=exam_data, \n       aes(x=MATHS))+\n  geom_histogram(binwidth=10)\n\ngrid.arrange(Maths_30, Maths_10, ncol=2)\n\n\n\n\n\n\n\n\n\n\nModifying a geometric object by changing aes ()\n\nggplot(data=exam_data,\n       aes(x=MATHS,\n           fill=GENDER)) +\n  geom_histogram(bin=20,\n                 color=\"grey30\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nReference:\n\n\n\nEnter \"grDevices::colors()\"under console to find out the colours. \n\n\n\n\n\nGeometric Objects: geom-density()\nUsing of geom-density() to computes and plots kernel density estimate, which is a smoothed version of the histogram.\nThe application of kernel smoothing for probability density estimation, i.e., a non-parametric method to estimate the probability density\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_density() \n\n\n\n\n\n\n\n\nusing the same data as\n\nMaths_gender_den &lt;- ggplot(data=exam_data, \n       aes(x = MATHS, \n           colour = GENDER)) +\n  geom_density()\n\n\n\nMaths_gender_Hist &lt;-ggplot(data=exam_data,\n       aes(x=MATHS,\n           fill=GENDER)) +\n  geom_histogram(bin=20,\n                 color=\"grey30\")\n\ngrid.arrange(Maths_gender_den, Maths_gender_Hist, ncol=2)\n\n\n\n\n\n\n\n\n\n\nGeometric Objects: geom_boxplot\n\nggplot(data=exam_data, \n       aes(y = MATHS,       \n           x= GENDER)) +    \n  geom_boxplot()\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot(notch=TRUE)\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_violin()\n\n\n\n\n\n\n\n\n\n\nGeometric Objects: geom_point()\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() \n\n\n\n\n\n\n\n\n\nwith_jitter&lt;- ggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot() +                    \n  geom_point(position=\"jitter\", \n             size = 0.5)\n\nno_jitter&lt;- ggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot() +                    \n  geom_point(position=\"jitter\", \n             size = 0.5)\n\n\ngrid.arrange(with_jitter, no_jitter, ncol=2)"
  },
  {
    "objectID": "Hands-on_Exe/Hands-on_Ex_01.html#essential-grammatical-elements-in-ggplot2-stat",
    "href": "Hands-on_Exe/Hands-on_Ex_01.html#essential-grammatical-elements-in-ggplot2-stat",
    "title": "Hands-on Exercise 01",
    "section": "Essential Grammatical Elements in ggplot2: stat",
    "text": "Essential Grammatical Elements in ggplot2: stat\nThe following Sections describe the show the statstictally transformation of data,\nThe Statistics functions statistically transform data, usually as some form of summary. For example:\nfrequency of values of a variable (bar graph) a mean a confidence limit There are two ways to use these functions: add a stat_() function and override the default geom, or add a geom_() function and override the default stat.\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot()"
  },
  {
    "objectID": "Hands-on_Exe/Hands-on_Ex_01.html#working-with-stat",
    "href": "Hands-on_Exe/Hands-on_Ex_01.html#working-with-stat",
    "title": "Hands-on Exercise 01",
    "section": "Working with stat()",
    "text": "Working with stat()\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot()\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  stat_summary(geom = \"point\",       \n               fun = \"mean\",         \n               colour =\"red\",\n               size=4)     \n\n\n\n\n\n\n\n\n\nBest Fit curve on a scatterplot\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(size=0.5)\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              linewidth=0.5)\n\n\n\n\n\n\n\n\n\n\nEssential Grammatical Elements in ggplot2: Facets"
  },
  {
    "objectID": "Hands-on_Exe/Hands-on_Ex_01.html#facet-wrap",
    "href": "Hands-on_Exe/Hands-on_Ex_01.html#facet-wrap",
    "title": "Hands-on Exercise 01",
    "section": "Facet wrap",
    "text": "Facet wrap\nfacet_wrap wraps a 1d sequence of panels into 2d. This is generally a better use of screen space than facet_grid because most displays are roughly rectangular.\nThe code chunk below plots a trellis plot using facet-wrap().\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20) +\n    facet_wrap(~ CLASS)\n\n\n\n\n\n\n\n\n\nfacet_grid() function\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20) +\n    facet_grid(~ CLASS)\n\n\n\n\n\n\n\n\n\n\nEssential Grammatical Elements in ggplot2: Coordinates\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar()\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip()\n\n\n\n\n\n\n\n\n\n\nChanging the y- and x-axis range\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, size=0.5)\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))"
  },
  {
    "objectID": "Hands-on_Exe/Hands-on_Ex_01.html#essential-grammatical-elements-in-ggplot2-themes",
    "href": "Hands-on_Exe/Hands-on_Ex_01.html#essential-grammatical-elements-in-ggplot2-themes",
    "title": "Hands-on Exercise 01",
    "section": "Essential Grammatical Elements in ggplot2: Themes",
    "text": "Essential Grammatical Elements in ggplot2: Themes\nThemes control elements of the graph not related to the data. such as background colour, size of fonts, gridlines colour of labels Built-in themes include: - theme_gray() (default) - theme_bw() - theme_classic()\nA list of theme can be found at this link. Each theme element can be conceived of as either a line (e.g. x-axis), a rectangle (e.g. graph background), or text (e.g. axis title).\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_gray()\n\n\n\n\n\n\n\n\n\nPlotting with theme classic\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_classic()\n\n\n\n\n\n\n\n\n\n\nplotting with theme minimal\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_minimal() # minimal effects\n\n\n\n\n\n\n\n\n\n\nPlotting with theme bw\n\nggplot (data=exam_data, \n        aes(x=RACE))+\n  geom_bar()+\n  coord_flip() +\n  theme_bw() +\n  ggtitle(\"Distribution of Races in Exam Data\")"
  },
  {
    "objectID": "Hands-on_Exe/Hands-on_Ex_03.html",
    "href": "Hands-on_Exe/Hands-on_Ex_03.html",
    "title": "Hands-on_Ex03",
    "section": "",
    "text": "The learning outcome of this exercise is to learn how to create interactive data visualistaion by using functions in ggiraph and plotlyr packages. The material of this page is referred to Prof Kam’s webpage allocated for Hands-on Exercise 03.\n\n\n\nggiraph package makes ‘ggplot’ graphics interactive.\nplotly is for plotting interactive statistical graphs.\nDT provides an R interface to the JavaScript library DataTables that create interactive table on html page.\ntidyverse is part of the family of modern R packages specially designed to support data science, analysis and communication task including creating static statistical graphs.\npatchwork is for combining multiple ggplot2 graphs into one figure.\n\n\npacman::p_load(ggiraph, plotly, \n               patchwork, DT, tidyverse)\n\n\n\n\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\n\n\n\nggiraph is an htmlwidget and a ggplot2 extension. It allows ggplot graphics to be interactive.\nInteractive is made with ggplot geometries that can understand three arguments:\n\nTooltip (data label): a column of data-sets that contain tooltips or data label to be displayed when the mouse is over elements.\nOnclick: a column of data-sets that contain a JavaScript function to be executed when elements are clicked.\nData_id: a column of data-sets that contain an id to be associated with elements. If it used within a shiny application, elements associated with an id (data_id) can be selected and manipulated on client and server sides.\nRefer to this article for more detail explanation.\n\n\n\n\nBelow shows a typical code chunk to plot an interactive statistical graph by using ggiraph package. Notice that the code chunk consists of two parts. First, an ggplot object will be created. Next, girafe() of ggiraph will be used to create an interactive svg object.\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = ID),\n    stackgroups = TRUE, \n    binwidth = 1, \n    method = \"histodot\") +\n  scale_y_continuous(NULL, \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCustomisation of Tooltips\n\n\n\nIf the desired Tool Tips or Data labels consisted of multiple fields, they can be customised using a few lines of codes with formatting so it will be shown up according to desired.\n\n\n\n# Cutomisation of Tooltips\nexam_data$tooltip &lt;- c(paste0(     \n  \"Name = \", exam_data$ID,         \n  \"\\n Class = \", exam_data$CLASS)) \n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = exam_data$tooltip), \n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\") +\n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 8,\n  height_svg = 8*0.618\n)\n\n\n\n\n\n\n\n\n\nCode chunk below uses opts_tooltip() of ggiraph to customize tooltip rendering by add css declarations.\nNotice that the background colour of the tooltip is black and the font colour is white and bold.\n\ntooltip_css &lt;- \"background-color:white;\nfont-style:bold; color:black;\" \n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = ID),                   \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(    #&lt;&lt;\n    opts_tooltip(    #&lt;&lt;\n      css = tooltip_css))\n)                     \n\n\n\n\n\n\n\n\n\nCode chunk below shows an advanced way to customise tooltip. In this example, a function is used to compute 90% confident interval of the mean. The derived statistics are then displayed in the tooltip.\n\ntooltip &lt;- function(y, ymax, accuracy = .01) {\n  mean &lt;- scales::number(y, accuracy = accuracy)\n  sem &lt;- scales::number(ymax - y, accuracy = accuracy)\n  paste(\"Mean maths scores:\", mean, \"+/-\", sem)\n}\n\ngg_point &lt;- ggplot(data=exam_data, \n                   aes(x = RACE),\n) +\n  stat_summary(aes(y = MATHS, \n                   tooltip = after_stat(  \n                     tooltip(y, ymax))),  \n    fun.data = \"mean_se\", \n    geom = GeomInteractiveCol,  \n    fill = \"light blue\"\n  ) +\n  stat_summary(aes(y = MATHS),\n    fun.data = mean_se,\n    geom = \"errorbar\", width = 0.2, size = 0.2\n  )\n\ngirafe(ggobj = gg_point,\n       width_svg = 8,\n       height_svg = 8*0.618)\n\n\n\n\n\n\n\n\nInteractivity: Elements associated with a data_id (i.e CLASS) will be highlighted upon mouse over.\nNoted that in the code argument, ” data_id= CLASS” so that students in the same class are being highlighted. In the earlier example, “tooltips = ID” is used to the student ID will be shown.\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(           \n    aes(data_id = CLASS),             \n    stackgroups = TRUE,               \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618                      \n)\n\n\n\n\n\nStyling hover effect\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)          \n\n\n\n\n\nDifferent from previous example, in this example the ccs customisation request are encoded directly.\n\n\n\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = CLASS, \n        data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)             \n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThe code chunk below plotted the exam data for Maths and science in a scatter plot. Data points/ students in the same CLASS will be highlighted upon mouse over. At the same time, the tooltip will show the student and Class highlighted the students from the same class. The gender are plotted in different colours to allow viewers to make quick sense of data maths and science and maths scores in each class and if there are any gaps in gender.\nBased on the data below, it is observed that students from 3A has higher score in Maths and Science compared to students from class 3I.\n\n\n\ngg_scatter &lt;- ggplot(\n  data = exam_data,\n  mapping = aes(\n    x = MATHS, y = SCIENCE, color = GENDER,\n    # here we add iteractive aesthetics\n    tooltip = exam_data$tooltip, data_id = CLASS #using the tooltip or data label derived earlier part of the Hands-on Exercise\n  )) + geom_point_interactive(\n    size = 3, hover_nearest = TRUE)\n\ncss_default_hover &lt;- girafe_css_bicolor(primary = \"yellow\", secondary = \"red\")\n\nset_girafe_defaults(\n  opts_hover = opts_hover(css = css_default_hover),\n  opts_zoom = opts_zoom(min = 1, max =200 ),\n  opts_tooltip = opts_tooltip(css = \"padding:3px;background-color:#333333;color:white;\"),\n  opts_sizing = opts_sizing(rescale = TRUE),\n  opts_toolbar = opts_toolbar(saveaspng = FALSE, position = \"bottom\", delay_mouseout = 5000)\n)\ngirafe(ggobj = gg_scatter)\n\n\n\n\n\n\n\n\nonclick argument of ggiraph provides hotlink interactivity on the web.\nThe code chunk below shown an example of onclick.\n\nexam_data$onclick &lt;- sprintf(\"window.open(\\\"%s%s\\\")\",\n\"https://www.moe.gov.sg/schoolfinder?journey=Primary%20school\",\nas.character(exam_data$ID))\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(onclick = onclick),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618) \n\n\n\n\n\n\n\n\nCoordinated multiple views methods has been implemented in the data visualization below\n\np1 &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +  \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\np2 &lt;- ggplot(data=exam_data, \n       aes(x = ENGLISH)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") + \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\ngirafe(code = print(p1 + p2), \n       width_svg = 6,\n       height_svg = 3,\n       options = list(\n         opts_hover(css = \"fill: #202020;\"),\n         opts_hover_inv(css = \"opacity:0.2;\")\n         )\n       )\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nNotice that when a data point of one of the dotplot is selected, the corresponding data point ID on the second data visualisation will be highlighted too.\nIn order to build a coordinated multiple views as shown in the example above, the following programming strategy will be used:\nAppropriate interactive functions of ggiraph will be used to create the multiple views. patchwork function of patchwork package will be used inside girafe function to create the interactive coordinated multiple views.\n\n\n\n\n\nPlotly’s R graphing library create interactive web graphics from ggplot2 graphs and/or a custom interface to the (MIT-licensed) JavaScript library plotly.js inspired by the grammar of graphics. Different from other plotly platform, plot.R is free and open source.\nThere are two ways to create interactive graph by using plotly, they are:\nby using plot_ly(), and by using ggplotly()\n\nplot_ly(data = exam_data, \n             x = ~MATHS, \n             y = ~ENGLISH)\n\n\n\n\n\n\n\n\nIn the code chunk below, color argument is mapped to a qualitative visual variable (i.e. RACE).\n\nplot_ly(data = exam_data, \n        x = ~ENGLISH, \n        y = ~MATHS, \n        color = ~RACE)\n\n\n\n\n\n\n\n\nplot_ly(data = exam_data, \n        x = ~ENGLISH, \n        y = ~MATHS, \n        color = ~GENDER)\n\n\n\n\n\n####creating an interactive scatter plot: ggplotly() method\n\np &lt;- ggplot(data=exam_data, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nggplotly(p)\n\n\n\n\n\n\n\n\n\nThe creation of a coordinated linked plot by using plotly involves three steps:\nhighlight_key() of plotly package is used as shared data. two scatterplots will be created by using ggplot2 functions. lastly, subplot() of plotly package is used to place them next to each other side-by-side.\n\nd &lt;- highlight_key(exam_data)\np1 &lt;- ggplot(data=d, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\np2 &lt;- ggplot(data=d, \n            aes(x = MATHS,\n                y = SCIENCE)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nsubplot(ggplotly(p1),\n        ggplotly(p2))\n\n\n\n\n\n\n\n\nInteractive Data Table: DT package A wrapper of the JavaScript Library DataTables\nData objects in R can be rendered as HTML tables using the JavaScript library ‘DataTables’ (typically via R Markdown or Shiny).\n\nDT::datatable(exam_data, class= \"compact\")\n\n\n\n\n\nCode chunk below is used to implement the coordinated brushing shown above.\n\nd &lt;- highlight_key(exam_data) \np &lt;- ggplot(d, \n            aes(ENGLISH, \n                MATHS)) + \n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\ngg &lt;- highlight(ggplotly(p),        \n                \"plotly_selected\")  \n \ncrosstalk::bscols(gg,               \n                  DT::datatable(d), \n                  widths = 5)  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThings to learn from the code chunk:\nhighlight() is a function of plotly package. It sets a variety of options for brushing (i.e., highlighting) multiple plots. These options are primarily designed for linking multiple plotly graphs, and may not behave as expected when linking plotly to another htmlwidget package via crosstalk. In some cases, other htmlwidgets will respect these options, such as persistent selection in leaflet.\nbscols() is a helper function of crosstalk package. It makes it easy to put HTML elements side by side. It can be called directly from the console but is especially designed to work in an R Markdown document. Warning: This will bring in all of Bootstrap!."
  },
  {
    "objectID": "Hands-on_Exe/Hands-on_Ex_03.html#programming-interactive-data-visualisation-with-r",
    "href": "Hands-on_Exe/Hands-on_Ex_03.html#programming-interactive-data-visualisation-with-r",
    "title": "Hands-on_Ex03",
    "section": "",
    "text": "The learning outcome of this exercise is to learn how to create interactive data visualistaion by using functions in ggiraph and plotlyr packages. The material of this page is referred to Prof Kam’s webpage allocated for Hands-on Exercise 03.\n\n\n\nggiraph package makes ‘ggplot’ graphics interactive.\nplotly is for plotting interactive statistical graphs.\nDT provides an R interface to the JavaScript library DataTables that create interactive table on html page.\ntidyverse is part of the family of modern R packages specially designed to support data science, analysis and communication task including creating static statistical graphs.\npatchwork is for combining multiple ggplot2 graphs into one figure.\n\n\npacman::p_load(ggiraph, plotly, \n               patchwork, DT, tidyverse)\n\n\n\n\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\n\n\n\nggiraph is an htmlwidget and a ggplot2 extension. It allows ggplot graphics to be interactive.\nInteractive is made with ggplot geometries that can understand three arguments:\n\nTooltip (data label): a column of data-sets that contain tooltips or data label to be displayed when the mouse is over elements.\nOnclick: a column of data-sets that contain a JavaScript function to be executed when elements are clicked.\nData_id: a column of data-sets that contain an id to be associated with elements. If it used within a shiny application, elements associated with an id (data_id) can be selected and manipulated on client and server sides.\nRefer to this article for more detail explanation.\n\n\n\n\nBelow shows a typical code chunk to plot an interactive statistical graph by using ggiraph package. Notice that the code chunk consists of two parts. First, an ggplot object will be created. Next, girafe() of ggiraph will be used to create an interactive svg object.\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = ID),\n    stackgroups = TRUE, \n    binwidth = 1, \n    method = \"histodot\") +\n  scale_y_continuous(NULL, \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)"
  },
  {
    "objectID": "Hands-on_Exe/Hands-on_Ex_03.html#by-hovering-the-mouse-pointer-on-an-data-point-of-interest-the-students-id-and-class-will-be-displayed.",
    "href": "Hands-on_Exe/Hands-on_Ex_03.html#by-hovering-the-mouse-pointer-on-an-data-point-of-interest-the-students-id-and-class-will-be-displayed.",
    "title": "Hands-on_Ex03",
    "section": "",
    "text": "Customisation of Tooltips\n\n\n\nIf the desired Tool Tips or Data labels consisted of multiple fields, they can be customised using a few lines of codes with formatting so it will be shown up according to desired.\n\n\n\n# Cutomisation of Tooltips\nexam_data$tooltip &lt;- c(paste0(     \n  \"Name = \", exam_data$ID,         \n  \"\\n Class = \", exam_data$CLASS)) \n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = exam_data$tooltip), \n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\") +\n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 8,\n  height_svg = 8*0.618\n)\n\n\n\n\n\n\n\n\n\nCode chunk below uses opts_tooltip() of ggiraph to customize tooltip rendering by add css declarations.\nNotice that the background colour of the tooltip is black and the font colour is white and bold.\n\ntooltip_css &lt;- \"background-color:white;\nfont-style:bold; color:black;\" \n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = ID),                   \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(    #&lt;&lt;\n    opts_tooltip(    #&lt;&lt;\n      css = tooltip_css))\n)                     \n\n\n\n\n\n\n\n\n\nCode chunk below shows an advanced way to customise tooltip. In this example, a function is used to compute 90% confident interval of the mean. The derived statistics are then displayed in the tooltip.\n\ntooltip &lt;- function(y, ymax, accuracy = .01) {\n  mean &lt;- scales::number(y, accuracy = accuracy)\n  sem &lt;- scales::number(ymax - y, accuracy = accuracy)\n  paste(\"Mean maths scores:\", mean, \"+/-\", sem)\n}\n\ngg_point &lt;- ggplot(data=exam_data, \n                   aes(x = RACE),\n) +\n  stat_summary(aes(y = MATHS, \n                   tooltip = after_stat(  \n                     tooltip(y, ymax))),  \n    fun.data = \"mean_se\", \n    geom = GeomInteractiveCol,  \n    fill = \"light blue\"\n  ) +\n  stat_summary(aes(y = MATHS),\n    fun.data = mean_se,\n    geom = \"errorbar\", width = 0.2, size = 0.2\n  )\n\ngirafe(ggobj = gg_point,\n       width_svg = 8,\n       height_svg = 8*0.618)\n\n\n\n\n\n\n\n\nInteractivity: Elements associated with a data_id (i.e CLASS) will be highlighted upon mouse over.\nNoted that in the code argument, ” data_id= CLASS” so that students in the same class are being highlighted. In the earlier example, “tooltips = ID” is used to the student ID will be shown.\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(           \n    aes(data_id = CLASS),             \n    stackgroups = TRUE,               \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618                      \n)\n\n\n\n\n\nStyling hover effect\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)          \n\n\n\n\n\nDifferent from previous example, in this example the ccs customisation request are encoded directly.\n\n\n\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = CLASS, \n        data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)             \n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThe code chunk below plotted the exam data for Maths and science in a scatter plot. Data points/ students in the same CLASS will be highlighted upon mouse over. At the same time, the tooltip will show the student and Class highlighted the students from the same class. The gender are plotted in different colours to allow viewers to make quick sense of data maths and science and maths scores in each class and if there are any gaps in gender.\nBased on the data below, it is observed that students from 3A has higher score in Maths and Science compared to students from class 3I.\n\n\n\ngg_scatter &lt;- ggplot(\n  data = exam_data,\n  mapping = aes(\n    x = MATHS, y = SCIENCE, color = GENDER,\n    # here we add iteractive aesthetics\n    tooltip = exam_data$tooltip, data_id = CLASS #using the tooltip or data label derived earlier part of the Hands-on Exercise\n  )) + geom_point_interactive(\n    size = 3, hover_nearest = TRUE)\n\ncss_default_hover &lt;- girafe_css_bicolor(primary = \"yellow\", secondary = \"red\")\n\nset_girafe_defaults(\n  opts_hover = opts_hover(css = css_default_hover),\n  opts_zoom = opts_zoom(min = 1, max =200 ),\n  opts_tooltip = opts_tooltip(css = \"padding:3px;background-color:#333333;color:white;\"),\n  opts_sizing = opts_sizing(rescale = TRUE),\n  opts_toolbar = opts_toolbar(saveaspng = FALSE, position = \"bottom\", delay_mouseout = 5000)\n)\ngirafe(ggobj = gg_scatter)\n\n\n\n\n\n\n\n\nonclick argument of ggiraph provides hotlink interactivity on the web.\nThe code chunk below shown an example of onclick.\n\nexam_data$onclick &lt;- sprintf(\"window.open(\\\"%s%s\\\")\",\n\"https://www.moe.gov.sg/schoolfinder?journey=Primary%20school\",\nas.character(exam_data$ID))\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(onclick = onclick),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618) \n\n\n\n\n\n\n\n\nCoordinated multiple views methods has been implemented in the data visualization below\n\np1 &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +  \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\np2 &lt;- ggplot(data=exam_data, \n       aes(x = ENGLISH)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") + \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\ngirafe(code = print(p1 + p2), \n       width_svg = 6,\n       height_svg = 3,\n       options = list(\n         opts_hover(css = \"fill: #202020;\"),\n         opts_hover_inv(css = \"opacity:0.2;\")\n         )\n       )\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nNotice that when a data point of one of the dotplot is selected, the corresponding data point ID on the second data visualisation will be highlighted too.\nIn order to build a coordinated multiple views as shown in the example above, the following programming strategy will be used:\nAppropriate interactive functions of ggiraph will be used to create the multiple views. patchwork function of patchwork package will be used inside girafe function to create the interactive coordinated multiple views.\n\n\n\n\n\nPlotly’s R graphing library create interactive web graphics from ggplot2 graphs and/or a custom interface to the (MIT-licensed) JavaScript library plotly.js inspired by the grammar of graphics. Different from other plotly platform, plot.R is free and open source.\nThere are two ways to create interactive graph by using plotly, they are:\nby using plot_ly(), and by using ggplotly()\n\nplot_ly(data = exam_data, \n             x = ~MATHS, \n             y = ~ENGLISH)\n\n\n\n\n\n\n\n\nIn the code chunk below, color argument is mapped to a qualitative visual variable (i.e. RACE).\n\nplot_ly(data = exam_data, \n        x = ~ENGLISH, \n        y = ~MATHS, \n        color = ~RACE)\n\n\n\n\n\n\n\n\nplot_ly(data = exam_data, \n        x = ~ENGLISH, \n        y = ~MATHS, \n        color = ~GENDER)\n\n\n\n\n\n####creating an interactive scatter plot: ggplotly() method\n\np &lt;- ggplot(data=exam_data, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nggplotly(p)\n\n\n\n\n\n\n\n\n\nThe creation of a coordinated linked plot by using plotly involves three steps:\nhighlight_key() of plotly package is used as shared data. two scatterplots will be created by using ggplot2 functions. lastly, subplot() of plotly package is used to place them next to each other side-by-side.\n\nd &lt;- highlight_key(exam_data)\np1 &lt;- ggplot(data=d, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\np2 &lt;- ggplot(data=d, \n            aes(x = MATHS,\n                y = SCIENCE)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nsubplot(ggplotly(p1),\n        ggplotly(p2))\n\n\n\n\n\n\n\n\nInteractive Data Table: DT package A wrapper of the JavaScript Library DataTables\nData objects in R can be rendered as HTML tables using the JavaScript library ‘DataTables’ (typically via R Markdown or Shiny).\n\nDT::datatable(exam_data, class= \"compact\")\n\n\n\n\n\nCode chunk below is used to implement the coordinated brushing shown above.\n\nd &lt;- highlight_key(exam_data) \np &lt;- ggplot(d, \n            aes(ENGLISH, \n                MATHS)) + \n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\ngg &lt;- highlight(ggplotly(p),        \n                \"plotly_selected\")  \n \ncrosstalk::bscols(gg,               \n                  DT::datatable(d), \n                  widths = 5)  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThings to learn from the code chunk:\nhighlight() is a function of plotly package. It sets a variety of options for brushing (i.e., highlighting) multiple plots. These options are primarily designed for linking multiple plotly graphs, and may not behave as expected when linking plotly to another htmlwidget package via crosstalk. In some cases, other htmlwidgets will respect these options, such as persistent selection in leaflet.\nbscols() is a helper function of crosstalk package. It makes it easy to put HTML elements side by side. It can be called directly from the console but is especially designed to work in an R Markdown document. Warning: This will bring in all of Bootstrap!."
  },
  {
    "objectID": "Hands-on_Exe/Hands-on_Ex_03.html#programming-animated-statistical-graphics-with-r",
    "href": "Hands-on_Exe/Hands-on_Ex_03.html#programming-animated-statistical-graphics-with-r",
    "title": "Hands-on_Ex03",
    "section": "Programming Animated Statistical Graphics with R",
    "text": "Programming Animated Statistical Graphics with R\nThe 2nd part of the exercise is use animated graphic to attract the interest of the viewer and leave a deeper impression as compared to the static charts and graphs.\n\nLoading the R packages\n\nplotly, R library for plotting interactive statistical graphs.\ngganimate, an ggplot extension for creating animated statistical graphs.\ngifski converts video frames to GIF animations using pngquant’s fancy features for efficient cross-frame palettes and temporal dithering. It produces animated GIFs that use thousands of colors per frame.\ngapminder: An excerpt of the data available at Gapminder.org. We just want to use its country_colors scheme.\ntidyverse, a family of modern R packages specially designed to support data science, analysis and communication task including creating static statistical graphs.\n\n\npacman::p_load(readxl, gifski, gapminder,\n               plotly, gganimate, tidyverse)\n\n\ncol &lt;- c(\"Country\", \"Continent\")\nglobalPop &lt;- read_xls(\"data/GlobalPopulation.xls\",\n                      sheet=\"Data\") %&gt;%\n  mutate_each_(funs(factor(.)), col) %&gt;%\n  mutate(Year = as.integer(Year))\n\n\ncol &lt;- c(\"Country\", \"Continent\")\nglobalPop &lt;- read_xls(\"data/GlobalPopulation.xls\",\n                      sheet=\"Data\") %&gt;%\n  mutate(across(col, as.factor)) %&gt;%\n  mutate(Year = as.integer(Year))"
  },
  {
    "objectID": "Hands-on_Exe/Hands-on_Ex_03.html#animated-data-visualisation-gganimate-methods",
    "href": "Hands-on_Exe/Hands-on_Ex_03.html#animated-data-visualisation-gganimate-methods",
    "title": "Hands-on_Ex03",
    "section": "Animated Data Visualisation: gganimate methods",
    "text": "Animated Data Visualisation: gganimate methods\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young')"
  },
  {
    "objectID": "Hands-on_Exe/Hands-on_Ex_03.html#building-the-animated-bubble-plot",
    "href": "Hands-on_Exe/Hands-on_Ex_03.html#building-the-animated-bubble-plot",
    "title": "Hands-on_Ex03",
    "section": "Building the animated bubble plot",
    "text": "Building the animated bubble plot\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young') +\n  transition_time(Year) +       \n  ease_aes('linear') \n\n\n\n\n\n\n\n\n\nAnimated Data Visualisation: plotly\n\ngg &lt;- ggplot(globalPop, \n       aes(x = Old, \n           y = Young, \n           size = Population, \n           colour = Country)) +\n  geom_point(aes(size = Population,\n                 frame = Year),\n             alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(x = '% Aged', \n       y = '% Young')\n\nggplotly(gg)\n\n\n\n\n\n\ngg &lt;- ggplot(globalPop, \n       aes(x = Old, \n           y = Young, \n           size = Population, \n           colour = Country)) +\n  geom_point(aes(size = Population,\n                 frame = Year),\n             alpha = 0.7) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(x = '% Aged', \n       y = '% Young') + \n  theme(legend.position='none')\n\nggplotly(gg)"
  },
  {
    "objectID": "Hands-on_Exe/Hands-on_Ex_03.html#building-an-animated-bubble-plot-plot_ly-method",
    "href": "Hands-on_Exe/Hands-on_Ex_03.html#building-an-animated-bubble-plot-plot_ly-method",
    "title": "Hands-on_Ex03",
    "section": "Building an animated bubble plot: plot_ly() method",
    "text": "Building an animated bubble plot: plot_ly() method\n\nbp &lt;- globalPop %&gt;%\n  plot_ly(x = ~Old, \n          y = ~Young, \n          size = ~Population, \n          color = ~Continent,\n          sizes = c(2, 100),\n          frame = ~Year, \n          text = ~Country, \n          hoverinfo = \"text\",\n          type = 'scatter',\n          mode = 'markers'\n          ) %&gt;%\n  layout(showlegend = FALSE)\nbp"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS608 -Visual Analytics and Applications Course Website",
    "section": "",
    "text": "Welcome to ISSS608 Visual Analytics and Applications\nIn this website, you will find my coursework prepared for this course.\nThe reference materials used in this course are found in Prof Kam Tin Seong’s course Webpage.\nhttps://isss608-ay2024-25jan.netlify.app/"
  },
  {
    "objectID": "index.html#words-of-encouragement-to-self",
    "href": "index.html#words-of-encouragement-to-self",
    "title": "ISSS608 -Visual Analytics and Applications Course Website",
    "section": "Words of encouragement to self",
    "text": "Words of encouragement to self"
  },
  {
    "objectID": "Hands-on_Exe/Hands-on_Ex_05.html",
    "href": "Hands-on_Exe/Hands-on_Ex_05.html",
    "title": "Hands-On Exercise 05",
    "section": "",
    "text": "pacman::p_load(plotly, ggtern, tidyverse)\n\n\n\n\n\n#Reading the data into R environment\npop_data &lt;- read_csv(\"data/respopagsex2000to2018_tidy.csv\") \n\n\n\n\n\n#Deriving the young, economy active and old measures\nagpop_mutated &lt;- pop_data %&gt;%\n  mutate(`Year` = as.character(Year))%&gt;%\n  spread(AG, Population) %&gt;%\n  mutate(YOUNG = rowSums(.[4:8]))%&gt;%\n  mutate(ACTIVE = rowSums(.[9:16]))  %&gt;%\n  mutate(OLD = rowSums(.[17:21])) %&gt;%\n  mutate(TOTAL = rowSums(.[22:24])) %&gt;%\n  filter(Year == 2018)%&gt;%\n  filter(TOTAL &gt; 0)\n\n\n#Building the static ternary plot\nggtern(data=agpop_mutated,aes(x=YOUNG,y=ACTIVE, z=OLD)) +\n  geom_point()\n\n\n\n\n\n\n\n\n\n#Building the static ternary plot\nggtern(data=agpop_mutated, aes(x=YOUNG,y=ACTIVE, z=OLD)) +\n  geom_point() +\n  labs(title=\"Population structure, 2015\") +\n  theme_rgbw()\n\n\n\n\n\n\n\n\n\n# reusable function for creating annotation object\nlabel &lt;- function(txt) {\n  list(\n    text = txt, \n    x = 0.1, y = 1,\n    ax = 0, ay = 0,\n    xref = \"paper\", yref = \"paper\", \n    align = \"center\",\n    font = list(family = \"serif\", size = 15, color = \"white\"),\n    bgcolor = \"#b3b3b3\", bordercolor = \"black\", borderwidth = 2\n  )\n}\n\n# reusable function for axis formatting\naxis &lt;- function(txt) {\n  list(\n    title = txt, tickformat = \".0%\", tickfont = list(size = 10)\n  )\n}\n\nternaryAxes &lt;- list(\n  aaxis = axis(\"Young\"), \n  baxis = axis(\"Active\"), \n  caxis = axis(\"Old\")\n)\n\n# Initiating a plotly visualization \nplot_ly(\n  agpop_mutated, \n  a = ~YOUNG, \n  b = ~ACTIVE, \n  c = ~OLD, \n  color = I(\"black\"), \n  type = \"scatterternary\"\n) %&gt;%\n  layout(\n    annotations = label(\"Ternary Markers\"), \n    ternary = ternaryAxes\n  )"
  },
  {
    "objectID": "Hands-on_Exe/Hands-on_Ex_05.html#hands-on-exercise-5.1",
    "href": "Hands-on_Exe/Hands-on_Ex_05.html#hands-on-exercise-5.1",
    "title": "Hands-On Exercise 05",
    "section": "",
    "text": "pacman::p_load(plotly, ggtern, tidyverse)\n\n\n\n\n\n#Reading the data into R environment\npop_data &lt;- read_csv(\"data/respopagsex2000to2018_tidy.csv\") \n\n\n\n\n\n#Deriving the young, economy active and old measures\nagpop_mutated &lt;- pop_data %&gt;%\n  mutate(`Year` = as.character(Year))%&gt;%\n  spread(AG, Population) %&gt;%\n  mutate(YOUNG = rowSums(.[4:8]))%&gt;%\n  mutate(ACTIVE = rowSums(.[9:16]))  %&gt;%\n  mutate(OLD = rowSums(.[17:21])) %&gt;%\n  mutate(TOTAL = rowSums(.[22:24])) %&gt;%\n  filter(Year == 2018)%&gt;%\n  filter(TOTAL &gt; 0)\n\n\n#Building the static ternary plot\nggtern(data=agpop_mutated,aes(x=YOUNG,y=ACTIVE, z=OLD)) +\n  geom_point()\n\n\n\n\n\n\n\n\n\n#Building the static ternary plot\nggtern(data=agpop_mutated, aes(x=YOUNG,y=ACTIVE, z=OLD)) +\n  geom_point() +\n  labs(title=\"Population structure, 2015\") +\n  theme_rgbw()\n\n\n\n\n\n\n\n\n\n# reusable function for creating annotation object\nlabel &lt;- function(txt) {\n  list(\n    text = txt, \n    x = 0.1, y = 1,\n    ax = 0, ay = 0,\n    xref = \"paper\", yref = \"paper\", \n    align = \"center\",\n    font = list(family = \"serif\", size = 15, color = \"white\"),\n    bgcolor = \"#b3b3b3\", bordercolor = \"black\", borderwidth = 2\n  )\n}\n\n# reusable function for axis formatting\naxis &lt;- function(txt) {\n  list(\n    title = txt, tickformat = \".0%\", tickfont = list(size = 10)\n  )\n}\n\nternaryAxes &lt;- list(\n  aaxis = axis(\"Young\"), \n  baxis = axis(\"Active\"), \n  caxis = axis(\"Old\")\n)\n\n# Initiating a plotly visualization \nplot_ly(\n  agpop_mutated, \n  a = ~YOUNG, \n  b = ~ACTIVE, \n  c = ~OLD, \n  color = I(\"black\"), \n  type = \"scatterternary\"\n) %&gt;%\n  layout(\n    annotations = label(\"Ternary Markers\"), \n    ternary = ternaryAxes\n  )"
  },
  {
    "objectID": "Hands-on_Exe/Hands-on_Ex_05.html#visual-correlation-analysis",
    "href": "Hands-on_Exe/Hands-on_Ex_05.html#visual-correlation-analysis",
    "title": "Hands-On Exercise 05",
    "section": "5.2 Visual Correlation Analysis",
    "text": "5.2 Visual Correlation Analysis\nLoading fo libraries for this exercise\n\npacman::p_load(corrplot, ggstatsplot, tidyverse)\n\n\nwine &lt;- read_csv(\"data/wine_quality.csv\")\n\n\nBuilding Correlation Matrix: pairs() method\n\npairs(wine[,1:11])\n\n\n\n\n\n\n\n\n\npairs(wine[,2:12])\n\n\n\n\n\n\n\n\n\npairs(wine[,2:12], upper.panel = NULL)\n\n\n\n\n\n\n\n\n\npairs(wine[,2:12], lower.panel = NULL)\n\n\n\n\n\n\n\n\n\n\nIncluding with correlation coefficients\n\npanel.cor &lt;- function(x, y, digits=2, prefix=\"\", cex.cor, ...) {\nusr &lt;- par(\"usr\")\non.exit(par(usr))\npar(usr = c(0, 1, 0, 1))\nr &lt;- abs(cor(x, y, use=\"complete.obs\"))\ntxt &lt;- format(c(r, 0.123456789), digits=digits)[1]\ntxt &lt;- paste(prefix, txt, sep=\"\")\nif(missing(cex.cor)) cex.cor &lt;- 0.8/strwidth(txt)\ntext(0.5, 0.5, txt, cex = cex.cor * (1 + r) / 2)\n}\n\npairs(wine[,2:12], \n      upper.panel = panel.cor)\n\n\n\n\n\n\n\n\n\n\nVisualising Correlation Matrix: ggcormat()\n\nggstatsplot::ggcorrmat(\n  data = wine, \n  cor.vars = 1:11)\n\n\n\n\n\n\n\n\n\nggstatsplot::ggcorrmat(\n  data = wine, \n  cor.vars = 1:11,\n  ggcorrplot.args = list(outline.color = \"black\", \n                         hc.order = TRUE,\n                         tl.cex = 10),\n  title    = \"Correlogram for wine dataset\",\n  subtitle = \"Four pairs are no significant at p &lt; 0.05\"\n)\n\n\n\n\n\n\n\n\n\nggplot.component = list(\n    theme(text=element_text(size=5),\n      axis.text.x = element_text(size = 8),\n      axis.text.y = element_text(size = 8)))\n\n\ngrouped_ggcorrmat(\n  data = wine,\n  cor.vars = 1:11,\n  grouping.var = type,\n  type = \"robust\",\n  p.adjust.method = \"holm\",\n  plotgrid.args = list(ncol = 2),\n  ggcorrplot.args = list(outline.color = \"black\", \n                         hc.order = TRUE,\n                         tl.cex = 10),\n  annotation.args = list(\n    tag_levels = \"a\",\n    title = \"Correlogram for wine dataset\",\n    subtitle = \"The measures are: alcohol, sulphates, fixed acidity, citric acid, chlorides, residual sugar, density, free sulfur dioxide and volatile acidity\",\n    caption = \"Dataset: UCI Machine Learning Repository\"\n  )\n)\n\n\n\n\n\n\n\n\n\nwine.cor &lt;- cor(wine[, 1:11])\n\n\ncorrplot(wine.cor)\n\n\n\n\n\n\n\n\n\ncorrplot(wine.cor, \n         method = \"ellipse\") \n\n\n\n\n\n\n\n\n\ncorrplot(wine.cor, \n         method = \"ellipse\", \n         type=\"lower\")\n\n\n\n\n\n\n\n\n\ncorrplot(wine.cor, \n         method = \"ellipse\", \n         type=\"lower\",\n         diag = FALSE,\n         tl.col = \"black\")\n\n\n\n\n\n\n\n\n\ncorrplot.mixed(wine.cor, \n               lower = \"ellipse\", \n               upper = \"number\",\n               tl.pos = \"lt\",\n               diag = \"l\",\n               tl.col = \"black\")\n\n\n\n\n\n\n\n\n\ncorrplot.mixed(wine.cor, \n               lower = \"ellipse\", \n               upper = \"number\",\n               tl.pos = \"lt\",\n               diag = \"l\",\n               tl.col = \"black\")\n\n\n\n\n\n\n\n\n\nwine.sig = cor.mtest(wine.cor, conf.level= .95)\n\n\ncorrplot(wine.cor,\n         method = \"number\",\n         type = \"lower\",\n         diag = FALSE,\n         tl.col = \"black\",\n         tl.srt = 45,\n         p.mat = wine.sig$p,\n         sig.level = .05)\n\n\n\n\n\n\n\n\n\ncorrplot.mixed(wine.cor, \n               lower = \"ellipse\", \n               upper = \"number\",\n               tl.pos = \"lt\",\n               diag = \"l\",\n               order=\"AOE\",\n               tl.col = \"black\")\n\n\n\n\n\n\n\n\n\ncorrplot(wine.cor, \n         method = \"ellipse\", \n         tl.pos = \"lt\",\n         tl.col = \"black\",\n         order=\"hclust\",\n         hclust.method = \"ward.D\",\n         addrect = 3)"
  },
  {
    "objectID": "Hands-on_Exe/Hands-on_Ex_05.html#heatmap-for-visualising-and-analysing-multivariate-data",
    "href": "Hands-on_Exe/Hands-on_Ex_05.html#heatmap-for-visualising-and-analysing-multivariate-data",
    "title": "Hands-On Exercise 05",
    "section": "5.3 Heatmap for Visualising and Analysing Multivariate Data",
    "text": "5.3 Heatmap for Visualising and Analysing Multivariate Data\n\npacman::p_load(seriation, dendextend, heatmaply, tidyverse)\n\n\nwh &lt;- read_csv(\"data/WHData-2018.csv\")\n\n\nrow.names(wh) &lt;- wh$Country\n\n\nTransforming the data frame into a matrix\n\nwh1 &lt;- dplyr::select(wh, c(3, 7:12))\nwh_matrix &lt;- data.matrix(wh)\n\n\nwh_heatmap &lt;- heatmap(wh_matrix,\n                      Rowv=NA, Colv=NA)\n\n\n\n\n\n\n\n\n\nwh_heatmap &lt;- heatmap(wh_matrix)\n\n\n\n\n\n\n\n\n\nwh_heatmap &lt;- heatmap(wh_matrix,\n                      scale=\"column\",\n                      cexRow = 0.6, \n                      cexCol = 0.8,\n                      margins = c(10, 4))\n\n\n\n\n\n\n\n\n\nheatmaply(mtcars)\n\n\n\n\n\n\nheatmaply(wh_matrix[, -c(1, 2, 4, 5)])\n\n\n\n\n\n\nheatmaply(wh_matrix[, -c(1, 2, 4, 5)],\n          scale = \"column\")\n\n\n\n\n\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]))\n\n\n\n\n\n\nheatmaply(percentize(wh_matrix[, -c(1, 2, 4, 5)]))\n\n\n\n\n\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          dist_method = \"euclidean\",\n          hclust_method = \"ward.D\")\n\n\n\n\n\n\nwh_d &lt;- dist(normalize(wh_matrix[, -c(1, 2, 4, 5)]), method = \"euclidean\")\ndend_expend(wh_d)[[3]]\n\n  dist_methods hclust_methods     optim\n1      unknown         ward.D 0.6137851\n2      unknown        ward.D2 0.6289186\n3      unknown         single 0.4774362\n4      unknown       complete 0.6434009\n5      unknown        average 0.6701688\n6      unknown       mcquitty 0.5020102\n7      unknown         median 0.5901833\n8      unknown       centroid 0.6338734\n\n\n\nwh_clust &lt;- hclust(wh_d, method = \"average\")\nnum_k &lt;- find_k(wh_clust)\nplot(num_k)\n\n\n\n\n\n\n\n\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          dist_method = \"euclidean\",\n          hclust_method = \"average\",\n          k_row = 3)\n\n\n\n\n\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          seriate = \"OLO\")\n\n\n\n\n\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          seriate = \"GW\")\n\n\n\n\n\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          seriate = \"mean\")\n\n\n\n\n\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          seriate = \"none\")\n\n\n\n\n\n\nWorking with colour palettes\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          seriate = \"none\",\n          colors = Blues)\n\n\n\n\n\nThe finishing touch\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          Colv=NA,\n          seriate = \"none\",\n          colors = Blues,\n          k_row = 5,\n          margins = c(NA,200,60,NA),\n          fontsize_row = 4,\n          fontsize_col = 5,\n          main=\"World Happiness Score and Variables by Country, 2018 \\nDataTransformation using Normalise Method\",\n          xlab = \"World Happiness Indicators\",\n          ylab = \"World Countries\"\n          )"
  },
  {
    "objectID": "Hands-on_Exe/Hands-on_Ex_05.html#visual-multivariate-analysis-with-parallel-coordinates-plot",
    "href": "Hands-on_Exe/Hands-on_Ex_05.html#visual-multivariate-analysis-with-parallel-coordinates-plot",
    "title": "Hands-On Exercise 05",
    "section": "5.4 Visual Multivariate Analysis with Parallel Coordinates Plot",
    "text": "5.4 Visual Multivariate Analysis with Parallel Coordinates Plot\n\npacman::p_load(GGally, parallelPlot, tidyverse)\n\n\nwh &lt;- read_csv(\"data/WHData-2018.csv\")\n\n\nggparcoord(data = wh, \n           columns = c(7:12))\n\n\n\n\n\n\n\n\n\nggparcoord(data = wh, \n           columns = c(7:12), \n           groupColumn = 2,\n           scale = \"uniminmax\",\n           alphaLines = 0.2,\n           boxplot = TRUE, \n           title = \"Parallel Coordinates Plot of World Happines Variables\")\n\n\n\n\n\n\n\n\n\nggparcoord(data = wh, \n           columns = c(7:12), \n           groupColumn = 2,\n           scale = \"uniminmax\",\n           alphaLines = 0.2,\n           boxplot = TRUE, \n           title = \"Multiple Parallel Coordinates Plots of World Happines Variables by Region\") +\n  facet_wrap(~ Region)\n\n\n\n\n\n\n\n\n\nggparcoord(data = wh, \n           columns = c(7:12), \n           groupColumn = 2,\n           scale = \"uniminmax\",\n           alphaLines = 0.2,\n           boxplot = TRUE, \n           title = \"Multiple Parallel Coordinates Plots of World Happines Variables by Region\") +\n  facet_wrap(~ Region) + \n  theme(axis.text.x = element_text(angle = 30))\n\n\n\n\n\n\n\n\n\nRotating x-axis text label\n\nggparcoord(data = wh, \n           columns = c(7:12), \n           groupColumn = 2,\n           scale = \"uniminmax\",\n           alphaLines = 0.2,\n           boxplot = TRUE, \n           title = \"Multiple Parallel Coordinates Plots of World Happines Variables by Region\") +\n  facet_wrap(~ Region) + \n  theme(axis.text.x = element_text(angle = 30, hjust=1))\n\n\n\n\n\n\n\n\n\n\nThe basic plot\n\nwh &lt;- wh %&gt;%\n  select(\"Happiness score\", c(7:12))\nparallelPlot(wh,\n             width = 320,\n             height = 250)\n\n\n\n\n\n\nparallelPlot(wh,\n             rotateTitle = TRUE)\n\n\n\n\n\n\nparallelPlot(wh,\n             continuousCS = \"YlOrRd\",\n             rotateTitle = TRUE)\n\n\n\n\n\n\nhistoVisibility &lt;- rep(TRUE, ncol(wh))\nparallelPlot(wh,\n             rotateTitle = TRUE,\n             histoVisibility = histoVisibility)"
  },
  {
    "objectID": "Hands-on_Exe/Hands-on_Ex_05.html#treemap-visualisation-with-r",
    "href": "Hands-on_Exe/Hands-on_Ex_05.html#treemap-visualisation-with-r",
    "title": "Hands-On Exercise 05",
    "section": "5.5 Treemap Visualisation with R",
    "text": "5.5 Treemap Visualisation with R\n\npacman::p_load(treemap, treemapify, tidyverse) \n\n\nrealis2018 &lt;- read_csv(\"data/realis2018.csv\")\n\n\nrealis2018_grouped &lt;- group_by(realis2018, `Project Name`,\n                               `Planning Region`, `Planning Area`, \n                               `Property Type`, `Type of Sale`)\nrealis2018_summarised &lt;- summarise(realis2018_grouped, \n                          `Total Unit Sold` = sum(`No. of Units`, na.rm = TRUE),\n                          `Total Area` = sum(`Area (sqm)`, na.rm = TRUE),\n                          `Median Unit Price ($ psm)` = median(`Unit Price ($ psm)`, na.rm = TRUE), \n                          `Median Transacted Price` = median(`Transacted Price ($)`, na.rm = TRUE))\n\n\nrealis2018_summarised &lt;- realis2018 %&gt;% \n  group_by(`Project Name`,`Planning Region`, \n           `Planning Area`, `Property Type`, \n           `Type of Sale`) %&gt;%\n  summarise(`Total Unit Sold` = sum(`No. of Units`, na.rm = TRUE), \n            `Total Area` = sum(`Area (sqm)`, na.rm = TRUE),\n            `Median Unit Price ($ psm)` = median(`Unit Price ($ psm)`, na.rm = TRUE),\n            `Median Transacted Price` = median(`Transacted Price ($)`, na.rm = TRUE))\n\n\nrealis2018_selected &lt;- realis2018_summarised %&gt;%\n  filter(`Property Type` == \"Condominium\", `Type of Sale` == \"Resale\")\n\n\ntreemap(realis2018_selected,\n        index=c(\"Planning Region\", \"Planning Area\", \"Project Name\"),\n        vSize=\"Total Unit Sold\",\n        vColor=\"Median Unit Price ($ psm)\",\n        title=\"Resale Condominium by Planning Region and Area, 2017\",\n        title.legend = \"Median Unit Price (S$ per sq. m)\"\n        )\n\n\n\n\n\n\n\n\n\ntreemap(realis2018_selected,\n        index=c(\"Planning Region\", \"Planning Area\", \"Project Name\"),\n        vSize=\"Total Unit Sold\",\n        vColor=\"Median Unit Price ($ psm)\",\n        type = \"value\",\n        title=\"Resale Condominium by Planning Region and Area, 2017\",\n        title.legend = \"Median Unit Price (S$ per sq. m)\"\n        )\n\n\n\n\n\n\n\n\n\ntreemap(realis2018_selected,\n        index=c(\"Planning Region\", \"Planning Area\", \"Project Name\"),\n        vSize=\"Total Unit Sold\",\n        vColor=\"Median Unit Price ($ psm)\",\n        type=\"value\",\n        palette=\"RdYlBu\", \n        title=\"Resale Condominium by Planning Region and Area, 2017\",\n        title.legend = \"Median Unit Price (S$ per sq. m)\"\n        )\n\n\n\n\n\n\n\n\n\ntreemap(realis2018_selected,\n        index=c(\"Planning Region\", \"Planning Area\", \"Project Name\"),\n        vSize=\"Total Unit Sold\",\n        vColor=\"Median Unit Price ($ psm)\",\n        type=\"manual\",\n        palette=\"RdYlBu\", \n        title=\"Resale Condominium by Planning Region and Area, 2017\",\n        title.legend = \"Median Unit Price (S$ per sq. m)\"\n        )\n\n\n\n\n\n\n\n\n\ntreemap(realis2018_selected,\n        index=c(\"Planning Region\", \"Planning Area\", \"Project Name\"),\n        vSize=\"Total Unit Sold\",\n        vColor=\"Median Unit Price ($ psm)\",\n        type=\"manual\",\n        palette=\"Blues\", \n        title=\"Resale Condominium by Planning Region and Area, 2017\",\n        title.legend = \"Median Unit Price (S$ per sq. m)\"\n        )\n\n\n\n\n\n\n\n\n\ntreemap(realis2018_selected,\n        index=c(\"Planning Region\", \"Planning Area\", \"Project Name\"),\n        vSize=\"Total Unit Sold\",\n        vColor=\"Median Unit Price ($ psm)\",\n        type=\"manual\",\n        palette=\"Blues\", \n        algorithm = \"squarified\",\n        title=\"Resale Condominium by Planning Region and Area, 2017\",\n        title.legend = \"Median Unit Price (S$ per sq. m)\"\n        )\n\n\n\n\n\n\n\n\n\ntreemap(realis2018_selected,\n        index=c(\"Planning Region\", \"Planning Area\", \"Project Name\"),\n        vSize=\"Total Unit Sold\",\n        vColor=\"Median Unit Price ($ psm)\",\n        type=\"manual\",\n        palette=\"Blues\", \n        algorithm = \"pivotSize\",\n        sortID = \"Median Transacted Price\",\n        title=\"Resale Condominium by Planning Region and Area, 2017\",\n        title.legend = \"Median Unit Price (S$ per sq. m)\"\n        )\n\n\n\n\n\n\n\n\n\nDesigning Treemap using treemapify Package\n\nggplot(data=realis2018_selected, \n       aes(area = `Total Unit Sold`,\n           fill = `Median Unit Price ($ psm)`),\n       layout = \"scol\",\n       start = \"bottomleft\") + \n  geom_treemap() +\n  scale_fill_gradient(low = \"light blue\", high = \"blue\")\n\n\n\n\n\n\n\n\n\n\nDefining Hierarchy\n\nggplot(data=realis2018_selected, \n       aes(area = `Total Unit Sold`,\n           fill = `Median Unit Price ($ psm)`,\n           subgroup = `Planning Region`),\n       start = \"topleft\") + \n  geom_treemap()\n\n\n\n\n\n\n\n\n\nggplot(data=realis2018_selected, \n       aes(area = `Total Unit Sold`,\n           fill = `Median Unit Price ($ psm)`,\n           subgroup = `Planning Region`,\n           subgroup2 = `Planning Area`)) + \n  geom_treemap()\n\n\n\n\n\n\n\n\nAdding boundary line\n\nggplot(data=realis2018_selected, \n       aes(area = `Total Unit Sold`,\n           fill = `Median Unit Price ($ psm)`,\n           subgroup = `Planning Region`,\n           subgroup2 = `Planning Area`)) + \n  geom_treemap() +\n  geom_treemap_subgroup2_border(colour = \"gray40\",\n                                size = 2) +\n  geom_treemap_subgroup_border(colour = \"gray20\")\n\n\n\n\n\n\n\n\n\n\nDesigning Interactive Treemap using d3treeR\ninstall.packages(“devtools”)\n\nlibrary(devtools)\ninstall_github(\"timelyportfolio/d3treeR\")\n\n\nlibrary(d3treeR)\n\n\ntm &lt;- treemap(realis2018_summarised,\n        index=c(\"Planning Region\", \"Planning Area\"),\n        vSize=\"Total Unit Sold\",\n        vColor=\"Median Unit Price ($ psm)\",\n        type=\"value\",\n        title=\"Private Residential Property Sold, 2017\",\n        title.legend = \"Median Unit Price (S$ per sq. m)\"\n        )\n\n\n\n\n\n\n\n\n\nd3tree(tm,rootname = \"Singapore\" )"
  },
  {
    "objectID": "In-class_Exe/In-class_Ex05.html",
    "href": "In-class_Exe/In-class_Ex05.html",
    "title": "In-class 05",
    "section": "",
    "text": "pacman::p_load(tidyverse, readxl, SmartEDA, easystats,gtsummary)\n\n\nImporting Data\n\ncar_resale &lt;-\n  read_xls(\"data/In_Class_Ex05/ToyotaCorolla.xls\", \"data\")\n\n\nsummary(car_resale)\n\n       Id            Model               Price         Age_08_04    \n Min.   :   1.0   Length:1436        Min.   : 4350   Min.   : 1.00  \n 1st Qu.: 361.8   Class :character   1st Qu.: 8450   1st Qu.:44.00  \n Median : 721.5   Mode  :character   Median : 9900   Median :61.00  \n Mean   : 721.6                      Mean   :10731   Mean   :55.95  \n 3rd Qu.:1081.2                      3rd Qu.:11950   3rd Qu.:70.00  \n Max.   :1442.0                      Max.   :32500   Max.   :80.00  \n   Mfg_Month         Mfg_Year          KM         Quarterly_Tax   \n Min.   : 1.000   Min.   :1998   Min.   :     1   Min.   : 19.00  \n 1st Qu.: 3.000   1st Qu.:1998   1st Qu.: 43000   1st Qu.: 69.00  \n Median : 5.000   Median :1999   Median : 63390   Median : 85.00  \n Mean   : 5.549   Mean   :2000   Mean   : 68533   Mean   : 87.12  \n 3rd Qu.: 8.000   3rd Qu.:2001   3rd Qu.: 87021   3rd Qu.: 85.00  \n Max.   :12.000   Max.   :2004   Max.   :243000   Max.   :283.00  \n     Weight     Guarantee_Period    HP_Bin             CC_bin         \n Min.   :1000   Min.   : 3.000   Length:1436        Length:1436       \n 1st Qu.:1040   1st Qu.: 3.000   Class :character   Class :character  \n Median :1070   Median : 3.000   Mode  :character   Mode  :character  \n Mean   :1072   Mean   : 3.815                                        \n 3rd Qu.:1085   3rd Qu.: 3.000                                        \n Max.   :1615   Max.   :36.000                                        \n     Doors           Gears         Cylinders  Fuel_Type        \n Min.   :2.000   Min.   :3.000   Min.   :4   Length:1436       \n 1st Qu.:3.000   1st Qu.:5.000   1st Qu.:4   Class :character  \n Median :4.000   Median :5.000   Median :4   Mode  :character  \n Mean   :4.033   Mean   :5.026   Mean   :4                     \n 3rd Qu.:5.000   3rd Qu.:5.000   3rd Qu.:4                     \n Max.   :5.000   Max.   :6.000   Max.   :4                     \n    Color             Met_Color        Automatic       Mfr_Guarantee   \n Length:1436        Min.   :0.0000   Min.   :0.00000   Min.   :0.0000  \n Class :character   1st Qu.:0.0000   1st Qu.:0.00000   1st Qu.:0.0000  \n Mode  :character   Median :1.0000   Median :0.00000   Median :0.0000  \n                    Mean   :0.6748   Mean   :0.05571   Mean   :0.4095  \n                    3rd Qu.:1.0000   3rd Qu.:0.00000   3rd Qu.:1.0000  \n                    Max.   :1.0000   Max.   :1.00000   Max.   :1.0000  \n BOVAG_Guarantee       ABS            Airbag_1         Airbag_2     \n Min.   :0.0000   Min.   :0.0000   Min.   :0.0000   Min.   :0.0000  \n 1st Qu.:1.0000   1st Qu.:1.0000   1st Qu.:1.0000   1st Qu.:0.0000  \n Median :1.0000   Median :1.0000   Median :1.0000   Median :1.0000  \n Mean   :0.8955   Mean   :0.8134   Mean   :0.9708   Mean   :0.7228  \n 3rd Qu.:1.0000   3rd Qu.:1.0000   3rd Qu.:1.0000   3rd Qu.:1.0000  \n Max.   :1.0000   Max.   :1.0000   Max.   :1.0000   Max.   :1.0000  \n     Airco        Automatic_airco   Boardcomputer      CD_Player     \n Min.   :0.0000   Min.   :0.00000   Min.   :0.0000   Min.   :0.0000  \n 1st Qu.:0.0000   1st Qu.:0.00000   1st Qu.:0.0000   1st Qu.:0.0000  \n Median :1.0000   Median :0.00000   Median :0.0000   Median :0.0000  \n Mean   :0.5084   Mean   :0.05641   Mean   :0.2946   Mean   :0.2187  \n 3rd Qu.:1.0000   3rd Qu.:0.00000   3rd Qu.:1.0000   3rd Qu.:0.0000  \n Max.   :1.0000   Max.   :1.00000   Max.   :1.0000   Max.   :1.0000  \n  Central_Lock    Powered_Windows Power_Steering       Radio       \n Min.   :0.0000   Min.   :0.000   Min.   :0.0000   Min.   :0.0000  \n 1st Qu.:0.0000   1st Qu.:0.000   1st Qu.:1.0000   1st Qu.:0.0000  \n Median :1.0000   Median :1.000   Median :1.0000   Median :0.0000  \n Mean   :0.5801   Mean   :0.562   Mean   :0.9777   Mean   :0.1462  \n 3rd Qu.:1.0000   3rd Qu.:1.000   3rd Qu.:1.0000   3rd Qu.:0.0000  \n Max.   :1.0000   Max.   :1.000   Max.   :1.0000   Max.   :1.0000  \n   Mistlamps      Sport_Model     Backseat_Divider  Metallic_Rim   \n Min.   :0.000   Min.   :0.0000   Min.   :0.0000   Min.   :0.0000  \n 1st Qu.:0.000   1st Qu.:0.0000   1st Qu.:1.0000   1st Qu.:0.0000  \n Median :0.000   Median :0.0000   Median :1.0000   Median :0.0000  \n Mean   :0.257   Mean   :0.3001   Mean   :0.7702   Mean   :0.2047  \n 3rd Qu.:1.000   3rd Qu.:1.0000   3rd Qu.:1.0000   3rd Qu.:0.0000  \n Max.   :1.000   Max.   :1.0000   Max.   :1.0000   Max.   :1.0000  \n Radio_cassette      Tow_Bar      \n Min.   :0.0000   Min.   :0.0000  \n 1st Qu.:0.0000   1st Qu.:0.0000  \n Median :0.0000   Median :0.0000  \n Mean   :0.1455   Mean   :0.2779  \n 3rd Qu.:0.0000   3rd Qu.:1.0000  \n Max.   :1.0000   Max.   :1.0000  \n\n\n\nlist(car_resale)\n\n[[1]]\n# A tibble: 1,436 × 38\n      Id Model    Price Age_08_04 Mfg_Month Mfg_Year     KM Quarterly_Tax Weight\n   &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt;         &lt;dbl&gt;  &lt;dbl&gt;\n 1    81 TOYOTA … 18950        25         8     2002  20019           100   1180\n 2     1 TOYOTA … 13500        23        10     2002  46986           210   1165\n 3     2 TOYOTA … 13750        23        10     2002  72937           210   1165\n 4     3  TOYOTA… 13950        24         9     2002  41711           210   1165\n 5     4 TOYOTA … 14950        26         7     2002  48000           210   1165\n 6     5 TOYOTA … 13750        30         3     2002  38500           210   1170\n 7     6 TOYOTA … 12950        32         1     2002  61000           210   1170\n 8     7  TOYOTA… 16900        27         6     2002  94612           210   1245\n 9     8 TOYOTA … 18600        30         3     2002  75889           210   1245\n10    44 TOYOTA … 16950        27         6     2002 110404           234   1255\n# ℹ 1,426 more rows\n# ℹ 29 more variables: Guarantee_Period &lt;dbl&gt;, HP_Bin &lt;chr&gt;, CC_bin &lt;chr&gt;,\n#   Doors &lt;dbl&gt;, Gears &lt;dbl&gt;, Cylinders &lt;dbl&gt;, Fuel_Type &lt;chr&gt;, Color &lt;chr&gt;,\n#   Met_Color &lt;dbl&gt;, Automatic &lt;dbl&gt;, Mfr_Guarantee &lt;dbl&gt;,\n#   BOVAG_Guarantee &lt;dbl&gt;, ABS &lt;dbl&gt;, Airbag_1 &lt;dbl&gt;, Airbag_2 &lt;dbl&gt;,\n#   Airco &lt;dbl&gt;, Automatic_airco &lt;dbl&gt;, Boardcomputer &lt;dbl&gt;, CD_Player &lt;dbl&gt;,\n#   Central_Lock &lt;dbl&gt;, Powered_Windows &lt;dbl&gt;, Power_Steering &lt;dbl&gt;, …\n\n\n\nsummary1  &lt;- car_resale %&gt;%\n  ExpData(type=1)\n\nmaking it into object class and further transform into a table in R\n\ncar_resale %&gt;% \n  ExpData(type=2)\n\n   Index    Variable_Name Variable_Type Sample_n Missing_Count Per_of_Missing\n1      1               Id       numeric     1436             0              0\n2      2            Model     character     1436             0              0\n3      3            Price       numeric     1436             0              0\n4      4        Age_08_04       numeric     1436             0              0\n5      5        Mfg_Month       numeric     1436             0              0\n6      6         Mfg_Year       numeric     1436             0              0\n7      7               KM       numeric     1436             0              0\n8      8    Quarterly_Tax       numeric     1436             0              0\n9      9           Weight       numeric     1436             0              0\n10    10 Guarantee_Period       numeric     1436             0              0\n11    11           HP_Bin     character     1436             0              0\n12    12           CC_bin     character     1436             0              0\n13    13            Doors       numeric     1436             0              0\n14    14            Gears       numeric     1436             0              0\n15    15        Cylinders       numeric     1436             0              0\n16    16        Fuel_Type     character     1436             0              0\n17    17            Color     character     1436             0              0\n18    18        Met_Color       numeric     1436             0              0\n19    19        Automatic       numeric     1436             0              0\n20    20    Mfr_Guarantee       numeric     1436             0              0\n21    21  BOVAG_Guarantee       numeric     1436             0              0\n22    22              ABS       numeric     1436             0              0\n23    23         Airbag_1       numeric     1436             0              0\n24    24         Airbag_2       numeric     1436             0              0\n25    25            Airco       numeric     1436             0              0\n26    26  Automatic_airco       numeric     1436             0              0\n27    27    Boardcomputer       numeric     1436             0              0\n28    28        CD_Player       numeric     1436             0              0\n29    29     Central_Lock       numeric     1436             0              0\n30    30  Powered_Windows       numeric     1436             0              0\n31    31   Power_Steering       numeric     1436             0              0\n32    32            Radio       numeric     1436             0              0\n33    33        Mistlamps       numeric     1436             0              0\n34    34      Sport_Model       numeric     1436             0              0\n35    35 Backseat_Divider       numeric     1436             0              0\n36    36     Metallic_Rim       numeric     1436             0              0\n37    37   Radio_cassette       numeric     1436             0              0\n38    38          Tow_Bar       numeric     1436             0              0\n   No_of_distinct_values\n1                   1436\n2                    372\n3                    236\n4                     77\n5                     12\n6                      7\n7                   1263\n8                     13\n9                     59\n10                     9\n11                     3\n12                     3\n13                     4\n14                     4\n15                     1\n16                     3\n17                    10\n18                     2\n19                     2\n20                     2\n21                     2\n22                     2\n23                     2\n24                     2\n25                     2\n26                     2\n27                     2\n28                     2\n29                     2\n30                     2\n31                     2\n32                     2\n33                     2\n34                     2\n35                     2\n36                     2\n37                     2\n38                     2"
  }
]